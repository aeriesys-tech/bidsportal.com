{"ast":null,"code":"import moment from 'moment';\nexport default {\n  components: {},\n  data() {\n    return {\n      meta: {\n        region: '',\n        from_date: '',\n        to_date: ''\n      },\n      tenders: [],\n      errors: []\n    };\n  },\n  mounted() {},\n  watch: {},\n  methods: {\n    showBids() {\n      if (this.meta.region == 'State') {\n        this.getTendersRange('getStateTendersRange');\n      } else if (this.meta.region == 'Federal') {\n        this.getFederalTendersRange();\n      } else if (this.meta.region == 'Private') {\n        this.getPrivateTendersRange();\n      } else if (this.meta.region == 'International') {\n        this.getInternationalTendersRange();\n      } else {\n        this.getStateTendersRange();\n      }\n    },\n    deleteBids() {\n      if (this.meta.region == 'State') {\n        this.deleteStateTendersRange();\n      } else if (this.meta.region == 'Federal') {\n        this.deleteFederalTendersRange();\n      } else if (this.meta.region == 'Private') {\n        this.deletePrivateTendersRange();\n      } else if (this.meta.region == 'International') {\n        this.deleteInternationalTendersRange();\n      } else {\n        this.getStateTendersRange();\n      }\n    },\n    getTendersRange(url) {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.$store.dispatch(\"post\", {\n        uri: url,\n        data: vm.meta\n      }).then(response => {\n        loader.hide();\n        vm.tenders = response.data.data;\n      }).catch(function (error) {\n        loader.hide();\n        console.log(error);\n        vm.errors = error.response.data.errors;\n      });\n    },\n    deleteStateTendersRange() {\n      if (confirm('Are you sure you want to delete State tenders from ' + moment(this.meta.from_date).format('DD-MM-YYYY') + ' to ' + moment(this.meta.to_date).format('DD-MM-YYYY'))) {\n        let vm = this;\n        let loader = vm.$loading.show();\n        vm.$store.dispatch(\"post\", {\n          uri: \"deleteStateTendersRange\",\n          data: vm.meta\n        }).then(() => {\n          loader.hide();\n          vm.getStateTendersRange;\n          vm.$store.dispatch(\"success\", \"State tenders deleted successfully\");\n        }).catch(function (error) {\n          loader.hide();\n          console.log(error);\n          vm.$store.dispatch(\"error\", error.response.data.message);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["moment","components","data","meta","region","from_date","to_date","tenders","errors","mounted","watch","methods","showBids","getTendersRange","getFederalTendersRange","getPrivateTendersRange","getInternationalTendersRange","getStateTendersRange","deleteBids","deleteStateTendersRange","deleteFederalTendersRange","deletePrivateTendersRange","deleteInternationalTendersRange","url","vm","loader","$loading","show","$store","dispatch","uri","then","response","hide","catch","error","console","log","confirm","format","message"],"sources":["C:\\xampp\\htdocs\\bidsportal_new\\admin\\src\\views\\DeleteTenders.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid pb-3\">\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <h2 class=\"main-title mb-2\">Delete Bids</h2>\r\n        </div>\r\n        <div class=\"row g-3\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <div class=\"d-sm-flex align-items-center justify-content-between\">\r\n                            <h6 class=\"card-title mb-0\"><strong>Delete Bids</strong></h6>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label>From Date (Posted Date)</label>\r\n                                    <input type=\"date\" class=\"form-control\" :class=\"{ 'is-invalid': errors.from_date }\" v-model=\"meta.from_date\">\r\n                                    <span v-if=\"errors.from_date\" class=\"invalid-feedback\">{{ errors?.from_date[0] }}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label>To Date (Posted Date)</label>\r\n                                    <input type=\"date\" class=\"form-control\" :class=\"{ 'is-invalid': errors.to_date }\" v-model=\"meta.to_date\">\r\n                                    <span v-if=\"errors.to_date\" class=\"invalid-feedback\">{{ errors?.to_date[0] }}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Region</label>\r\n                                    <select class=\"form-control\" v-model=\"meta.region\" :class=\"{ 'is-invalid': errors.region }\">\r\n                                        <option value=\"\">Select Region</option>\r\n                                        <option value=\"State\">State</option>\r\n                                        <option value=\"Federal\">Federal</option>\r\n                                        <option value=\"Private\">Private</option>\r\n                                        <option value=\"International\">International</option>\r\n                                    </select>\r\n                                    <span v-if=\"errors.region\" class=\"invalid-feedback\">{{ errors?.region[0] }}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div style=\"float:right\">\r\n                                    <button class=\"btn btn-primary mt-3 mx-2\" @click=\"showBids()\">Show Bids</button>\r\n                                    <button class=\"btn btn-danger mt-3\" @click=\"deleteBids()\">Delete Bids</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"table-responsive table-responsive-sm mt-2\">\r\n                            <table class=\"table table-striped table-sm text-wrap table-bordered mb-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"text-center\" width=\"1%\">#</th>\r\n                                        <th @click=\"sort('tender_no')\" width=\"5%\">\r\n                                            Tender No\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword == 'tender_no' && meta.order_by == 'asc'\"\r\n                                                    class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword == 'tender_no' && meta.order_by == 'desc'\"\r\n                                                    class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th @click=\"sort('title')\" width=\"10%\">\r\n                                            Tender Title\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword == 'title' && meta.order_by == 'asc'\"\r\n                                                    class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword == 'title' && meta.order_by == 'desc'\"\r\n                                                    class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th @click=\"sort('posted_date')\" width=\"5%\">\r\n                                            Publish Date\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword == 'posted_date' && meta.order_by == 'asc'\"\r\n                                                    class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword == 'posted_date' && meta.order_by == 'desc'\"\r\n                                                    class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th @click=\"sort('posted_date')\" width=\"5%\">\r\n                                            Opening Date\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword == 'posted_date' && meta.order_by == 'asc'\"\r\n                                                    class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword == 'posted_date' && meta.order_by == 'desc'\"\r\n                                                    class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th @click=\"sort('posted_date')\" width=\"5%\">\r\n                                            Expiry Date\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword == 'posted_date' && meta.order_by == 'asc'\"\r\n                                                    class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword == 'posted_date' && meta.order_by == 'desc'\"\r\n                                                    class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr v-if=\"!tenders.length\">\r\n                                        <td colspan=\"6\" class=\"text-center\">No records found</td>\r\n                                    </tr>\r\n                                    <tr v-for=\"tender, key in tenders\" :key=\"key\">\r\n                                        <td class=\"text-center\">{{ key+1 }}</td>\r\n                                        <td class=\"wrap-text\">{{ tender.tender_no }}</td>\r\n                                        <td class=\"wrap-text \">{{ tender.title }}</td>\r\n                                        <td>{{ tender.posted_date_parsed }}</td>\r\n                                        <td>{{ tender.opening_date_parsed }}</td>\r\n                                        <td>{{ tender.expiry_date_parsed }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport moment from 'moment';\r\nexport default {\r\n    components: {\r\n    },\r\n    data() {\r\n        return {\r\n            meta: {\r\n                region: '',\r\n                from_date: '',\r\n                to_date: ''\r\n            },\r\n            tenders:[],\r\n            errors:[]\r\n        };\r\n    },\r\n    mounted() {\r\n    },\r\n\r\n    watch: {\r\n    },\r\n\r\n    methods: {\r\n        showBids(){\r\n            if(this.meta.region == 'State'){\r\n                this.getTendersRange('getStateTendersRange')\r\n            } else if(this.meta.region == 'Federal'){\r\n                this.getFederalTendersRange()\r\n            } else if(this.meta.region == 'Private'){\r\n                this.getPrivateTendersRange()\r\n            } else if(this.meta.region == 'International'){\r\n                this.getInternationalTendersRange()\r\n            } else{\r\n                this.getStateTendersRange()\r\n            }\r\n        },\r\n\r\n        deleteBids(){\r\n            if(this.meta.region == 'State'){\r\n                this.deleteStateTendersRange()\r\n            } else if(this.meta.region == 'Federal'){\r\n                this.deleteFederalTendersRange()\r\n            } else if(this.meta.region == 'Private'){\r\n                this.deletePrivateTendersRange()\r\n            } else if(this.meta.region == 'International'){\r\n                this.deleteInternationalTendersRange()\r\n            } else{\r\n                this.getStateTendersRange()\r\n            }\r\n        },\r\n\r\n        getTendersRange(url) {\r\n            let vm = this\r\n            let loader = vm.$loading.show()\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: url, data: vm.meta })\r\n                .then((response) => {\r\n                    loader.hide()\r\n                    vm.tenders = response.data.data\r\n                })\r\n                .catch(function (error) {\r\n                    loader.hide()\r\n                    console.log(error)\r\n                    vm.errors = error.response.data.errors\r\n                });\r\n        },\r\n        deleteStateTendersRange() {\r\n            if(confirm('Are you sure you want to delete State tenders from '+moment(this.meta.from_date).format('DD-MM-YYYY')+ ' to '+ moment(this.meta.to_date).format('DD-MM-YYYY'))){\r\n                let vm = this\r\n                let loader = vm.$loading.show()\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"deleteStateTendersRange\", data: vm.meta })\r\n                    .then(() => {\r\n                        loader.hide()\r\n                        vm.getStateTendersRange\r\n                        vm.$store.dispatch(\"success\", \"State tenders deleted successfully\");\r\n                    })\r\n                    .catch(function (error) {\r\n                        loader.hide()\r\n                        console.log(error)\r\n                        vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            }\r\n        }\r\n    },\r\n};\r\n</script>\r\n<style scoped>\r\n.icon_ht {\r\n    font-size: 14pt;\r\n}\r\n\r\n.wrap-text {\r\n    white-space: normal;\r\n    /* Allow text to wrap */\r\n    word-wrap: break-word;\r\n    /* Ensure long words break */\r\n    overflow-wrap: break-word;\r\n    /* Compatibility for various browsers */\r\n}\r\n\r\n/* Optionally, keep other columns from wrapping if needed */\r\n.no-wrap {\r\n    white-space: nowrap;\r\n    /* Disable text wrapping */\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import Pagination from \"@/components/Pagination.vue\";\nexport default {\n  components: {\n    Pagination\n  },\n  data() {\n    return {\n      meta: {\n        search: \"\",\n        order_by: \"desc\",\n        keyword: \"user_subscription_id\",\n        per_page: 10,\n        totalRows: 0,\n        page: 1,\n        lastPage: 1,\n        from: 1,\n        to: 1,\n        maxPage: 1\n      },\n      subscriptions: []\n    };\n  },\n  mounted() {\n    let vm = this;\n    vm.index();\n  },\n  methods: {\n    index() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"paginateUserSubscriptions\",\n        data: vm.meta\n      }).then(response => {\n        vm.subscriptions = response.data.data;\n        vm.meta.totalRows = response.data.meta.total;\n        vm.meta.lastPage = response.data.meta.last_page;\n        vm.meta.from = response.data.meta.from;\n        vm.meta.to = response.data.meta.to;\n        vm.meta.maxPage = vm.meta.lastPage >= 3 ? 3 : vm.meta.lastPage;\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    search() {\n      let vm = this;\n      vm.meta.page = 1;\n      vm.index();\n    },\n    onPageChange(page) {\n      let vm = this;\n      vm.meta.page = page;\n      vm.index();\n    },\n    sort(field) {\n      let vm = this;\n      vm.meta.keyword = field;\n      vm.meta.order_by = vm.meta.order_by == \"asc\" ? \"desc\" : \"asc\";\n      vm.index();\n    },\n    onPerPageChange() {\n      this.meta.page = 1;\n      this.index();\n    }\n  }\n};","map":{"version":3,"names":["Pagination","components","data","meta","search","order_by","keyword","per_page","totalRows","page","lastPage","from","to","maxPage","subscriptions","mounted","vm","index","methods","$store","dispatch","uri","then","response","total","last_page","catch","error","errors","message","onPageChange","sort","field","onPerPageChange"],"sources":["C:\\xampp\\htdocs\\bidsportal_new\\admin\\src\\views\\Users\\Subscription.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid pb-3\">\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <h2 class=\"main-title mb-2\">Subscriptions</h2>\r\n        </div>\r\n        <div class=\"row g-3\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <div class=\"d-sm-flex align-items-center justify-content-between\">\r\n                            <h6 class=\"card-title mb-0\"><strong>Subscriptions</strong></h6>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"card-body\">\r\n                        <div class=\"form-group mb-2 d-flex\">\r\n                            <input class=\"form-control form-control-sm\" type=\"text\" placeholder=\"Type keyword and press enter key\" v-model=\"meta.search\" @keypress.enter=\"search()\" />\r\n                        </div>\r\n                        <div class=\"table-responsive table-responsive-sm\">\r\n                            <table class=\"table table-striped table-sm text-wrap table-bordered mb-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"text-center\">#</th>\r\n                                        <th @click=\"sort('user_id')\">\r\n                                            User\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword == 'user_id' && meta.order_by == 'asc'\" class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword == 'user_id' && meta.order_by == 'desc'\" class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th @click=\"sort('user_id')\">\r\n                                            Email\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword == 'user_id' && meta.order_by == 'asc'\" class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword == 'user_id' && meta.order_by == 'desc'\" class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th @click=\"sort('payment_date')\">\r\n                                            Purchase Date\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword == 'payment_date' && meta.order_by == 'asc'\" class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword == 'payment_date' && meta.order_by == 'desc'\" class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th @click=\"sort('valid_to')\">\r\n                                            Expiry Date\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword == 'valid_to' && meta.order_by == 'asc'\" class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword == 'valid_to' && meta.order_by == 'desc'\" class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th @click=\"sort('valid_to')\">\r\n                                            Plan\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword == 'valid_to' && meta.order_by == 'asc'\" class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword == 'valid_to' && meta.order_by == 'desc'\" class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th @click=\"sort('valid_to')\">\r\n                                            Time Left\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword == 'valid_to' && meta.order_by == 'asc'\" class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword == 'valid_to' && meta.order_by == 'desc'\" class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr v-if=\"!subscriptions.length\">\r\n                                        <td colspan=\"7\" class=\"text-center\">No records found</td>\r\n                                    </tr>\r\n                                    <tr v-for=\"subscription, key in subscriptions\" :key=\"key\">\r\n                                        <td class=\"text-center\">{{ meta.from + key }}</td>\r\n                                        <td class=\"wrap-text\">{{ subscription.user?.name }}</td>\r\n                                        <td>{{ subscription.user?.email }}</td>\r\n                                        <td>{{ subscription.payment_date }}</td>\r\n                                        <td>{{ subscription.valid_to }}</td>\r\n                                        <td>{{ subscription.subscription_plan?.plan }}</td>\r\n                                        <td>{{ subscription.time_left }}</td>\r\n                                        <td>\r\n                                            <button class=\"btn btn-danger btn-sm me-2\">\r\n                                                <i class=\"ri-pause-circle-line\"></i> Suspend\r\n                                            </button>\r\n                                            <button class=\"btn btn-info btn-sm\">\r\n                                                <i class=\"ri-file-text-line\"></i> View Invoice\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <div class=\"d-flex justify-content-between align-items-center\">\r\n                            <select class=\"form-select from-select-sm width-75\" v-model=\"meta.per_page\" @change=\"onPerPageChange\">\r\n                                <option>10</option>\r\n                                <option>15</option>\r\n                                <option>20</option>\r\n                                <option>25</option>\r\n                                <option>30</option>\r\n                            </select>\r\n                            <span>Showing {{ meta.from }} to {{ meta.to }} of {{ meta.totalRows }} entries</span>\r\n                            <Pagination :maxPage=\"meta.maxPage\" :totalPages=\"meta.lastPage\" :currentPage=\"meta.page\" @pagechanged=\"onPageChange\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import Pagination from \"@/components/Pagination.vue\";\r\n\r\n    export default {\r\n        components: {\r\n            Pagination,\r\n        },\r\n        data() {\r\n            return {\r\n                meta: {\r\n                    search: \"\",\r\n                    order_by: \"desc\",\r\n                    keyword: \"user_subscription_id\",\r\n                    per_page: 10,\r\n                    totalRows: 0,\r\n                    page: 1,\r\n                    lastPage: 1,\r\n                    from: 1,\r\n                    to: 1,\r\n                    maxPage: 1,\r\n                },\r\n                subscriptions: [],\r\n            };\r\n        },\r\n        mounted() {\r\n            let vm = this;\r\n            vm.index();\r\n        },\r\n        methods: {\r\n            index() {\r\n                let vm = this;\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"paginateUserSubscriptions\", data: vm.meta })\r\n                    .then((response) => {\r\n                        vm.subscriptions = response.data.data;\r\n                        vm.meta.totalRows = response.data.meta.total;\r\n                        vm.meta.lastPage = response.data.meta.last_page;\r\n                        vm.meta.from = response.data.meta.from;\r\n                        vm.meta.to = response.data.meta.to;\r\n                        vm.meta.maxPage = vm.meta.lastPage >= 3 ? 3 : vm.meta.lastPage;\r\n                    })\r\n                    .catch(function (error) {\r\n                        vm.errors = error.response.data.errors;\r\n                        vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            },\r\n            search() {\r\n                let vm = this;\r\n                vm.meta.page = 1;\r\n                vm.index();\r\n            },\r\n            onPageChange(page) {\r\n                let vm = this;\r\n                vm.meta.page = page;\r\n                vm.index();\r\n            },\r\n            sort(field) {\r\n                let vm = this;\r\n                vm.meta.keyword = field;\r\n                vm.meta.order_by = vm.meta.order_by == \"asc\" ? \"desc\" : \"asc\";\r\n                vm.index();\r\n            },\r\n            onPerPageChange() {\r\n                this.meta.page = 1;\r\n                this.index();\r\n            },\r\n        },\r\n    };\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
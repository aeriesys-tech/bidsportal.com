{"ast":null,"code":"import moment from 'moment';\nexport default {\n  components: {},\n  data() {\n    return {\n      meta: {\n        region: '',\n        from_date: '',\n        to_date: ''\n      },\n      tenders: [],\n      errors: [],\n      url: ''\n    };\n  },\n  mounted() {},\n  watch: {},\n  methods: {\n    showBids() {\n      this.url = 'getStateTendersRange';\n      if (this.meta.region == 'Federal') {\n        this.url = 'getFederalTendersRange';\n      } else if (this.meta.region == 'Private') {\n        this.url = 'getPrivateTendersRange';\n      } else if (this.meta.region == 'International') {\n        this.url = 'getInternationalTendersRange';\n      } else {\n        this.url = 'getStateTendersRange';\n      }\n      this.getTendersRange();\n    },\n    deleteBids() {\n      if (this.meta.region == 'Federal') {\n        this.url = 'deleteFederalTendersRange';\n      } else if (this.meta.region == 'Private') {\n        this.url = 'deletePrivateTendersRange';\n      } else if (this.meta.region == 'International') {\n        this.url = 'deleteInternationalTendersRange';\n      } else {\n        this.url = 'getStateTendersRange';\n      }\n    },\n    getTendersRange(url) {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.$store.dispatch(\"post\", {\n        uri: url,\n        data: vm.meta\n      }).then(response => {\n        loader.hide();\n        vm.tenders = response.data.data;\n      }).catch(function (error) {\n        loader.hide();\n        console.log(error);\n        vm.errors = error.response.data.errors;\n      });\n    },\n    deleteTendersRange() {\n      if (confirm('Are you sure you want to delete State tenders from ' + moment(this.meta.from_date).format('DD-MM-YYYY') + ' to ' + moment(this.meta.to_date).format('DD-MM-YYYY'))) {\n        let vm = this;\n        let loader = vm.$loading.show();\n        vm.$store.dispatch(\"post\", {\n          uri: url,\n          data: vm.meta\n        }).then(() => {\n          loader.hide();\n          vm.getStateTendersRange;\n          vm.$store.dispatch(\"success\", \"State tenders deleted successfully\");\n        }).catch(function (error) {\n          loader.hide();\n          console.log(error);\n          vm.$store.dispatch(\"error\", error.response.data.message);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["moment","components","data","meta","region","from_date","to_date","tenders","errors","url","mounted","watch","methods","showBids","getTendersRange","deleteBids","vm","loader","$loading","show","$store","dispatch","uri","then","response","hide","catch","error","console","log","deleteTendersRange","confirm","format","getStateTendersRange","message"],"sources":["/private/var/www/html/bidsportal.com/admin/src/views/DeleteTenders.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid pb-3\">\n        <div class=\"d-flex justify-content-between align-items-center\">\n            <h2 class=\"main-title mb-2\">Delete Bids</h2>\n        </div>\n        <div class=\"row g-3\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        <div class=\"d-sm-flex align-items-center justify-content-between\">\n                            <h6 class=\"card-title mb-0\"><strong>Delete Bids</strong></h6>\n                        </div>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-md-3\">\n                                <div class=\"form-group\">\n                                    <label>From Date (Posted Date)</label>\n                                    <input type=\"date\" class=\"form-control\" :class=\"{ 'is-invalid': errors.from_date }\" v-model=\"meta.from_date\">\n                                    <span v-if=\"errors.from_date\" class=\"invalid-feedback\">{{ errors?.from_date[0] }}</span>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"form-group\">\n                                    <label>To Date (Posted Date)</label>\n                                    <input type=\"date\" class=\"form-control\" :class=\"{ 'is-invalid': errors.to_date }\" v-model=\"meta.to_date\">\n                                    <span v-if=\"errors.to_date\" class=\"invalid-feedback\">{{ errors?.to_date[0] }}</span>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"form-group\">\n                                    <label>Region</label>\n                                    <select class=\"form-control\" v-model=\"meta.region\" :class=\"{ 'is-invalid': errors.region }\">\n                                        <option value=\"\">Select Region</option>\n                                        <option value=\"State\">State</option>\n                                        <option value=\"Federal\">Federal</option>\n                                        <option value=\"Private\">Private</option>\n                                        <option value=\"International\">International</option>\n                                    </select>\n                                    <span v-if=\"errors.region\" class=\"invalid-feedback\">{{ errors?.region[0] }}</span>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div style=\"float:right\">\n                                    <button class=\"btn btn-primary mt-3 mx-2\" @click=\"showBids()\">Show Bids</button>\n                                    <button class=\"btn btn-danger mt-3\" @click=\"deleteBids()\">Delete Bids</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"table-responsive table-responsive-sm mt-2\">\n                            <table class=\"table table-striped table-sm text-wrap table-bordered mb-0\">\n                                <thead>\n                                    <tr>\n                                        <th class=\"text-center\" width=\"1%\">#</th>\n                                        <th @click=\"sort('tender_no')\" width=\"5%\">\n                                            Tender No\n                                            <span>\n                                                <i v-if=\"meta.keyword == 'tender_no' && meta.order_by == 'asc'\"\n                                                    class=\"ri-arrow-up-line\"></i>\n                                                <i v-else-if=\"meta.keyword == 'tender_no' && meta.order_by == 'desc'\"\n                                                    class=\"ri-arrow-down-line\"></i>\n                                                <i v-else class=\"fas fa-sort\"></i>\n                                            </span>\n                                        </th>\n                                        <th @click=\"sort('title')\" width=\"10%\">\n                                            Tender Title\n                                            <span>\n                                                <i v-if=\"meta.keyword == 'title' && meta.order_by == 'asc'\"\n                                                    class=\"ri-arrow-up-line\"></i>\n                                                <i v-else-if=\"meta.keyword == 'title' && meta.order_by == 'desc'\"\n                                                    class=\"ri-arrow-down-line\"></i>\n                                                <i v-else class=\"fas fa-sort\"></i>\n                                            </span>\n                                        </th>\n                                        <th @click=\"sort('posted_date')\" width=\"5%\">\n                                            Publish Date\n                                            <span>\n                                                <i v-if=\"meta.keyword == 'posted_date' && meta.order_by == 'asc'\"\n                                                    class=\"ri-arrow-up-line\"></i>\n                                                <i v-else-if=\"meta.keyword == 'posted_date' && meta.order_by == 'desc'\"\n                                                    class=\"ri-arrow-down-line\"></i>\n                                                <i v-else class=\"fas fa-sort\"></i>\n                                            </span>\n                                        </th>\n                                        <th @click=\"sort('posted_date')\" width=\"5%\">\n                                            Opening Date\n                                            <span>\n                                                <i v-if=\"meta.keyword == 'posted_date' && meta.order_by == 'asc'\"\n                                                    class=\"ri-arrow-up-line\"></i>\n                                                <i v-else-if=\"meta.keyword == 'posted_date' && meta.order_by == 'desc'\"\n                                                    class=\"ri-arrow-down-line\"></i>\n                                                <i v-else class=\"fas fa-sort\"></i>\n                                            </span>\n                                        </th>\n                                        <th @click=\"sort('posted_date')\" width=\"5%\">\n                                            Expiry Date\n                                            <span>\n                                                <i v-if=\"meta.keyword == 'posted_date' && meta.order_by == 'asc'\"\n                                                    class=\"ri-arrow-up-line\"></i>\n                                                <i v-else-if=\"meta.keyword == 'posted_date' && meta.order_by == 'desc'\"\n                                                    class=\"ri-arrow-down-line\"></i>\n                                                <i v-else class=\"fas fa-sort\"></i>\n                                            </span>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr v-if=\"!tenders.length\">\n                                        <td colspan=\"6\" class=\"text-center\">No records found</td>\n                                    </tr>\n                                    <tr v-for=\"tender, key in tenders\" :key=\"key\">\n                                        <td class=\"text-center\">{{ key+1 }}</td>\n                                        <td class=\"wrap-text\">{{ tender.tender_no }}</td>\n                                        <td class=\"wrap-text \">{{ tender.title }}</td>\n                                        <td>{{ tender.posted_date_parsed }}</td>\n                                        <td>{{ tender.opening_date_parsed }}</td>\n                                        <td>{{ tender.expiry_date_parsed }}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport moment from 'moment';\nexport default {\n    components: {\n    },\n    data() {\n        return {\n            meta: {\n                region: '',\n                from_date: '',\n                to_date: ''\n            },\n            tenders:[],\n            errors:[],\n            url : ''\n        };\n    },\n    mounted() {\n    },\n\n    watch: {\n    },\n\n    methods: {\n        showBids(){\n            this.url = 'getStateTendersRange'\n            if(this.meta.region == 'Federal'){\n                this.url = 'getFederalTendersRange'\n            } else if(this.meta.region == 'Private'){\n                this.url = 'getPrivateTendersRange'\n            } else if(this.meta.region == 'International'){\n                this.url = 'getInternationalTendersRange'\n            } else{\n                this.url = 'getStateTendersRange'\n            }\n            this.getTendersRange()\n        },\n\n        deleteBids(){\n            if(this.meta.region == 'Federal'){\n                this.url = 'deleteFederalTendersRange'\n            } else if(this.meta.region == 'Private'){\n                this.url = 'deletePrivateTendersRange'\n            } else if(this.meta.region == 'International'){\n                this.url = 'deleteInternationalTendersRange'\n            } else{\n                this.url = 'getStateTendersRange'\n            }\n        },\n\n        getTendersRange(url) {\n            let vm = this\n            let loader = vm.$loading.show()\n            vm.$store\n                .dispatch(\"post\", { uri: url, data: vm.meta })\n                .then((response) => {\n                    loader.hide()\n                    vm.tenders = response.data.data\n                })\n                .catch(function (error) {\n                    loader.hide()\n                    console.log(error)\n                    vm.errors = error.response.data.errors\n                });\n        },\n\n        deleteTendersRange() {\n            if(confirm('Are you sure you want to delete State tenders from '+moment(this.meta.from_date).format('DD-MM-YYYY')+ ' to '+ moment(this.meta.to_date).format('DD-MM-YYYY'))){\n                let vm = this\n                let loader = vm.$loading.show()\n                vm.$store\n                    .dispatch(\"post\", { uri: url, data: vm.meta })\n                    .then(() => {\n                        loader.hide()\n                        vm.getStateTendersRange\n                        vm.$store.dispatch(\"success\", \"State tenders deleted successfully\");\n                    })\n                    .catch(function (error) {\n                        loader.hide()\n                        console.log(error)\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            }\n        }\n    },\n};\n</script>\n<style scoped>\n.icon_ht {\n    font-size: 14pt;\n}\n\n.wrap-text {\n    white-space: normal;\n    /* Allow text to wrap */\n    word-wrap: break-word;\n    /* Ensure long words break */\n    overflow-wrap: break-word;\n    /* Compatibility for various browsers */\n}\n\n/* Optionally, keep other columns from wrapping if needed */\n.no-wrap {\n    white-space: nowrap;\n    /* Disable text wrapping */\n}\n</style>"],"mappings":"AAgIA,OAAOA,MAAK,MAAO,QAAQ;AAC3B,eAAe;EACXC,UAAU,EAAE,CACZ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE,EAAE;QACbC,OAAO,EAAE;MACb,CAAC;MACDC,OAAO,EAAC,EAAE;MACVC,MAAM,EAAC,EAAE;MACTC,GAAE,EAAI;IACV,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG,CACV,CAAC;EAEDC,KAAK,EAAE,CACP,CAAC;EAEDC,OAAO,EAAE;IACLC,QAAQA,CAAA,EAAE;MACN,IAAI,CAACJ,GAAE,GAAI,sBAAqB;MAChC,IAAG,IAAI,CAACN,IAAI,CAACC,MAAK,IAAK,SAAS,EAAC;QAC7B,IAAI,CAACK,GAAE,GAAI,wBAAuB;MACtC,OAAO,IAAG,IAAI,CAACN,IAAI,CAACC,MAAK,IAAK,SAAS,EAAC;QACpC,IAAI,CAACK,GAAE,GAAI,wBAAuB;MACtC,OAAO,IAAG,IAAI,CAACN,IAAI,CAACC,MAAK,IAAK,eAAe,EAAC;QAC1C,IAAI,CAACK,GAAE,GAAI,8BAA6B;MAC5C,OAAM;QACF,IAAI,CAACA,GAAE,GAAI,sBAAqB;MACpC;MACA,IAAI,CAACK,eAAe,CAAC;IACzB,CAAC;IAEDC,UAAUA,CAAA,EAAE;MACR,IAAG,IAAI,CAACZ,IAAI,CAACC,MAAK,IAAK,SAAS,EAAC;QAC7B,IAAI,CAACK,GAAE,GAAI,2BAA0B;MACzC,OAAO,IAAG,IAAI,CAACN,IAAI,CAACC,MAAK,IAAK,SAAS,EAAC;QACpC,IAAI,CAACK,GAAE,GAAI,2BAA0B;MACzC,OAAO,IAAG,IAAI,CAACN,IAAI,CAACC,MAAK,IAAK,eAAe,EAAC;QAC1C,IAAI,CAACK,GAAE,GAAI,iCAAgC;MAC/C,OAAM;QACF,IAAI,CAACA,GAAE,GAAI,sBAAqB;MACpC;IACJ,CAAC;IAEDK,eAAeA,CAACL,GAAG,EAAE;MACjB,IAAIO,EAAC,GAAI,IAAG;MACZ,IAAIC,MAAK,GAAID,EAAE,CAACE,QAAQ,CAACC,IAAI,CAAC;MAC9BH,EAAE,CAACI,MAAK,CACHC,QAAQ,CAAC,MAAM,EAAE;QAAEC,GAAG,EAAEb,GAAG;QAAEP,IAAI,EAAEc,EAAE,CAACb;MAAK,CAAC,EAC5CoB,IAAI,CAAEC,QAAQ,IAAK;QAChBP,MAAM,CAACQ,IAAI,CAAC;QACZT,EAAE,CAACT,OAAM,GAAIiB,QAAQ,CAACtB,IAAI,CAACA,IAAG;MAClC,CAAC,EACAwB,KAAK,CAAC,UAAUC,KAAK,EAAE;QACpBV,MAAM,CAACQ,IAAI,CAAC;QACZG,OAAO,CAACC,GAAG,CAACF,KAAK;QACjBX,EAAE,CAACR,MAAK,GAAImB,KAAK,CAACH,QAAQ,CAACtB,IAAI,CAACM,MAAK;MACzC,CAAC,CAAC;IACV,CAAC;IAEDsB,kBAAkBA,CAAA,EAAG;MACjB,IAAGC,OAAO,CAAC,qDAAqD,GAAC/B,MAAM,CAAC,IAAI,CAACG,IAAI,CAACE,SAAS,CAAC,CAAC2B,MAAM,CAAC,YAAY,CAAC,GAAE,MAAM,GAAEhC,MAAM,CAAC,IAAI,CAACG,IAAI,CAACG,OAAO,CAAC,CAAC0B,MAAM,CAAC,YAAY,CAAC,CAAC,EAAC;QACvK,IAAIhB,EAAC,GAAI,IAAG;QACZ,IAAIC,MAAK,GAAID,EAAE,CAACE,QAAQ,CAACC,IAAI,CAAC;QAC9BH,EAAE,CAACI,MAAK,CACHC,QAAQ,CAAC,MAAM,EAAE;UAAEC,GAAG,EAAEb,GAAG;UAAEP,IAAI,EAAEc,EAAE,CAACb;QAAK,CAAC,EAC5CoB,IAAI,CAAC,MAAM;UACRN,MAAM,CAACQ,IAAI,CAAC;UACZT,EAAE,CAACiB,oBAAmB;UACtBjB,EAAE,CAACI,MAAM,CAACC,QAAQ,CAAC,SAAS,EAAE,oCAAoC,CAAC;QACvE,CAAC,EACAK,KAAK,CAAC,UAAUC,KAAK,EAAE;UACpBV,MAAM,CAACQ,IAAI,CAAC;UACZG,OAAO,CAACC,GAAG,CAACF,KAAK;UACjBX,EAAE,CAACI,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAEM,KAAK,CAACH,QAAQ,CAACtB,IAAI,CAACgC,OAAO,CAAC;QAC5D,CAAC,CAAC;MACV;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
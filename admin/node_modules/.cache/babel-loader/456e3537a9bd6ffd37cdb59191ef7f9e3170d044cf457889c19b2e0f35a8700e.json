{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\n// import Pagination from \"@/components/Pagination.vue\";\n// import search from \"@/components/Search.vue\";\nimport category_search from \"@/components/CategorySearch.vue\";\nimport agency_search from \"@/components/AgencySearch.vue\";\nimport state_search from \"@/components/StateSearch.vue\";\nexport default {\n  components: {\n    // Pagination, \n    category_search,\n    agency_search,\n    state_search\n  },\n  data() {\n    return {\n      meta: {\n        search: \"\",\n        order_by: \"desc\",\n        keyword: \"tdr_id\",\n        per_page: 10,\n        totalRows: 0,\n        page: 1,\n        lastPage: 1,\n        from: 1,\n        to: 1,\n        maxPage: 1,\n        trashed: false\n      },\n      role: {\n        role_id: \"\",\n        role: \"\"\n      },\n      country: {\n        country_id: ''\n      },\n      notices: [],\n      categories: [],\n      agencies: [],\n      state_tenders_count: {\n        active: null,\n        inactive: null,\n        total_bids: null\n      },\n      status: true,\n      tenders: [],\n      errors: [],\n      tender_delete: {\n        select_all: false,\n        delete_tenders: []\n      },\n      states: [],\n      agency: {\n        agency_name: ''\n      }\n    };\n  },\n  mounted() {\n    let vm = this;\n    vm.getStateNotices();\n  },\n  watch: {\n    'tender_delete.delete_tenders'() {\n      if (this.tender_delete.delete_tenders.length > 0 && this.tender_delete.delete_tenders.length == this.tenders.length) {\n        this.tender_delete.select_all = true;\n      } else {\n        this.tender_delete.select_all = false;\n      }\n    }\n  },\n  methods: {\n    updateAgencies(value) {\n      let vm = this;\n      vm.agency.agency_name = value;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getAgency\"\n      }).then(response => {\n        vm.agencies = response.data.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    toggleSelectAll() {\n      this.tender_delete.select_all = !this.tender_delete.select_all;\n      console.log(this.tender_delete.select_all);\n      if (this.tender_delete.select_all) {\n        this.tender_delete.delete_tenders = this.tenders.map(tender => tender.state_tender_id);\n      } else {\n        this.tender_delete.delete_tenders = [];\n      }\n    },\n    deleteTenders() {\n      let vm = this;\n      if (confirm(\"Are you sure you want to delete?\")) {\n        vm.$store.dispatch(\"post\", {\n          uri: \"deleteStateTenders\",\n          data: vm.tender_delete\n        }).then(() => {\n          vm.tender_delete.delete_tenders = [];\n          vm.$store.dispatch(\"success\", \"Selected tenders deleted successfully \");\n          vm.index();\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        vm.tender_delete.select_all = false;\n        vm.tender_delete.delete_tenders = [];\n      }\n    },\n    submitForm() {\n      let vm = this;\n      if (vm.status) {\n        vm.addRole();\n      } else {\n        vm.updateRole();\n      }\n    },\n    stateTenders() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"stateTenders\"\n      }).then(response => {\n        vm.state_tenders_count = response.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    index() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"paginateInactiveStateTenders\",\n        data: vm.meta\n      }).then(response => {\n        vm.tenders = response.data.data;\n        vm.meta.totalRows = response.data.meta.total;\n        vm.meta.lastPage = response.data.meta.last_page;\n        vm.meta.from = response.data.meta.from;\n        vm.meta.to = response.data.meta.to;\n        vm.meta.maxPage = vm.meta.lastPage >= 3 ? 3 : vm.meta.lastPage;\n        if (vm.tenders.length) {\n          vm.country.country_id = vm.tenders[0].tdr_country_id;\n          vm.getStates();\n        }\n        // vm.stateTenders()\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    getStateNotices() {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.$store.dispatch(\"post\", {\n        uri: \"getStateNotices\",\n        data: {\n          meta: {\n            region_id: 1\n          }\n        }\n      }).then(response => {\n        loader.hide();\n        vm.notices = response.data;\n        vm.getCategories();\n      }).catch(function (error) {\n        loader.hide();\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getCategories() {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.$store.dispatch(\"post\", {\n        uri: \"getCategories\"\n      }).then(response => {\n        loader.hide();\n        vm.categories = response.data;\n        vm.getStateAgencies();\n      }).catch(function (error) {\n        loader.hide();\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getStateAgencies() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getStateAgencies\"\n      }).then(response => {\n        vm.agencies = response.data;\n        vm.index();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    getStates() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getStates\",\n        data: {\n          country_id: 10\n        }\n      }).then(response => {\n        vm.states = response.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    updateStateTender(tender) {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.$store.dispatch(\"post\", {\n        uri: \"updateStateTender\",\n        data: tender\n      }).then(() => {\n        loader.hide();\n        vm.$store.dispatch(\"success\", \"Tender is successfully updated\");\n        vm.index();\n      }).catch(function (error) {\n        loader.hide();\n        console.log(error);\n        tender.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    search() {\n      let vm = this;\n      vm.meta.page = 1;\n      vm.index();\n    },\n    onPageChange(page) {\n      let vm = this;\n      vm.meta.page = page;\n      vm.index();\n    },\n    sort(field) {\n      let vm = this;\n      vm.meta.keyword = field;\n      vm.meta.order_by = vm.meta.order_by == \"asc\" ? \"desc\" : \"asc\";\n      vm.index();\n    },\n    discard() {\n      let vm = this;\n      vm.role.role = \"\";\n      vm.$refs.role.focus();\n      vm.errors = [];\n      vm.status = true;\n      vm.index();\n    },\n    onPerPageChange() {\n      this.meta.page = 1;\n      this.index();\n    }\n  }\n};","map":{"version":3,"names":["category_search","agency_search","state_search","components","data","meta","search","order_by","keyword","per_page","totalRows","page","lastPage","from","to","maxPage","trashed","role","role_id","country","country_id","notices","categories","agencies","state_tenders_count","active","inactive","total_bids","status","tenders","errors","tender_delete","select_all","delete_tenders","states","agency","agency_name","mounted","vm","getStateNotices","watch","tender_delete.delete_tenders","length","methods","updateAgencies","value","$store","dispatch","uri","then","response","catch","error","console","log","toggleSelectAll","map","tender","state_tender_id","deleteTenders","confirm","index","submitForm","addRole","updateRole","stateTenders","total","last_page","tdr_country_id","getStates","loader","$loading","show","region_id","hide","getCategories","message","getStateAgencies","updateStateTender","onPageChange","sort","field","discard","$refs","focus","onPerPageChange"],"sources":["C:\\xampp\\htdocs\\bidsportal_new\\admin\\src\\views\\state_tenders\\Index.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid pb-3\">\r\n        <div class=\"d-flex justify-content-between\">\r\n            <h2 class=\"main-title mb-3\">New State Tender</h2>\r\n        </div>\r\n        <div class=\"row g-3\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <div class=\"d-sm-flex align-items-center justify-content-between\">\r\n                            <h6 class=\"card-title mb-0\"><strong>State Tenders</strong></h6>\r\n                            <div style=\"float:right;\">\r\n                                <button class=\"btn btn-danger btn-sm\" v-if=\"tender_delete.delete_tenders.length\" style=\"margin-right:10px\" @click=\"deleteTenders()\">Delete</button>\r\n                                <span class=\"badge bg-primary rounded-pill\" v-if=\"state_tenders_count.total_bids\" style=\"font-size: 10pt;\">Total Bids: {{ state_tenders_count?.total_bids }}</span>\r\n                                <span class=\"badge bg-success rounded-pill\" v-if=\"state_tenders_count.active\" style=\"font-size: 10pt;margin-left: 10px;\">Active: {{ state_tenders_count?.active }}</span>\r\n                                <span class=\"badge bg-danger rounded-pill\" v-if=\"state_tenders_count.inactive\" style=\"margin-left: 10px;font-size: 10pt;\">Pending: {{ state_tenders_count?.inactive }}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <div class=\"form-group mb-2 d-flex\">\r\n                            <input class=\"form-control form-control-sm\" type=\"text\" placeholder=\"Type keyword and press enter key\" v-model=\"meta.search\" @keypress.enter=\"search()\" />\r\n                        </div>\r\n                        <div class=\"table-responsive table-responsive-sm\" style=\"max-height: 400px; overflow-y: auto; overflow-x: auto;\">\r\n                            <table class=\"table table-striped table-sm text-wrap table-bordered mb-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"text-center\" width=\"1%\">#</th>\r\n                                        <th @click=\"sort('tdr_no')\" width=\"5%\">\r\n                                            Tender No\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword=='tdr_no' && meta.order_by=='asc'\" class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword=='tdr_no' && meta.order_by=='desc'\" class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th @click=\"sort('tdr_opening_date')\" width=\"5%\">\r\n                                            Publish Date\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword=='tdr_opening_date' && meta.order_by=='asc'\" class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword=='tdr_opening_date' && meta.order_by=='desc'\" class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th @click=\"sort('tdr_title')\" width=\"10%\">\r\n                                            Tender Title\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword=='tdr_title' && meta.order_by=='asc'\" class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword=='tdr_title' && meta.order_by=='desc'\" class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th @click=\"sort('tender_type')\" width=\"7%\">\r\n                                            Tender Type\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword=='tender_type' && meta.order_by=='asc'\" class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword=='tender_type' && meta.order_by=='desc'\" class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th class=\"text-center\" width=\"10%\">Tender Types</th>\r\n                                        <th @click=\"sort('category')\">\r\n                                            Category\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword=='category' && meta.order_by=='asc'\" class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword=='category' && meta.order_by=='desc'\" class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th class=\"text-center\" width=\"10%\">Categories</th>\r\n                                        <th @click=\"sort('category')\">\r\n                                            Issuing Agency\r\n                                            <span>\r\n                                                <i v-if=\"meta.keyword=='issuing_agency' && meta.order_by=='asc'\" class=\"ri-arrow-up-line\"></i>\r\n                                                <i v-else-if=\"meta.keyword=='issuing_agency' && meta.order_by=='desc'\" class=\"ri-arrow-down-line\"></i>\r\n                                                <i v-else class=\"fas fa-sort\"></i>\r\n                                            </span>\r\n                                        </th>\r\n                                        <th class=\"text-center\" width=\"10%\">Agencies</th>\r\n                                        <th class=\"text-center\" width=\"10%\">States</th>\r\n                                        <th class=\"text-center\" width=\"5%\">Bid Link</th>\r\n                                        <th class=\"text-center\" width=\"3%\">\r\n                                            Action\r\n                                        </th>\r\n                                        <th class=\"text-center\" width=\"3%\">    \r\n                                            <input type=\"checkbox\" title=\"Select All\" class=\"form control\" v-model=\"tender_delete.select_all\" @click=\"toggleSelectAll()\">\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr v-if=\"!tenders.length\">\r\n                                        <td colspan=\"11\" class=\"text-center\">No records found</td>\r\n                                    </tr>\r\n                                    <tr v-for=\"tender, key in tenders\" :key=\"key\">\r\n                                        <td class=\"text-center\">{{ meta.from + key }}</td>\r\n                                        <td class=\"wrap-text\">{{ tender.tender_no }}</td>\r\n                                        <td>{{ tender.opening_date }}</td>\r\n                                        <td class=\"wrap-text \">{{ tender.title }}</td>\r\n                                        <td>{{ tender.notice_name }}</td>\r\n                                        <td>\r\n                                            <select class=\"form-control form-control-sm\" :class=\"{'is-invalid' : tender.errors?.state_notice_id }\" v-model=\"tender.state_notice_id\">\r\n                                                <option value=\"null\">Select Notice</option>\r\n                                                <option v-for=\"notice, notice_key in notices\" :key=\"notice_key\" :value=\"notice.state_notice_id\">{{ notice.notice_name }}</option>\r\n                                            </select>\r\n                                            <span class=\"invalid-feedback\" v-if=\"tender.errors?.state_notice_id?.length\">{{ tender.errors?.state_notice_id[0] }}</span>\r\n                                        </td>\r\n                                        <td>{{ tender.category_name }}</td>\r\n                                        <td>\r\n                                            <category_search :class=\"{ 'is-invalid': tender.errors?.category_id }\"\r\n                                                :customClass=\"{ 'is-invalid': tender.errors?.category_id }\" :initialize=\"tender.category_id\" id=\"category_id\"\r\n                                                label=\"category_name\" placeholder=\"Select Category\" :data=\"categories\" @input=\" category => tender.category_id = category\">\r\n                                            </category_search>\r\n                                            <span class=\"invalid-feedback\" v-if=\"tender.errors?.category_id?.length\">{{ tender.errors?.category_id[0] }}</span>\r\n                                        </td>\r\n                                        <td>{{ tender.agency_name }}</td>\r\n                                        <td>\r\n                                            <agency_search :class=\"{ 'is-invalid': tender.errors?.state_agency_id }\"\r\n                                                :customClass=\"{ 'is-invalid': tender.errors?.state_agency_id }\" :initialize=\"tender.state_agency_id\" id=\"state_agency_id\"\r\n                                                label=\"state_agency_name\" placeholder=\"Select Agency\" :data=\"agencies\" @input=\" agency => tender.state_agency_id = agency\" @updateAgencies=\"updateAgencies\">\r\n                                            </agency_search>\r\n                                            <span class=\"invalid-feedback\" v-if=\"tender.errors?.state_agency_id?.length\">{{ tender.errors?.state_agency_id[0] }}</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <state_search :class=\"{ 'is-invalid': tender.errors?.state_id }\"\r\n                                                :customClass=\"{ 'is-invalid': tender.errors?.state_id }\" :initialize=\"tender.state_id\" id=\"state_id\"\r\n                                                label=\"state_name\" placeholder=\"Select State\" :data=\"states\" @input=\" state => tender.state_id = state\">\r\n                                            </state_search>\r\n                                            <span class=\"invalid-feedback\" v-if=\"tender.errors?.state_id?.length\">{{ tender.errors?.state_id[0] }}</span>\r\n                                        </td>\r\n                                        <td class=\"text-center\"><a :href=\"tender.tender_url\" target=\"_blank\">Click here</a></td>\r\n                                        <td class=\"text-center\">\r\n                                            <a href=\"javascript:void(0)\" title=\"Update\" class=\"text-success me-2\" @click=\"updateStateTender(tender)\"><i class=\"ri-refresh-line icon_ht\"></i></a>\r\n                                        </td>\r\n                                        <td class=\"text-center\">\r\n                                            <input type=\"checkbox\" title=\"Delete\" class=\"form control\" v-model=\"tender_delete.delete_tenders\" :value=\"tender.state_tender_id\">\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <div class=\"d-flex justify-content-between align-items-center\">\r\n                            <select class=\"form-select from-select-sm width-75\" v-model=\"meta.per_page\" @change=\"onPerPageChange\">\r\n                                <option>10</option>\r\n                                <option>15</option>\r\n                                <option>20</option>\r\n                                <option>25</option>\r\n                                <option>30</option>\r\n                            </select>\r\n                            <span>Showing {{ meta.from }} to {{ meta.to }} of {{ meta.totalRows }} entries</span>\r\n                            <Pagination :maxPage=\"meta.maxPage\" :totalPages=\"meta.lastPage\" :currentPage=\"meta.page\" @pagechanged=\"onPageChange\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    // import Pagination from \"@/components/Pagination.vue\";\r\n    // import search from \"@/components/Search.vue\";\r\n    import category_search from \"@/components/CategorySearch.vue\";\r\n    import agency_search from \"@/components/AgencySearch.vue\";\r\n    import state_search from \"@/components/StateSearch.vue\";\r\n    export default {\r\n        components: {\r\n            // Pagination, \r\n            category_search, \r\n            agency_search, \r\n            state_search\r\n        },\r\n        data() {\r\n            return {\r\n                meta: {\r\n                    search: \"\",\r\n                    order_by: \"desc\",\r\n                    keyword: \"tdr_id\",\r\n                    per_page: 10,\r\n                    totalRows: 0,\r\n                    page: 1,\r\n                    lastPage: 1,\r\n                    from: 1,\r\n                    to: 1,\r\n                    maxPage: 1,\r\n                    trashed: false\r\n                },\r\n                role: {\r\n                    role_id: \"\",\r\n                    role: \"\",\r\n                },\r\n                country:{\r\n                    country_id:''                            \r\n                },\r\n                notices:[],\r\n                categories:[],\r\n                agencies:[],\r\n                state_tenders_count:{\r\n                    active:null,\r\n                    inactive:null,\r\n                    total_bids:null\r\n                },\r\n                status: true,\r\n                tenders: [],\r\n                errors: [],\r\n                tender_delete:{\r\n                    select_all:false,\r\n                    delete_tenders:[]\r\n                },\r\n                states:[],\r\n                agency:{\r\n                    agency_name:''\r\n                }\r\n            };\r\n        },\r\n        mounted() {\r\n            let vm = this;\r\n            vm.getStateNotices();\r\n        },\r\n\r\n        watch: {\r\n            'tender_delete.delete_tenders'(){\r\n                if(this.tender_delete.delete_tenders.length>0 && this.tender_delete.delete_tenders.length == this.tenders.length){\r\n                    this.tender_delete.select_all = true                            \r\n                }else{\r\n                    this.tender_delete.select_all = false                            \r\n                }\r\n                                               \r\n            }\r\n        },\r\n\r\n        methods: {\r\n            updateAgencies(value) {\r\n                let vm = this\r\n                vm.agency.agency_name  =  value\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"getAgency\" })\r\n                    .then((response) => {\r\n                        vm.agencies = response.data.data\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error)\r\n                    });\r\n            },\r\n                                            \r\n            toggleSelectAll(){\r\n                this.tender_delete.select_all = !this.tender_delete.select_all\r\n                console.log(this.tender_delete.select_all)\r\n                if(this.tender_delete.select_all){\r\n                    this.tender_delete.delete_tenders = this.tenders.map(tender => tender.state_tender_id)                           \r\n                }else{\r\n                    this.tender_delete.delete_tenders = []                        \r\n                }\r\n                                            \r\n            },\r\n\r\n            deleteTenders(){\r\n                let vm = this;\r\n                if(confirm(\"Are you sure you want to delete?\")){\r\n                    vm.$store\r\n                        .dispatch(\"post\", { uri: \"deleteStateTenders\", data: vm.tender_delete})\r\n                        .then(() => {\r\n                            vm.tender_delete.delete_tenders = []\r\n                            vm.$store.dispatch(\"success\", \"Selected tenders deleted successfully \");\r\n                            vm.index()\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error)\r\n                        });\r\n                }else{\r\n                    vm.tender_delete.select_all = false\r\n                    vm.tender_delete.delete_tenders = []\r\n                }\r\n            },\r\n            submitForm() {\r\n                let vm = this;\r\n                if (vm.status) {\r\n                    vm.addRole();\r\n                } else {\r\n                    vm.updateRole();\r\n                }\r\n            },\r\n            stateTenders() {\r\n                let vm = this;\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"stateTenders\" })\r\n                    .then((response) => {\r\n                        vm.state_tenders_count = response.data\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error)\r\n                    });\r\n            },\r\n            index() {\r\n                let vm = this;\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"paginateInactiveStateTenders\", data: vm.meta })\r\n                    .then((response) => {\r\n                        vm.tenders = response.data.data\r\n                        vm.meta.totalRows = response.data.meta.total\r\n                        vm.meta.lastPage = response.data.meta.last_page\r\n                        vm.meta.from = response.data.meta.from\r\n                        vm.meta.to = response.data.meta.to\r\n                        vm.meta.maxPage = vm.meta.lastPage >= 3 ? 3 : vm.meta.lastPage\r\n                        if(vm.tenders.length){\r\n                            vm.country.country_id = vm.tenders[0].tdr_country_id\r\n                            vm.getStates()                \r\n                        }\r\n                        // vm.stateTenders()\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error)\r\n                    });\r\n            },\r\n            getStateNotices() {\r\n                let vm = this;\r\n                let loader = vm.$loading.show();\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"getStateNotices\", data:{ meta:{region_id:1}} })\r\n                    .then((response) => {\r\n                        loader.hide();\r\n                        vm.notices = response.data\r\n                        vm.getCategories()\r\n                    })\r\n                    .catch(function (error) {\r\n                        loader.hide();\r\n                        vm.errors = error.response.data.errors;\r\n                        vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            },\r\n\r\n            getCategories() {\r\n                let vm = this;\r\n                let loader = vm.$loading.show();\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"getCategories\" })\r\n                    .then((response) => {\r\n                        loader.hide();\r\n                        vm.categories = response.data\r\n                        vm.getStateAgencies()\r\n                    })\r\n                    .catch(function (error) {\r\n                        loader.hide();\r\n                        vm.errors = error.response.data.errors;\r\n                        vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            },\r\n\r\n            getStateAgencies() {\r\n                let vm = this;\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"getStateAgencies\" })\r\n                    .then((response) => {\r\n                        vm.agencies = response.data\r\n                        vm.index()\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error)\r\n                    });\r\n            },\r\n\r\n            getStates() {\r\n                let vm = this;\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"getStates\", data: { country_id : 10 } })\r\n                    .then((response) => {\r\n                        vm.states = response.data\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error)\r\n                    });\r\n            },\r\n\r\n            updateStateTender(tender) {\r\n                let vm = this;\r\n                let loader = vm.$loading.show();\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"updateStateTender\", data: tender })\r\n                    .then(() => {\r\n                        loader.hide();\r\n                        vm.$store.dispatch(\"success\", \"Tender is successfully updated\");\r\n                        vm.index();\r\n                    })\r\n                    .catch(function (error) {\r\n                        loader.hide();\r\n                        console.log(error)\r\n                        tender.errors = error.response.data.errors;\r\n                        vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            },\r\n            \r\n\r\n            \r\n            search() {\r\n                let vm = this;\r\n                vm.meta.page = 1;\r\n                vm.index();\r\n            },\r\n\r\n            onPageChange(page) {\r\n                let vm = this;\r\n                vm.meta.page = page;\r\n                vm.index();\r\n            },\r\n            sort(field) {\r\n                let vm = this;\r\n                vm.meta.keyword = field;\r\n                vm.meta.order_by = vm.meta.order_by == \"asc\" ? \"desc\" : \"asc\";\r\n                vm.index();\r\n            },\r\n            discard() {\r\n                let vm = this;\r\n                vm.role.role = \"\";\r\n                vm.$refs.role.focus();\r\n                vm.errors = [];\r\n                vm.status = true;\r\n                vm.index();\r\n            },\r\n            onPerPageChange() {\r\n                this.meta.page = 1;\r\n                this.index();\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style scoped>\r\n.icon_ht{\r\n    font-size: 14pt;\r\n}\r\n\r\n.table {\r\n    min-width: 2000px; /* Or adjust to your needs */\r\n    min-height: 250px;\r\n}\r\n\r\n.wrap-text {\r\n    white-space: normal; /* Allow text to wrap */\r\n    word-wrap: break-word; /* Ensure long words break */\r\n    overflow-wrap: break-word; /* Compatibility for various browsers */\r\n}\r\n\r\n/* Optionally, keep other columns from wrapping if needed */\r\n.no-wrap {\r\n    white-space: nowrap; /* Disable text wrapping */\r\n}\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
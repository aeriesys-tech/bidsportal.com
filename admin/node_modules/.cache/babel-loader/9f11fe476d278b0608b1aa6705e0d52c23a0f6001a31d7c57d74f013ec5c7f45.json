{"ast":null,"code":"import Pagination from \"@/components/Pagination.vue\";\nexport default {\n  components: {\n    Pagination\n  },\n  data() {\n    return {\n      meta: {\n        search: \"\",\n        order_by: \"desc\",\n        keyword: \"alert_id\",\n        per_page: 10,\n        totalRows: 0,\n        page: 1,\n        lastPage: 1,\n        from: 1,\n        to: 1,\n        maxPage: 1\n      },\n      alerts: []\n    };\n  },\n  mounted() {\n    let vm = this;\n    vm.index();\n  },\n  methods: {\n    index() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"paginateAllAlerts\",\n        data: vm.meta\n      }).then(response => {\n        vm.alerts = response.data.data;\n        vm.meta.totalRows = response.data.meta.total;\n        vm.meta.lastPage = response.data.meta.last_page;\n        vm.meta.from = response.data.meta.from;\n        vm.meta.to = response.data.meta.to;\n        vm.meta.maxPage = vm.meta.lastPage >= 3 ? 3 : vm.meta.lastPage;\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    search() {\n      let vm = this;\n      vm.meta.page = 1;\n      vm.index();\n    },\n    onPageChange(page) {\n      let vm = this;\n      vm.meta.page = page;\n      vm.index();\n    },\n    sort(field) {\n      let vm = this;\n      vm.meta.keyword = field;\n      vm.meta.order_by = vm.meta.order_by == \"asc\" ? \"desc\" : \"asc\";\n      vm.index();\n    },\n    onPerPageChange() {\n      this.meta.page = 1;\n      this.index();\n    }\n  }\n};","map":{"version":3,"names":["Pagination","components","data","meta","search","order_by","keyword","per_page","totalRows","page","lastPage","from","to","maxPage","alerts","mounted","vm","index","methods","$store","dispatch","uri","then","response","total","last_page","catch","error","errors","message","onPageChange","sort","field","onPerPageChange"],"sources":["/private/var/www/html/bidsportal.com/admin/src/views/Users/Alerts.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid pb-3\">\n        <div class=\"d-flex justify-content-between\">\n            <h2 class=\"main-title mb-2 align-items-center\">Alerts</h2>\n        </div>\n        <div class=\"row g-3\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        <div class=\"d-sm-flex align-items-center justify-content-between\">\n                            <h6 class=\"card-title mb-0\"><strong>Alerts</strong></h6>\n                        </div>\n                    </div>\n\n                    <div class=\"card-body\">\n                        <div class=\"form-group mb-2 d-flex\">\n                            <input class=\"form-control form-control-sm\" type=\"text\" placeholder=\"Type keyword and press enter key\" v-model=\"meta.search\" @keypress.enter=\"search()\" />\n                        </div>\n                        <div class=\"table-responsive table-responsive-sm\">\n                            <table class=\"table table-striped table-sm text-wrap table-bordered mb-0\">\n                                <thead>\n                                    <tr>\n                                        <th class=\"text-center\">#</th>\n                                        <th @click=\"sort('user_id')\">\n                                            User\n                                            <span>\n                                                <i v-if=\"meta.keyword == 'user_id' && meta.order_by == 'asc'\" class=\"ri-arrow-up-line\"></i>\n                                                <i v-else-if=\"meta.keyword == 'user_id' && meta.order_by == 'desc'\" class=\"ri-arrow-down-line\"></i>\n                                                <i v-else class=\"fas fa-sort\"></i>\n                                            </span>\n                                        </th>\n                                        <th @click=\"sort('alert_title')\">\n                                            Alert Title\n                                            <span>\n                                                <i v-if=\"meta.keyword == 'alert_title' && meta.order_by == 'asc'\" class=\"ri-arrow-up-line\"></i>\n                                                <i v-else-if=\"meta.keyword == 'alert_title' && meta.order_by == 'desc'\" class=\"ri-arrow-down-line\"></i>\n                                                <i v-else class=\"fas fa-sort\"></i>\n                                            </span>\n                                        </th>\n                                        <th @click=\"sort('frequency')\">\n                                            Frequency\n                                            <span>\n                                                <i v-if=\"meta.keyword == 'frequency' && meta.order_by == 'asc'\" class=\"ri-arrow-up-line\"></i>\n                                                <i v-else-if=\"meta.keyword == 'frequency' && meta.order_by == 'desc'\" class=\"ri-arrow-down-line\"></i>\n                                                <i v-else class=\"fas fa-sort\"></i>\n                                            </span>\n                                        </th>\n                                        <th @click=\"sort('region')\">\n                                            Region\n                                            <span>\n                                                <i v-if=\"meta.keyword == 'region' && meta.order_by == 'asc'\" class=\"ri-arrow-up-line\"></i>\n                                                <i v-else-if=\"meta.keyword == 'region' && meta.order_by == 'desc'\" class=\"ri-arrow-down-line\"></i>\n                                                <i v-else class=\"fas fa-sort\"></i>\n                                            </span>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr v-if=\"!alerts.length\">\n                                        <td colspan=\"5\" class=\"text-center\">No records found</td>\n                                    </tr>\n                                    <tr v-for=\"alert, key in alerts\" :key=\"key\">\n                                        <td class=\"text-center\">{{ meta.from + key }}</td>\n                                        <td class=\"wrap-text\">{{ alert.user?.name }}</td>\n                                        <td>{{ alert.alert_title }}</td>\n                                        <td>{{ alert.frequency }}</td>\n                                        <td>{{ alert.region }}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <div class=\"card-footer\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <select class=\"form-select from-select-sm width-75\" v-model=\"meta.per_page\" @change=\"onPerPageChange\">\n                                <option>10</option>\n                                <option>15</option>\n                                <option>20</option>\n                                <option>25</option>\n                                <option>30</option>\n                            </select>\n                            <span>Showing {{ meta.from }} to {{ meta.to }} of {{ meta.totalRows }} entries</span>\n                            <Pagination :maxPage=\"meta.maxPage\" :totalPages=\"meta.lastPage\" :currentPage=\"meta.page\" @pagechanged=\"onPageChange\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import Pagination from \"@/components/Pagination.vue\";\n\n    export default {\n        components: {\n            Pagination,\n        },\n        data() {\n            return {\n                meta: {\n                    search: \"\",\n                    order_by: \"desc\",\n                    keyword: \"alert_id\",\n                    per_page: 10,\n                    totalRows: 0,\n                    page: 1,\n                    lastPage: 1,\n                    from: 1,\n                    to: 1,\n                    maxPage: 1,\n                },\n                alerts: [],\n            };\n        },\n        mounted() {\n            let vm = this;\n            vm.index();\n        },\n        methods: {\n            index() {\n                let vm = this;\n                vm.$store\n                    .dispatch(\"post\", { uri: \"paginateAllAlerts\", data: vm.meta })\n                    .then((response) => {\n                        vm.alerts = response.data.data;\n                        vm.meta.totalRows = response.data.meta.total;\n                        vm.meta.lastPage = response.data.meta.last_page;\n                        vm.meta.from = response.data.meta.from;\n                        vm.meta.to = response.data.meta.to;\n                        vm.meta.maxPage = vm.meta.lastPage >= 3 ? 3 : vm.meta.lastPage;\n                    })\n                    .catch(function (error) {\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n            search() {\n                let vm = this;\n                vm.meta.page = 1;\n                vm.index();\n            },\n            onPageChange(page) {\n                let vm = this;\n                vm.meta.page = page;\n                vm.index();\n            },\n            sort(field) {\n                let vm = this;\n                vm.meta.keyword = field;\n                vm.meta.order_by = vm.meta.order_by == \"asc\" ? \"desc\" : \"asc\";\n                vm.index();\n            },\n            onPerPageChange() {\n                this.meta.page = 1;\n                this.index();\n            },\n        },\n    };\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
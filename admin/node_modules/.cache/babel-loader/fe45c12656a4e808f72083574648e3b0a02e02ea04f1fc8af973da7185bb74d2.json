{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\n// import TreeItem from \"@/components/TreeItem.vue\";\n// import PscTree from \"@/components/PscTree.vue\";\n// import Loading from \"vue-loading-overlay\";\n// import \"vue-loading-overlay/dist/css/index.css\";\n// import Vue3TagsInput from \"vue3-tags-input\";\nexport default {\n  // components: { TreeItem, PscTree, Loading },\n  data() {\n    return {\n      state_border_red: '',\n      states: [],\n      sorted_states: [],\n      state_keyword: '',\n      state_notices: [],\n      state_agencies: [],\n      sorted_categories: [],\n      category_keyword: null,\n      sorted_state_agencies: [],\n      selected_state_agencies: [],\n      categories: [],\n      selected_categories: [],\n      naics: [],\n      alert: {\n        user_id: '',\n        alert_id: '',\n        titel: '',\n        frequency: '',\n        region: 'State',\n        keywords: [],\n        states: [],\n        categories: [],\n        state_notices: [],\n        state_agencies: [],\n        categories: [],\n        naics: [],\n        pscs: []\n      },\n      tags: [],\n      treeData: {\n        name: \"\",\n        naics_code: \"Select All\",\n        children: []\n      },\n      service_codes: {\n        name: \"\",\n        psc_code: \"Select All\",\n        children: []\n      },\n      tag: \"\",\n      // tags:[],\n      selectedNaicses: [],\n      childItems: [],\n      filterAgency: [],\n      state_country1: [],\n      allFilterAgency: [],\n      SpecificAgency: [],\n      agencycheck: \"\",\n      agencyAll: [],\n      agencySpecific: [],\n      searchstate: \"\",\n      errors: [],\n      tdr_agency: [],\n      countryid: [],\n      selected: [],\n      statussearch: true,\n      selectAll: false,\n      searchagencyState: \"\",\n      stateSelected: [],\n      selectAllState: false,\n      selectedcategory: [],\n      selectAllcategory: false,\n      selectedState: [],\n      agencyState: [],\n      categorys: [],\n      status: true,\n      searchagencycategory: \"\",\n      interstedUser: {\n        id: \"\",\n        user_id: \"\"\n      },\n      liststate: {\n        country_id: [10]\n      },\n      listcountry: {\n        country_id: []\n      },\n      searchfilter: {\n        tdr_country: []\n      },\n      keywords: [],\n      countrys: [],\n      state_id: [],\n      naics_id: [],\n      psc: [],\n      category_status: [],\n      agency_fedral: [],\n      notice_type: [],\n      state_country: [],\n      federal: [],\n      sideStatus: [],\n      notices: [],\n      state: [],\n      user_id: \"\",\n      savedata: [],\n      frequency: \"\",\n      agencycount: 0,\n      categorycount: 0,\n      allFilterCategroy: [],\n      savealert: {\n        id: \"\",\n        user_id: \"\",\n        on_off: 1,\n        alert_label: \"\",\n        region_id: \"\",\n        state_id: \"\",\n        frequency: \"\",\n        keywords: \"\",\n        category_id: \"\",\n        naics_id: \"\",\n        notice_type: \"\",\n        psc: \"\",\n        category_status: \"\",\n        agency_fedral: \"\",\n        created_on: \"\",\n        updated_on: \"\"\n      },\n      isLoading: false,\n      isLoading1: false,\n      isLoading2: false,\n      fullPage: true,\n      fullPage1: false,\n      fullPage2: false,\n      naics_code: {\n        search: \"\",\n        alert_id: ''\n      },\n      service_code: {\n        search: \"\",\n        alert_id: ''\n      },\n      clear_all_naics: false,\n      clear_all_psc: false,\n      state_agency_keyword: null\n    };\n  },\n  watch: {},\n  beforeRouteEnter(to, from, next) {\n    next(vm => {\n      if (to.name == 'EditStateAlert') {\n        vm.alert.alert_id = to.params.alert_id;\n        vm.getAlert();\n      }\n    });\n  },\n  mounted() {\n    this.getSates();\n  },\n  computed: {\n    filterState() {\n      return this.state_country.filter(state => {\n        return state.state_name.toLowerCase().includes(this.searchstate.toLowerCase());\n      });\n    },\n    filterSpecifyAgency() {\n      return this.agencySpecific.filter(statefederal => {\n        return statefederal.state_agency_name.toLowerCase().includes(this.searchagencyState.toLowerCase());\n      });\n    }\n  },\n  methods: {\n    selectAllCategories() {\n      let vm = this;\n      vm.alert.categories = [];\n      vm.sorted_categories.map(function (element) {\n        vm.alert.categories.push(element.category_id);\n      });\n      vm.selected_categories = [];\n      vm.alert.categories.map(function (element) {\n        let selected = vm.sorted_categories.filter(function (ele) {\n          return ele.category_id == element;\n        });\n        if (selected.length) {\n          vm.selected_categories.push({\n            category_id: selected[0].category_id,\n            category_name: selected[0].category_name\n          });\n        }\n      });\n    },\n    deselectCategories() {\n      this.sorted_categories = this.categories;\n      this.category_keyword = null;\n      this.alert.categories = [];\n      this.selected_categories = [];\n    },\n    getAlert() {\n      let vm = this;\n      if (vm.$store.getters.user) {\n        vm.alert.user_id = vm.$store.getters.user.user_id;\n        let uri = \"getAlert\";\n        vm.$store.dispatch(\"post\", {\n          uri: uri,\n          data: vm.alert\n        }).then(function (response) {\n          vm.alert = response.data.data;\n          vm.tags = vm.alert.keywords;\n          vm.status = false;\n        }).catch(function (error) {\n          vm.errors = error.response.data.errors;\n          vm.$store.dispatch(\"error\", error.response.data.message);\n        });\n      }\n    },\n    removeStateAgency(state_agency) {\n      console.log(state_agency);\n      let vm = this;\n      let agency = vm.selected_state_agencies.filter(function (element) {\n        return element.state_agency_id != state_agency.state_agency_id;\n      });\n      vm.selected_state_agencies = agency;\n      vm.alert.state_agencies = [];\n    },\n    removeTag(index) {\n      this.alert.keywords.splice(index, 1);\n    },\n    removeLastTag(event) {\n      if (event.target.value.length === 0) {\n        this.removeTag(this.alert.keywords.length - 1);\n      }\n    },\n    updateStateAgencies(state_agency, event) {\n      let vm = this;\n      if (event.target.checked) {\n        if (!vm.alert.state_agencies.includes(state_agency.state_agency_id)) {\n          vm.alert.state_agencies.push(state_agency.state_agency_id);\n        }\n      } else {\n        if (vm.alert.state_agencies.includes(state_agency.state_agency_id)) {\n          let state_agencies = vm.alert.state_agencies.filter(function (element) {\n            return element != state_agency.state_agency_id;\n          });\n          vm.alert.state_agencies = state_agencies;\n        }\n      }\n      vm.selected_state_agencies = [];\n      vm.alert.state_agencies.map(function (element) {\n        let selected = vm.sorted_state_agencies.filter(function (ele) {\n          return ele.state_agency_id == element;\n        });\n        if (selected.length) {\n          vm.selected_state_agencies.push({\n            federeal_agency_id: selected[0].state_agency_id,\n            state_agency_name: selected[0].state_agency_name\n          });\n        }\n      });\n    },\n    updateCategories(category, event) {\n      if (event.target.checked) {\n        if (!this.alert.categories.includes(category.category_id)) {\n          this.alert.categories.push(category.category_id);\n        }\n      } else {\n        if (this.alert.categories.includes(category.category_id)) {\n          let categories = this.alert.categories.filter(function (element) {\n            return element != category.category_id;\n          });\n          this.alert.categories = categories;\n        }\n      }\n    },\n    updateStates(state, event) {\n      if (event.target.checked) {\n        if (!this.alert.states.includes(state.state_id)) {\n          this.alert.states.push(state.state_id);\n        }\n      } else {\n        if (this.alert.states.includes(state.state_id)) {\n          let states = this.alert.states.filter(function (element) {\n            return element != state.state_id;\n          });\n          this.alert.states = states;\n        }\n      }\n    },\n    updateStateNotices(notice, event) {\n      if (event.target.checked) {\n        if (!this.alert.state_notices.includes(notice.state_notice_id)) {\n          this.alert.state_notices.push(notice.state_notice_id);\n        }\n      } else {\n        if (this.alert.state_notices.includes(notice.state_notice_id)) {\n          let state_notices = this.alert.state_notices.filter(function (element) {\n            return element != notice.state_notice_id;\n          });\n          this.alert.state_notices = state_notices;\n        }\n      }\n    },\n    sortStateAgency() {\n      let vm = this;\n      vm.sorted_state_agencies = vm.state_agencies.filter(function (element) {\n        return element.state_agency_name.toLowerCase().includes(vm.state_agency_keyword.toLowerCase());\n      });\n    },\n    selectAllStateAgencies() {\n      let vm = this;\n      vm.alert.state_agencies = [];\n      vm.sorted_state_agencies.map(function (element) {\n        vm.alert.state_agencies.push(element.state_agency_id);\n      });\n      vm.selected_state_agencies = [];\n      vm.alert.state_agencies.map(function (element) {\n        let selected = vm.sorted_state_agencies.filter(function (ele) {\n          return ele.state_agency_id == element;\n        });\n        if (selected.length) {\n          vm.selected_state_agencies.push({\n            federeal_agency_id: selected[0].state_agency_id,\n            state_agency_name: selected[0].state_agency_name\n          });\n        }\n      });\n    },\n    deselectFederalAgencies() {\n      this.sorted_state_agencies = this.state_agencies;\n      this.state_agency_keyword = null;\n      this.alert.state_agencies = [];\n      this.selected_state_agencies = [];\n    },\n    selectAllStates() {\n      let vm = this;\n      vm.alert.states = [];\n      vm.sorted_states.map(function (element) {\n        vm.alert.states.push(element.state_id);\n      });\n    },\n    deselectAllStates() {\n      this.sorted_states = this.states;\n      this.state_keyword = null;\n      this.alert.states = [];\n    },\n    getSates() {\n      let vm = this;\n      let uri = \"getStates\";\n      vm.$store.dispatch(\"post\", {\n        uri: uri,\n        data: {\n          country_id: 10\n        }\n      }).then(function (response) {\n        vm.states = response.data;\n        vm.sorted_states = vm.states;\n        vm.getStateNotices();\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    sortStates() {\n      let vm = this;\n      vm.sorted_states = vm.states.filter(function (element) {\n        return element.state_name.toLowerCase().includes(vm.state_keyword.toLowerCase());\n      });\n    },\n    getStateNotices() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getStateNotices\"\n      }).then(function (response) {\n        vm.state_notices = response.data;\n        vm.getStateAgencies();\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getStateAgencies() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getStateAgencies\"\n      }).then(function (response) {\n        vm.state_agencies = response.data;\n        vm.sorted_state_agencies = vm.state_agencies;\n        vm.getCategories();\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getCategories() {\n      let vm = this;\n      let uri = \"getCategories\";\n      vm.$store.dispatch(\"post\", {\n        uri: uri\n      }).then(function (response) {\n        vm.categories = response.data;\n        vm.sorted_categories = vm.categories;\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    createAlerts() {\n      let vm = this;\n      vm.isLoading = true;\n      vm.alert.keywords = vm.tags;\n      if (vm.$store.getters.user) {\n        vm.alert.user_id = vm.$store.getters.user.user_id;\n        vm.$store.dispatch(\"post\", {\n          uri: 'addStateAlerts',\n          data: vm.alert\n        }).then(function (response) {\n          vm.isLoading = false;\n          vm.$store.dispatch(\"success\", \"Alert is added successfully\");\n          vm.$router.push(\"/bids/alerts\");\n        }).catch(function (error) {\n          console.log(error);\n          vm.isLoading = false;\n          if (error.response.data.errors.states) {\n            vm.state_border_red = 'border-color:red';\n          }\n          vm.errors = error.response.data.errors;\n          vm.$store.dispatch(\"error\", error.response.data.message);\n        });\n      }\n    },\n    updateAlerts() {\n      let vm = this;\n      vm.isLoading = true;\n      vm.alert.naics = vm.$store.getters.selected_naics;\n      vm.alert.pscs = vm.$store.getters.selected_pscs;\n      vm.alert.keywords = vm.tags;\n      if (vm.$store.getters.user) {\n        vm.alert.user_id = vm.$store.getters.user.user_id;\n        vm.$store.dispatch(\"post\", {\n          uri: 'updateStateAlerts',\n          data: vm.alert\n        }).then(function (response) {\n          vm.isLoading = false;\n          vm.$store.dispatch(\"success\", \"Alert is updated successfully\");\n          vm.$router.push(\"/bids/alerts\");\n        }).catch(function (error) {\n          vm.isLoading = false;\n          console.log(error);\n          if (error.response.data.errors.states) {\n            vm.state_border_red = 'border-color:red';\n          }\n          vm.errors = error.response.data.errors;\n          vm.$store.dispatch(\"error\", error.response.data.message);\n        });\n      }\n    },\n    getNotice(region_id) {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getNotice?region_id=\" + region_id\n      }).then(function (response) {\n        vm.notices = response.data.data;\n        vm.getasideStatus();\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getasideStatus() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getAllSetAsideStatus\"\n      }).then(function (response) {\n        vm.sideStatus = response.data.data;\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    backSaveAlert() {\n      this.$store.commit(\"setAlert\", \"\");\n      this.$store.commit(\"setSelectedNaics\", []);\n      this.$store.commit(\"setSelectedPsces\", []);\n      this.$router.push(\"/bids/alerts\");\n    },\n    clearAllNaics() {\n      this.isLoading1 = true;\n      setTimeout(() => {\n        this.clear_all_naics = !this.clear_all_naics;\n        this.isLoading1 = false;\n      }, 1000);\n    },\n    clearAllPsc() {\n      this.isLoading2 = true;\n      setTimeout(() => {\n        this.clear_all_psc = !this.clear_all_psc;\n        this.isLoading2 = false;\n      }, 1000);\n    },\n    handleChangeTag(tags) {\n      let vm = this;\n      vm.tags = tags;\n      vm.keywords = vm.tags;\n    },\n    getNaicsBackend() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getNaics\",\n        data: vm.naics_code\n      }).then(function (response) {\n        vm.isLoading1 = false;\n        vm.treeData.children = response.data.data;\n        vm.$store.dispatch(\"setNaics\", vm.treeData.children);\n        // vm.getServiceCodes();\n      }).catch(function (error) {\n        vm.isLoading1 = false;\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    // getNaics() {\n    // this.getNaicsBackend()\n    // let vm = this;\n    // vm.fullPage = false;\n    // vm.isLoading2 = false;\n    // vm.isLoading1 = true;\n    // if(vm.naics_code.alert_id){\n    //     this.getNaicsBackend()\n    // }else{\n    //     if(vm.$store.getters.naicses.length){\n    //         vm.treeData.children = vm.$store?.getters?.naicses\n    //         vm.isLoading1 = false\n    //         vm.getServiceCodes();\n    //     }else{\n    //         this.getNaicsBackend()\n    //     }\n    // }\n    // },\n\n    getServiceCodes() {\n      let vm = this;\n      vm.fullPage = false;\n      vm.isLoading1 = false;\n      vm.isLoading2 = true;\n      vm.service_code.alert_id = vm.$store.getters.alert.id;\n      // if(vm.$store.getters.psces.length){\n      //     vm.service_codes.children = vm.$store.getters.psces\n      //     vm.isLoading2 = false\n      // }\n      vm.$store.dispatch(\"post\", {\n        uri: \"getPsc\",\n        data: vm.service_code\n      }).then(function (response) {\n        vm.isLoading2 = false;\n        vm.$store.dispatch(\"setPsces\", response.data.data);\n        vm.service_codes.children = vm.$store.getters.psces;\n        if (response.data.data.length) {\n          if (response.data.data[0].psces && response.data.data[0].psces[0] != \"\") {\n            vm.$store.dispatch(\"setSelectedPsces\", response.data.data[0].psces);\n            vm.applyFilterPsc();\n          }\n        }\n      }).catch(function (error) {\n        //    vm.isLoading = false\n        //      vm.fullPage= false\n        vm.isLoading2 = false;\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n      // if(vm.service_code.alert_id){\n      //     vm.$store\n      //         .dispatch(\"post\", { uri: \"getPsc\", data: vm.service_code })\n      //         .then(function (response) {\n      //             vm.isLoading2 = false\n      //             vm.$store.dispatch(\"setPsces\", response.data.data)\n      //             vm.service_codes.children = vm.$store.getters.psces\n      //             if(response.data.data.length){\n      //                 if(response.data.data[0].psces && response.data.data[0].psces[0] != \"\"){\n      //                     vm.$store.dispatch(\"setSelectedPsces\", response.data.data[0].psces);\n      //                     vm.applyFilterPsc()\n      //                 }\n      //             }\n      //         })\n      //         .catch(function (error) {\n      //             //    vm.isLoading = false\n      //             //      vm.fullPage= false\n      //             vm.isLoading2 = false\n      //             vm.errors = error.response.data.errors;\n      //             vm.$store.dispatch(\"error\", error.response.data.message);\n      //         });\n      // }else{\n      //     vm.isLoading2 = false\n      //     vm.service_codes.children = vm.$store.getters.psces\n      // }\n    },\n    removeTag(index) {\n      this.agency_fedral.splice(index, 1);\n    },\n    submit() {\n      let vm = this;\n      if (vm.status) {\n        vm.createAlerts();\n      } else {\n        vm.updateAlert();\n      }\n    },\n    filterCategory() {\n      if (this.searchagencycategory == \"\") {\n        this.categorys = this.allFilterCategroy;\n      }\n      this.categorys = this.allFilterCategroy.filter(entry => {\n        return entry.category_name.toLowerCase().includes(this.searchagencycategory.toLowerCase());\n      });\n    },\n    callFunction: function () {\n      var currentDateWithFormat = new Date().toJSON().slice(0, 10).replace(/-/g, \"/\");\n      // console.log(currentDateWithFormat);\n      this.savealert.created_on = currentDateWithFormat;\n      this.savealert.updated_on = currentDateWithFormat;\n    },\n    getcategory() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getCategory\"\n      }).then(function (response) {\n        vm.categorys = response.data.data;\n        vm.categorycount = vm.categorys.length;\n        vm.allFilterCategroy = vm.categorys;\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getCountry() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getCountry\"\n      }).then(function (response) {\n        vm.countrys = response.data.data;\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    selectCategory() {\n      this.selectedcategory = [];\n      this.selectAllcategory = false;\n      if (!this.selectAllcategory) {\n        for (let i in this.categorys) {\n          this.selectedcategory.push(this.categorys[i].category_id);\n        }\n        this.searchfilter.tdr_category = this.selectedcategory;\n      }\n    },\n    DeselectCategory() {\n      this.selectedcategory = [];\n      this.searchfilter.tdr_category = [];\n    },\n    updateCheckallCategory(category) {\n      if (this.categorys.length == this.selectedcategory.length) {\n        this.selectedcategory = [];\n        this.selectAllcategory = true;\n        this.searchfilter.tdr_category = this.selectedcategory;\n      } else {\n        this.selectAllcategory = false;\n        this.searchfilter.tdr_category = this.selectedcategory;\n      }\n    },\n    selectCountryState() {\n      this.stateSelected = [];\n      this.stateselectAll = false;\n      if (!this.stateselectAll) {\n        this.filters.filter(x => x.table === \"state\").forEach(x => this.filters.splice(this.filters.indexOf(x), 1));\n        for (let i in this.state_country1) {\n          this.stateSelected.push(this.state_country[i].state_id);\n          this.filters.push({\n            table: \"state\",\n            id: this.state_country[i].state_id,\n            name: this.state_country[i].state_name\n          });\n        }\n        // alert(this.selected);\n        this.searchfilter.tdr_state = this.stateSelected;\n        this.getfedralDocument();\n      }\n    },\n    DeselectCountryState() {\n      this.stateSelected = [];\n      this.searchfilter.tdr_state = [];\n      this.filters.filter(x => x.table === \"state\").forEach(x => this.filters.splice(this.filters.indexOf(x), 1));\n      this.getfedralDocument();\n    },\n    updateCountryStateCheckall(state) {\n      if (this.state_country.length == this.stateSelected.length) {\n        this.stateSelected = [];\n        this.stateselectAll = true;\n        this.searchfilter.tdr_state = this.stateSelected;\n        this.getfedralDocument();\n        if (this.stateselectAll == true) {\n          this.filters.filter(x => x.table === \"state\").forEach(x => this.filters.splice(this.filters.indexOf(x), 1));\n          for (let i in this.state_country) {\n            this.stateSelected.push(this.state_country[i].state_id);\n            // this.statefilter.push(this.state_country[i]);\n            this.filters.push({\n              table: \"state\",\n              id: this.state_country[i].state_id,\n              name: this.state_country[i].state_name\n            });\n          }\n        }\n      } else {\n        let i = this.filters.findIndex(data => data.id === state.state_id);\n        if (i !== -1) {\n          this.filters.splice(i, 1);\n        } else {\n          this.filters.push({\n            table: \"state\",\n            id: state.state_id,\n            name: state.state_name\n          });\n          // this.statefilter.push(state);\n          this.filters = this.filters.filter((state, index) => this.filters.indexOf(state) === index);\n        }\n        this.stateselectAll = false;\n        // alert(this.selected);\n        this.searchfilter.tdr_state = this.stateSelected;\n\n        // alert(this.selected.length);\n      }\n    },\n    getSateCountry() {\n      let vm = this;\n      if (vm.listcountry.country_id[0] !== \"\") {\n        vm.searchfilter.tdr_country = vm.listcountry.country_id;\n      } else {\n        vm.searchfilter.tdr_country = [];\n      }\n      vm.listcountry.country_id = Object.assign({}, [vm.liststate.country_id]);\n      let uri = \"getState\";\n      vm.$store.dispatch(\"post\", {\n        uri: uri,\n        data: vm.listcountry\n      }).then(function (response) {\n        vm.state_country1 = response.data.data;\n        vm.statecount1 = vm.state_country1.length;\n        vm.allFilterState = vm.state_country1;\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getFederal() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getAgencyFederal\"\n      }).then(function (response) {\n        vm.federal = response.data.data;\n        //console.log(vm.federal);\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getAllAgency() {\n      let vm = this;\n      vm.isLoading = true;\n      let uri = \"getAgency\";\n      vm.$store.dispatch(\"post\", {\n        uri: uri\n      }).then(function (response) {\n        vm.isLoading = false;\n        vm.filterAgency = response.data.data;\n        vm.allFilterAgency = vm.filterAgency;\n        vm.agencycount = vm.filterAgency.length;\n      }).catch(function (error) {\n        vm.isLoading = false;\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getSpecificAgency() {\n      let vm = this;\n      vm.isLoading = true;\n      let uri = \"getAgencyFederal\";\n      vm.$store.dispatch(\"post\", {\n        uri: uri\n      }).then(function (response) {\n        vm.isLoading = false;\n        vm.federal = response.data.data;\n        vm.filterAgency = response.data.data;\n        vm.allFilterAgency = vm.filterAgency;\n        vm.agencycount = vm.filterAgency.length;\n        //vm.getSavedsearch();\n      }).catch(function (error) {\n        vm.isLoading = false;\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    filter1Agency() {\n      if (this.searchagencyState == \"\") {\n        this.filterAgency = this.allFilterAgency;\n      }\n      this.filterAgency = this.allFilterAgency.filter(entry => {\n        return entry.state_agency_name.toLowerCase().includes(this.searchagencyState.toLowerCase());\n      });\n    },\n    select() {\n      this.selected = [];\n      if (!this.selectAll) {\n        for (let i in this.state_country) {\n          this.selected.push(this.state_country[i].state_id);\n        }\n        // alert(this.selected);\n        this.state_id = this.selected;\n      }\n    },\n    Deselect() {\n      this.selected = [];\n      this.state_id = [];\n    },\n    updateCheckall() {\n      if (this.state_country.length == this.selected.length) {\n        this.selectAll = true;\n        // alert(this.selected);\n        //alert(this.options);\n        this.state_id = this.selected;\n\n        // alert(this.searchfilter.tdr_state);\n      } else {\n        this.selectAll = false;\n        // alert(this.selected);\n        this.state_id = this.selected;\n\n        // alert(this.selected.length);\n      }\n    },\n    // federal search subhash\n    selectState() {\n      this.selectedState = [];\n      if (!this.selectAllState) {\n        for (let i in this.filterAgency) {\n          this.selectedState.push(this.filterAgency[i].state_agency_name);\n        }\n        this.agency_fedral = this.selectedState;\n      }\n    },\n    DeselectState() {\n      this.selectedState = [];\n      this.agency_fedral = [];\n    },\n    updateCheckallState() {\n      if (this.filterAgency.length == this.selectedState.length) {\n        this.selectAllState = true;\n        this.agency_fedral = this.selectedState;\n      } else {\n        this.selectAllState = false;\n        this.agency_fedral = this.selectedState;\n      }\n    },\n    addTag(event) {\n      event.preventDefault();\n      let val = event.target.value.trim();\n      if (val.length > 0) {\n        if (this.tags.length >= 1) {\n          for (let i = 0; i < this.tags.length; i++) {\n            if (this.tags[i] === val) {\n              return false;\n            }\n          }\n        }\n        this.tags.push(val);\n        event.target.value = \"\";\n        console.log(this.tags);\n      }\n    },\n    removeTag(index) {\n      this.tags.splice(index, 1);\n    },\n    removeLastTag(event) {\n      if (event.target.value.length === 0) {\n        this.removeTag(this.tags.length - 1);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","state_border_red","states","sorted_states","state_keyword","state_notices","state_agencies","sorted_categories","category_keyword","sorted_state_agencies","selected_state_agencies","categories","selected_categories","naics","alert","user_id","alert_id","titel","frequency","region","keywords","pscs","tags","treeData","name","naics_code","children","service_codes","psc_code","tag","selectedNaicses","childItems","filterAgency","state_country1","allFilterAgency","SpecificAgency","agencycheck","agencyAll","agencySpecific","searchstate","errors","tdr_agency","countryid","selected","statussearch","selectAll","searchagencyState","stateSelected","selectAllState","selectedcategory","selectAllcategory","selectedState","agencyState","categorys","status","searchagencycategory","interstedUser","id","liststate","country_id","listcountry","searchfilter","tdr_country","countrys","state_id","naics_id","psc","category_status","agency_fedral","notice_type","state_country","federal","sideStatus","notices","state","savedata","agencycount","categorycount","allFilterCategroy","savealert","on_off","alert_label","region_id","category_id","created_on","updated_on","isLoading","isLoading1","isLoading2","fullPage","fullPage1","fullPage2","search","service_code","clear_all_naics","clear_all_psc","state_agency_keyword","watch","beforeRouteEnter","to","from","next","vm","params","getAlert","mounted","getSates","computed","filterState","filter","state_name","toLowerCase","includes","filterSpecifyAgency","statefederal","state_agency_name","methods","selectAllCategories","map","element","push","ele","length","category_name","deselectCategories","$store","getters","user","uri","dispatch","then","response","catch","error","message","removeStateAgency","state_agency","console","log","agency","state_agency_id","removeTag","index","splice","removeLastTag","event","target","value","updateStateAgencies","checked","federeal_agency_id","updateCategories","category","updateStates","updateStateNotices","notice","state_notice_id","sortStateAgency","selectAllStateAgencies","deselectFederalAgencies","selectAllStates","deselectAllStates","getStateNotices","sortStates","getStateAgencies","getCategories","createAlerts","$router","updateAlerts","selected_naics","selected_pscs","getNotice","getasideStatus","backSaveAlert","commit","clearAllNaics","setTimeout","clearAllPsc","handleChangeTag","getNaicsBackend","getServiceCodes","psces","applyFilterPsc","submit","updateAlert","filterCategory","entry","callFunction","currentDateWithFormat","Date","toJSON","slice","replace","getcategory","getCountry","selectCategory","i","tdr_category","DeselectCategory","updateCheckallCategory","selectCountryState","stateselectAll","filters","x","table","forEach","indexOf","tdr_state","getfedralDocument","DeselectCountryState","updateCountryStateCheckall","findIndex","getSateCountry","Object","assign","statecount1","allFilterState","getFederal","getAllAgency","getSpecificAgency","filter1Agency","select","Deselect","updateCheckall","selectState","DeselectState","updateCheckallState","addTag","preventDefault","val","trim"],"sources":["D:\\Aeriesys vue projects\\bidsportal.com\\admin\\src\\views\\Users\\Alerts\\StateAlert.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid pb-3\">\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <h2 class=\"main-title mb-2\">State Alert</h2>\r\n            <router-link to=\"/alerts\" class=\"btn btn-primary mb-2\">Back</router-link>\r\n        </div>\r\n        <div class=\"row g-3\">\r\n            <div class=\"col-md-12\">\r\n                <form class=\"card\" @submit.prevent=\"submitForm()\">\r\n                    <div class=\"card-header\">\r\n                        <div class=\"d-sm-flex align-items-center justify-content-between\">\r\n                            <h6 class=\"card-title mb-0\" v-if=\"status\"><strong>Add State Alert</strong></h6>\r\n                            <h6 class=\"card-title mb-0\" v-else><strong>Update State Alert</strong></h6>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <div class=\"row g-3\">\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label>User <span class=\"text-danger\">*</span></label>\r\n                                    <select class=\"form-control form-control-sm\"\r\n                                        :class=\"{ 'is-invalid': errors.user_id }\" v-model=\"alert.user_id\">\r\n                                        <option value=\"\">Select User</option>\r\n                                        <option v-for=\"(user, key) in users\" :key=\"key\" :value=\"user.user_id\">{{\r\n                                            user.name }}</option>\r\n                                    </select>\r\n                                    <span v-if=\"errors.user_id\" class=\"invalid-feedback\">{{ errors.user_id[0] }}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Alert Title<span class=\"text-danger\">*</span></label>\r\n                                    <input type=\"text\" class=\"form-control form-control-sm\"\r\n                                        :class=\"{ 'is-invalid': errors.alert_title }\" v-model=\"alert.alert_title\"\r\n                                        placeholder=\"Alert Title\" />\r\n                                    <span v-if=\"errors.alert_title\" class=\"invalid-feedback\">{{\r\n                                        errors.alert_title[0] }}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Frequency<span class=\"text-danger\">*</span></label>\r\n                                    <select class=\"form-select form-select-sm\" v-model=\"alert.frequency\"\r\n                                        :class=\"{ 'is-invalid': errors.frequency }\">\r\n                                        <option selected=\"\" value=\"\">Select your Frequency</option>\r\n                                        <option value:daily>Daily</option>\r\n                                        <option value:weekly>Weekly</option>\r\n                                    </select>\r\n                                    <span v-if=\"errors.frequency\" class=\"invalid-feedback\">{{ errors.frequency[0]\r\n                                        }}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label>State <span class=\"text-danger\">*</span></label>\r\n                                    <label class=\"form-label\">{{ alert.states.length }} of {{ sorted_states.length }}\r\n                                        Selected</label>\r\n                                    <div class=\"\">\r\n                                        <button type=\"button\" class=\"btn btn-state form-select\"\r\n                                            data-bs-toggle=\"dropdown\" :style=\"state_border_red\">\r\n                                            <span class=\"text-center\"\r\n                                                style=\"float: left;color: var(--bs-gray-500); font-weight: 400;\">Select\r\n                                                State</span>\r\n                                        </button>\r\n                                        <span v-if=\"errors.states\" style=\"color: #dc3545;font-size:11pt;\">{{\r\n                                            errors.states[0] }}</span>\r\n                                        <label for=\"inputfrequen1\" class=\"form-label\"> </label>\r\n                                        <ul class=\"dropdown-menu\">\r\n                                            <li class=\"dropdown-item\">\r\n                                                <div class=\"\">\r\n                                                    {{ alert.states?.length }} of {{ sorted_states?.length }}\r\n                                                    <span v-if=\"alert.states?.length !== sorted_states?.length\">\r\n                                                        <a href=\"javascript:void(0)\" @click=\"selectAllStates()\" class=\"\"\r\n                                                            ref=\"selectState\">\r\n                                                            Select All /\r\n                                                        </a>\r\n                                                    </span>\r\n                                                    <span>\r\n                                                        <a href=\"javascript:void(0)\" @click=\"deselectAllStates()\"\r\n                                                            class=\"\" ref=\"selectState\">\r\n                                                            Reset all\r\n                                                        </a>\r\n                                                    </span>\r\n                                                    <div class=\"ss-filter-search\">\r\n                                                        <input autocomplete=\"off\" class=\"form-control\" type=\"text\"\r\n                                                            v-model=\"state_keyword\" placeholder=\"Search state\"\r\n                                                            @keyup=\"sortStates()\" />\r\n                                                        <div class=\"liststate\" id=\"style-3\">\r\n                                                            <ul class=\"checkbox\" style=\"padding-left: 10px;\"\r\n                                                                v-for=\"state in sorted_states\" :key=\"state.state_id\">\r\n                                                                <li class=\"list-group-item\">\r\n                                                                    <input class=\"form-check-input me-1\"\r\n                                                                        id=\"federalcheck\" type=\"checkbox\"\r\n                                                                        :value=\"state.state_id\" v-model=\"alert.states\"\r\n                                                                        @click=\"updateStates(state, $event)\" />\r\n                                                                    {{ state.state_name }}\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Notice type<span class=\"text-danger\">*</span></label>\r\n                                    <span v-if=\"errors.state_notices\" style=\"color: #dc3545;margin-top:-10px\">{{\r\n                                        errors.state_notices[0] }}</span>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6 col-lg-3 col-xl-3\" v-for=\"notice in state_notices\"\r\n                                            :key=\"notice.notice_id\">\r\n                                            <ul class=\"list-group mb-0\">\r\n                                                <li class=\"list-group-item list-group-item-borderless\">\r\n                                                    <input type=\"checkbox\" class=\"form-check-input me-2\"\r\n                                                        id=\"rememberCheck\" :value=\"notice.state_notice_id\"\r\n                                                        v-model=\"alert.state_notices\"\r\n                                                        @click=\"updateStateNotices(notice, $event)\" />\r\n                                                    <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                                        {{ notice.notice_name }}\r\n                                                    </label>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Categories <span class=\"text-danger\">*</span></label>\r\n                                    <div class=\"collapse show\" id=\"collapseExample7\">\r\n                                        <div class=\"collapse show\" id=\"collapseExample7\">\r\n                                            <div class=\"\">\r\n                                                {{ alert.categories?.length }} of {{ sorted_categories?.length\r\n                                                }}\r\n                                                <span v-if=\"alert.categories?.length !== sorted_categories?.length\">\r\n                                                    <a href=\"javascript:void(0)\" @click=\"selectAllCategories()\" class=\"\"\r\n                                                        ref=\"selectState\">\r\n                                                        Select All /\r\n                                                    </a></span>\r\n                                                <a href=\"javascript:void(0)\" @click=\"deselectCategories()\" class=\"\"\r\n                                                    ref=\"selectState\">\r\n                                                    Reset all\r\n                                                </a>\r\n                                                <div class=\"col-md-6\">\r\n                                                    <div class=\"ss-filter-search\">\r\n                                                        <input class=\"form-control pe-5\" type=\"search\"\r\n                                                            placeholder=\"Search\" aria-label=\"Search\"\r\n                                                            v-model=\"category_keyword\" @keyup=\"sortCategory()\"\r\n                                                            style=\"border-radius: 0.5rem 0.5rem 0px 0px;\" />\r\n                                                        <div class=\"liststate scroll1 hgt\" id=\"style-3\"\r\n                                                            style=\"border:1px solid #c5c5c7; border-top:0px\">\r\n                                                            <ul class=\"list-group checkbox\"\r\n                                                                v-for=\"category in sorted_categories\"\r\n                                                                :key=\"category.agency_id\">\r\n                                                                <li\r\n                                                                    class=\"list-group-item d-flex border-0 border-bottom\">\r\n                                                                    &nbsp; <input class=\"form-check-input me-1\"\r\n                                                                        type=\"checkbox\" :value=\"category.category_id\"\r\n                                                                        v-model=\"alert.categories\"\r\n                                                                        @click=\"updateCategories(category, $event)\" />\r\n                                                                    &nbsp; {{ category.category_name }}\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-footer text-end\">\r\n                        <button class=\"btn btn-warning me-2\">Discard</button>\r\n                        <button class=\"btn btn-primary \" type=\"submit\">\r\n                            <span v-if=\"status\">Submit </span>\r\n                            <span v-else>Update </span>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n// import TreeItem from \"@/components/TreeItem.vue\";\r\n// import PscTree from \"@/components/PscTree.vue\";\r\n// import Loading from \"vue-loading-overlay\";\r\n// import \"vue-loading-overlay/dist/css/index.css\";\r\n// import Vue3TagsInput from \"vue3-tags-input\";\r\nexport default {\r\n    // components: { TreeItem, PscTree, Loading },\r\n    data() {\r\n        return {\r\n            state_border_red: '',\r\n            states: [],\r\n            sorted_states: [],\r\n            state_keyword: '',\r\n            state_notices: [],\r\n            state_agencies: [],\r\n            sorted_categories: [],\r\n            category_keyword: null,\r\n            sorted_state_agencies: [],\r\n            selected_state_agencies: [],\r\n            categories: [],\r\n            selected_categories: [],\r\n            naics: [],\r\n            alert: {\r\n                user_id: '',\r\n                alert_id: '',\r\n                titel: '',\r\n                frequency: '',\r\n                region: 'State',\r\n                keywords: [],\r\n                states: [],\r\n                categories: [],\r\n                state_notices: [],\r\n                state_agencies: [],\r\n                categories: [],\r\n                naics: [],\r\n                pscs: []\r\n            },\r\n            tags: [],\r\n            treeData: {\r\n                name: \"\",\r\n                naics_code: \"Select All\",\r\n                children: [],\r\n            },\r\n            service_codes: {\r\n                name: \"\",\r\n                psc_code: \"Select All\",\r\n                children: [],\r\n            },\r\n            tag: \"\",\r\n            // tags:[],\r\n            selectedNaicses: [],\r\n            childItems: [],\r\n            filterAgency: [],\r\n            state_country1: [],\r\n            allFilterAgency: [],\r\n            SpecificAgency: [],\r\n            agencycheck: \"\",\r\n            agencyAll: [],\r\n            agencySpecific: [],\r\n            searchstate: \"\",\r\n            errors: [],\r\n            tdr_agency: [],\r\n            countryid: [],\r\n            selected: [],\r\n            statussearch: true,\r\n            selectAll: false,\r\n            searchagencyState: \"\",\r\n            stateSelected: [],\r\n            selectAllState: false,\r\n            selectedcategory: [],\r\n            selectAllcategory: false,\r\n            selectedState: [],\r\n            agencyState: [],\r\n            categorys: [],\r\n            status: true,\r\n            searchagencycategory: \"\",\r\n            interstedUser: {\r\n                id: \"\",\r\n                user_id: \"\",\r\n            },\r\n            liststate: {\r\n                country_id: [10],\r\n            },\r\n            listcountry: {\r\n                country_id: [],\r\n            },\r\n            searchfilter: {\r\n                tdr_country: [],\r\n            },\r\n            keywords: [],\r\n            countrys: [],\r\n            state_id: [],\r\n            naics_id: [],\r\n            psc: [],\r\n            category_status: [],\r\n            agency_fedral: [],\r\n            notice_type: [],\r\n            state_country: [],\r\n            federal: [],\r\n            sideStatus: [],\r\n            notices: [],\r\n            state: [],\r\n            user_id: \"\",\r\n            savedata: [],\r\n            frequency: \"\",\r\n            agencycount: 0,\r\n            categorycount: 0,\r\n            allFilterCategroy: [],\r\n            savealert: {\r\n                id: \"\",\r\n                user_id: \"\",\r\n                on_off: 1,\r\n                alert_label: \"\",\r\n                region_id: \"\",\r\n                state_id: \"\",\r\n                frequency: \"\",\r\n                keywords: \"\",\r\n                category_id: \"\",\r\n                naics_id: \"\",\r\n                notice_type: \"\",\r\n                psc: \"\",\r\n                category_status: \"\",\r\n                agency_fedral: \"\",\r\n                created_on: \"\",\r\n                updated_on: \"\",\r\n            },\r\n            isLoading: false,\r\n            isLoading1: false,\r\n            isLoading2: false,\r\n            fullPage: true,\r\n            fullPage1: false,\r\n            fullPage2: false,\r\n            naics_code: {\r\n                search: \"\",\r\n                alert_id: ''\r\n            },\r\n            service_code: {\r\n                search: \"\",\r\n                alert_id: ''\r\n            },\r\n            clear_all_naics: false,\r\n            clear_all_psc: false,\r\n            state_agency_keyword: null\r\n        };\r\n    },\r\n\r\n    watch: {\r\n\r\n    },\r\n    beforeRouteEnter(to, from, next) {\r\n        next((vm) => {\r\n            if (to.name == 'EditStateAlert') {\r\n                vm.alert.alert_id = to.params.alert_id\r\n                vm.getAlert()\r\n            }\r\n        })\r\n    },\r\n\r\n    mounted() {\r\n        this.getSates()\r\n    },\r\n    computed: {\r\n        filterState() {\r\n            return this.state_country.filter((state) => {\r\n                return state.state_name.toLowerCase().includes(this.searchstate.toLowerCase());\r\n            });\r\n        },\r\n\r\n        filterSpecifyAgency() {\r\n            return this.agencySpecific.filter((statefederal) => {\r\n                return statefederal.state_agency_name.toLowerCase().includes(this.searchagencyState.toLowerCase());\r\n            });\r\n        },\r\n    },\r\n    methods: {\r\n\r\n        selectAllCategories() {\r\n            let vm = this\r\n            vm.alert.categories = []\r\n            vm.sorted_categories.map(function (element) {\r\n                vm.alert.categories.push(element.category_id)\r\n            })\r\n            vm.selected_categories = []\r\n            vm.alert.categories.map(function (element) {\r\n                let selected = vm.sorted_categories.filter(function (ele) {\r\n                    return ele.category_id == element\r\n                })\r\n                if (selected.length) {\r\n                    vm.selected_categories.push({\r\n                        category_id: selected[0].category_id,\r\n                        category_name: selected[0].category_name\r\n                    })\r\n                }\r\n            })\r\n        },\r\n\r\n        deselectCategories() {\r\n            this.sorted_categories = this.categories\r\n            this.category_keyword = null\r\n            this.alert.categories = []\r\n            this.selected_categories = []\r\n        },\r\n\r\n        getAlert() {\r\n            let vm = this;\r\n            if (vm.$store.getters.user) {\r\n                vm.alert.user_id = vm.$store.getters.user.user_id\r\n                let uri = \"getAlert\";\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: uri, data: vm.alert })\r\n                    .then(function (response) {\r\n                        vm.alert = response.data.data\r\n                        vm.tags = vm.alert.keywords\r\n                        vm.status = false\r\n                    })\r\n                    .catch(function (error) {\r\n                        vm.errors = error.response.data.errors;\r\n                        vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            }\r\n        },\r\n        removeStateAgency(state_agency) {\r\n            console.log(state_agency)\r\n            let vm = this\r\n            let agency = vm.selected_state_agencies.filter(function (element) {\r\n                return element.state_agency_id != state_agency.state_agency_id\r\n            })\r\n            vm.selected_state_agencies = agency\r\n            vm.alert.state_agencies = []\r\n        },\r\n\r\n        removeTag(index) {\r\n            this.alert.keywords.splice(index, 1);\r\n        },\r\n        removeLastTag(event) {\r\n            if (event.target.value.length === 0) {\r\n                this.removeTag(this.alert.keywords.length - 1);\r\n            }\r\n        },\r\n        updateStateAgencies(state_agency, event) {\r\n            let vm = this\r\n            if (event.target.checked) {\r\n                if (!vm.alert.state_agencies.includes(state_agency.state_agency_id)) {\r\n                    vm.alert.state_agencies.push(state_agency.state_agency_id)\r\n                }\r\n            } else {\r\n                if (vm.alert.state_agencies.includes(state_agency.state_agency_id)) {\r\n                    let state_agencies = vm.alert.state_agencies.filter(function (element) {\r\n                        return element != state_agency.state_agency_id\r\n                    })\r\n                    vm.alert.state_agencies = state_agencies\r\n                }\r\n            }\r\n            vm.selected_state_agencies = []\r\n            vm.alert.state_agencies.map(function (element) {\r\n                let selected = vm.sorted_state_agencies.filter(function (ele) {\r\n                    return ele.state_agency_id == element\r\n                })\r\n                if (selected.length) {\r\n                    vm.selected_state_agencies.push({\r\n                        federeal_agency_id: selected[0].state_agency_id,\r\n                        state_agency_name: selected[0].state_agency_name\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        updateCategories(category, event) {\r\n            if (event.target.checked) {\r\n                if (!this.alert.categories.includes(category.category_id)) {\r\n                    this.alert.categories.push(category.category_id)\r\n                }\r\n            } else {\r\n                if (this.alert.categories.includes(category.category_id)) {\r\n                    let categories = this.alert.categories.filter(function (element) {\r\n                        return element != category.category_id\r\n                    })\r\n                    this.alert.categories = categories\r\n                }\r\n            }\r\n        },\r\n        updateStates(state, event) {\r\n            if (event.target.checked) {\r\n                if (!this.alert.states.includes(state.state_id)) {\r\n                    this.alert.states.push(state.state_id)\r\n                }\r\n            } else {\r\n                if (this.alert.states.includes(state.state_id)) {\r\n                    let states = this.alert.states.filter(function (element) {\r\n                        return element != state.state_id\r\n                    })\r\n                    this.alert.states = states\r\n                }\r\n            }\r\n        },\r\n\r\n        updateStateNotices(notice, event) {\r\n            if (event.target.checked) {\r\n                if (!this.alert.state_notices.includes(notice.state_notice_id)) {\r\n                    this.alert.state_notices.push(notice.state_notice_id)\r\n                }\r\n            } else {\r\n                if (this.alert.state_notices.includes(notice.state_notice_id)) {\r\n                    let state_notices = this.alert.state_notices.filter(function (element) {\r\n                        return element != notice.state_notice_id\r\n                    })\r\n                    this.alert.state_notices = state_notices\r\n                }\r\n            }\r\n        },\r\n\r\n        sortStateAgency() {\r\n            let vm = this\r\n            vm.sorted_state_agencies = vm.state_agencies.filter(function (element) {\r\n                return element.state_agency_name.toLowerCase().includes(vm.state_agency_keyword.toLowerCase());\r\n            })\r\n        },\r\n\r\n        selectAllStateAgencies() {\r\n            let vm = this\r\n            vm.alert.state_agencies = []\r\n            vm.sorted_state_agencies.map(function (element) {\r\n                vm.alert.state_agencies.push(element.state_agency_id)\r\n            })\r\n            vm.selected_state_agencies = []\r\n            vm.alert.state_agencies.map(function (element) {\r\n                let selected = vm.sorted_state_agencies.filter(function (ele) {\r\n                    return ele.state_agency_id == element\r\n                })\r\n                if (selected.length) {\r\n                    vm.selected_state_agencies.push({\r\n                        federeal_agency_id: selected[0].state_agency_id,\r\n                        state_agency_name: selected[0].state_agency_name\r\n                    })\r\n                }\r\n            })\r\n        },\r\n\r\n        deselectFederalAgencies() {\r\n            this.sorted_state_agencies = this.state_agencies\r\n            this.state_agency_keyword = null\r\n            this.alert.state_agencies = []\r\n            this.selected_state_agencies = []\r\n        },\r\n\r\n        selectAllStates() {\r\n            let vm = this\r\n            vm.alert.states = []\r\n            vm.sorted_states.map(function (element) {\r\n                vm.alert.states.push(element.state_id)\r\n            })\r\n        },\r\n        deselectAllStates() {\r\n            this.sorted_states = this.states\r\n            this.state_keyword = null\r\n            this.alert.states = []\r\n        },\r\n        getSates() {\r\n            let vm = this;\r\n            let uri = \"getStates\";\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: uri, data: { country_id: 10 } })\r\n                .then(function (response) {\r\n                    vm.states = response.data\r\n                    vm.sorted_states = vm.states\r\n                    vm.getStateNotices()\r\n                })\r\n                .catch(function (error) {\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n        },\r\n        sortStates() {\r\n            let vm = this\r\n            vm.sorted_states = vm.states.filter(function (element) {\r\n                return element.state_name.toLowerCase().includes(vm.state_keyword.toLowerCase());\r\n            })\r\n        },\r\n\r\n        getStateNotices() {\r\n            let vm = this;\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: \"getStateNotices\" })\r\n                .then(function (response) {\r\n                    vm.state_notices = response.data\r\n                    vm.getStateAgencies()\r\n                })\r\n                .catch(function (error) {\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n        },\r\n\r\n        getStateAgencies() {\r\n            let vm = this;\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: \"getStateAgencies\" })\r\n                .then(function (response) {\r\n                    vm.state_agencies = response.data\r\n                    vm.sorted_state_agencies = vm.state_agencies\r\n                    vm.getCategories()\r\n                })\r\n                .catch(function (error) {\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n        },\r\n        getCategories() {\r\n            let vm = this;\r\n            let uri = \"getCategories\";\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: uri })\r\n                .then(function (response) {\r\n                    vm.categories = response.data\r\n                    vm.sorted_categories = vm.categories\r\n                })\r\n                .catch(function (error) {\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n        },\r\n\r\n        createAlerts() {\r\n            let vm = this\r\n            vm.isLoading = true\r\n            vm.alert.keywords = vm.tags\r\n            if (vm.$store.getters.user) {\r\n                vm.alert.user_id = vm.$store.getters.user.user_id\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: 'addStateAlerts', data: vm.alert })\r\n                    .then(function (response) {\r\n                        vm.isLoading = false\r\n                        vm.$store.dispatch(\"success\", \"Alert is added successfully\");\r\n                        vm.$router.push(\"/bids/alerts\");\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error)\r\n                        vm.isLoading = false\r\n                        if (error.response.data.errors.states) {\r\n                            vm.state_border_red = 'border-color:red'\r\n                        }\r\n                        vm.errors = error.response.data.errors;\r\n                        vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            }\r\n        },\r\n\r\n        updateAlerts() {\r\n            let vm = this\r\n            vm.isLoading = true\r\n            vm.alert.naics = vm.$store.getters.selected_naics\r\n            vm.alert.pscs = vm.$store.getters.selected_pscs\r\n            vm.alert.keywords = vm.tags\r\n            if (vm.$store.getters.user) {\r\n                vm.alert.user_id = vm.$store.getters.user.user_id\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: 'updateStateAlerts', data: vm.alert })\r\n                    .then(function (response) {\r\n                        vm.isLoading = false\r\n                        vm.$store.dispatch(\"success\", \"Alert is updated successfully\");\r\n                        vm.$router.push(\"/bids/alerts\");\r\n                    })\r\n                    .catch(function (error) {\r\n                        vm.isLoading = false\r\n                        console.log(error)\r\n                        if (error.response.data.errors.states) {\r\n                            vm.state_border_red = 'border-color:red'\r\n                        }\r\n                        vm.errors = error.response.data.errors;\r\n                        vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            }\r\n        },\r\n\r\n        getNotice(region_id) {\r\n            let vm = this;\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: \"getNotice?region_id=\" + region_id })\r\n                .then(function (response) {\r\n                    vm.notices = response.data.data;\r\n\r\n                    vm.getasideStatus();\r\n                })\r\n                .catch(function (error) {\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n        },\r\n        getasideStatus() {\r\n            let vm = this;\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: \"getAllSetAsideStatus\" })\r\n                .then(function (response) {\r\n                    vm.sideStatus = response.data.data;\r\n                })\r\n                .catch(function (error) {\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n        },\r\n\r\n        backSaveAlert() {\r\n            this.$store.commit(\"setAlert\", \"\");\r\n            this.$store.commit(\"setSelectedNaics\", []);\r\n            this.$store.commit(\"setSelectedPsces\", []);\r\n            this.$router.push(\"/bids/alerts\");\r\n        },\r\n\r\n        clearAllNaics() {\r\n            this.isLoading1 = true\r\n            setTimeout(() => {\r\n                this.clear_all_naics = !this.clear_all_naics\r\n                this.isLoading1 = false\r\n            }, 1000);\r\n        },\r\n\r\n        clearAllPsc() {\r\n            this.isLoading2 = true\r\n            setTimeout(() => {\r\n                this.clear_all_psc = !this.clear_all_psc\r\n                this.isLoading2 = false\r\n            }, 1000);\r\n        },\r\n\r\n        handleChangeTag(tags) {\r\n            let vm = this;\r\n            vm.tags = tags;\r\n            vm.keywords = vm.tags;\r\n        },\r\n        getNaicsBackend() {\r\n            let vm = this\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: \"getNaics\", data: vm.naics_code })\r\n                .then(function (response) {\r\n                    vm.isLoading1 = false\r\n                    vm.treeData.children = response.data.data\r\n                    vm.$store.dispatch(\"setNaics\", vm.treeData.children)\r\n                    // vm.getServiceCodes();\r\n                })\r\n                .catch(function (error) {\r\n                    vm.isLoading1 = false\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n        },\r\n        // getNaics() {\r\n        // this.getNaicsBackend()\r\n        // let vm = this;\r\n        // vm.fullPage = false;\r\n        // vm.isLoading2 = false;\r\n        // vm.isLoading1 = true;\r\n        // if(vm.naics_code.alert_id){\r\n        //     this.getNaicsBackend()\r\n        // }else{\r\n        //     if(vm.$store.getters.naicses.length){\r\n        //         vm.treeData.children = vm.$store?.getters?.naicses\r\n        //         vm.isLoading1 = false\r\n        //         vm.getServiceCodes();\r\n        //     }else{\r\n        //         this.getNaicsBackend()\r\n        //     }\r\n        // }\r\n        // },\r\n\r\n        getServiceCodes() {\r\n            let vm = this;\r\n            vm.fullPage = false;\r\n            vm.isLoading1 = false;\r\n            vm.isLoading2 = true;\r\n            vm.service_code.alert_id = vm.$store.getters.alert.id\r\n            // if(vm.$store.getters.psces.length){\r\n            //     vm.service_codes.children = vm.$store.getters.psces\r\n            //     vm.isLoading2 = false\r\n            // }\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: \"getPsc\", data: vm.service_code })\r\n                .then(function (response) {\r\n                    vm.isLoading2 = false\r\n                    vm.$store.dispatch(\"setPsces\", response.data.data)\r\n                    vm.service_codes.children = vm.$store.getters.psces\r\n                    if (response.data.data.length) {\r\n                        if (response.data.data[0].psces && response.data.data[0].psces[0] != \"\") {\r\n                            vm.$store.dispatch(\"setSelectedPsces\", response.data.data[0].psces);\r\n                            vm.applyFilterPsc()\r\n                        }\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    //    vm.isLoading = false\r\n                    //      vm.fullPage= false\r\n                    vm.isLoading2 = false\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n            // if(vm.service_code.alert_id){\r\n            //     vm.$store\r\n            //         .dispatch(\"post\", { uri: \"getPsc\", data: vm.service_code })\r\n            //         .then(function (response) {\r\n            //             vm.isLoading2 = false\r\n            //             vm.$store.dispatch(\"setPsces\", response.data.data)\r\n            //             vm.service_codes.children = vm.$store.getters.psces\r\n            //             if(response.data.data.length){\r\n            //                 if(response.data.data[0].psces && response.data.data[0].psces[0] != \"\"){\r\n            //                     vm.$store.dispatch(\"setSelectedPsces\", response.data.data[0].psces);\r\n            //                     vm.applyFilterPsc()\r\n            //                 }\r\n            //             }\r\n            //         })\r\n            //         .catch(function (error) {\r\n            //             //    vm.isLoading = false\r\n            //             //      vm.fullPage= false\r\n            //             vm.isLoading2 = false\r\n            //             vm.errors = error.response.data.errors;\r\n            //             vm.$store.dispatch(\"error\", error.response.data.message);\r\n            //         });\r\n            // }else{\r\n            //     vm.isLoading2 = false\r\n            //     vm.service_codes.children = vm.$store.getters.psces\r\n            // }\r\n        },\r\n        removeTag(index) {\r\n            this.agency_fedral.splice(index, 1);\r\n        },\r\n        submit() {\r\n            let vm = this;\r\n            if (vm.status) {\r\n                vm.createAlerts();\r\n            } else {\r\n                vm.updateAlert();\r\n            }\r\n        },\r\n        filterCategory() {\r\n            if (this.searchagencycategory == \"\") {\r\n                this.categorys = this.allFilterCategroy;\r\n            }\r\n            this.categorys = this.allFilterCategroy.filter((entry) => {\r\n                return entry.category_name.toLowerCase().includes(this.searchagencycategory.toLowerCase());\r\n            });\r\n        },\r\n        callFunction: function () {\r\n            var currentDateWithFormat = new Date().toJSON().slice(0, 10).replace(/-/g, \"/\");\r\n            // console.log(currentDateWithFormat);\r\n            this.savealert.created_on = currentDateWithFormat;\r\n            this.savealert.updated_on = currentDateWithFormat;\r\n        },\r\n\r\n        getcategory() {\r\n            let vm = this;\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: \"getCategory\" })\r\n                .then(function (response) {\r\n                    vm.categorys = response.data.data;\r\n                    vm.categorycount = vm.categorys.length;\r\n                    vm.allFilterCategroy = vm.categorys;\r\n                })\r\n                .catch(function (error) {\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n        },\r\n        getCountry() {\r\n            let vm = this;\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: \"getCountry\" })\r\n                .then(function (response) {\r\n                    vm.countrys = response.data.data;\r\n                })\r\n                .catch(function (error) {\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n        },\r\n        selectCategory() {\r\n            this.selectedcategory = [];\r\n            this.selectAllcategory = false;\r\n            if (!this.selectAllcategory) {\r\n                for (let i in this.categorys) {\r\n                    this.selectedcategory.push(this.categorys[i].category_id);\r\n                }\r\n                this.searchfilter.tdr_category = this.selectedcategory;\r\n            }\r\n        },\r\n\r\n        DeselectCategory() {\r\n            this.selectedcategory = [];\r\n            this.searchfilter.tdr_category = [];\r\n        },\r\n        updateCheckallCategory(category) {\r\n            if (this.categorys.length == this.selectedcategory.length) {\r\n                this.selectedcategory = [];\r\n                this.selectAllcategory = true;\r\n                this.searchfilter.tdr_category = this.selectedcategory;\r\n            } else {\r\n                this.selectAllcategory = false;\r\n\r\n                this.searchfilter.tdr_category = this.selectedcategory;\r\n            }\r\n        },\r\n        selectCountryState() {\r\n            this.stateSelected = [];\r\n            this.stateselectAll = false;\r\n            if (!this.stateselectAll) {\r\n                this.filters.filter((x) => x.table === \"state\").forEach((x) => this.filters.splice(this.filters.indexOf(x), 1));\r\n                for (let i in this.state_country1) {\r\n                    this.stateSelected.push(this.state_country[i].state_id);\r\n                    this.filters.push({\r\n                        table: \"state\",\r\n                        id: this.state_country[i].state_id,\r\n                        name: this.state_country[i].state_name,\r\n                    });\r\n                }\r\n                // alert(this.selected);\r\n                this.searchfilter.tdr_state = this.stateSelected;\r\n                this.getfedralDocument();\r\n            }\r\n        },\r\n        DeselectCountryState() {\r\n            this.stateSelected = [];\r\n            this.searchfilter.tdr_state = [];\r\n            this.filters.filter((x) => x.table === \"state\").forEach((x) => this.filters.splice(this.filters.indexOf(x), 1));\r\n            this.getfedralDocument();\r\n        },\r\n        updateCountryStateCheckall(state) {\r\n            if (this.state_country.length == this.stateSelected.length) {\r\n                this.stateSelected = [];\r\n                this.stateselectAll = true;\r\n                this.searchfilter.tdr_state = this.stateSelected;\r\n                this.getfedralDocument();\r\n                if (this.stateselectAll == true) {\r\n                    this.filters.filter((x) => x.table === \"state\").forEach((x) => this.filters.splice(this.filters.indexOf(x), 1));\r\n                    for (let i in this.state_country) {\r\n                        this.stateSelected.push(this.state_country[i].state_id);\r\n                        // this.statefilter.push(this.state_country[i]);\r\n                        this.filters.push({\r\n                            table: \"state\",\r\n                            id: this.state_country[i].state_id,\r\n                            name: this.state_country[i].state_name,\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                let i = this.filters.findIndex((data) => data.id === state.state_id);\r\n                if (i !== -1) {\r\n                    this.filters.splice(i, 1);\r\n                } else {\r\n                    this.filters.push({\r\n                        table: \"state\",\r\n                        id: state.state_id,\r\n                        name: state.state_name,\r\n                    });\r\n                    // this.statefilter.push(state);\r\n                    this.filters = this.filters.filter((state, index) => this.filters.indexOf(state) === index);\r\n                }\r\n                this.stateselectAll = false;\r\n                // alert(this.selected);\r\n                this.searchfilter.tdr_state = this.stateSelected;\r\n\r\n                // alert(this.selected.length);\r\n            }\r\n        },\r\n        getSateCountry() {\r\n            let vm = this;\r\n            if (vm.listcountry.country_id[0] !== \"\") {\r\n                vm.searchfilter.tdr_country = vm.listcountry.country_id;\r\n            } else {\r\n                vm.searchfilter.tdr_country = [];\r\n            }\r\n\r\n            vm.listcountry.country_id = Object.assign({}, [vm.liststate.country_id]);\r\n            let uri = \"getState\";\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: uri, data: vm.listcountry })\r\n                .then(function (response) {\r\n                    vm.state_country1 = response.data.data;\r\n                    vm.statecount1 = vm.state_country1.length;\r\n                    vm.allFilterState = vm.state_country1;\r\n                })\r\n                .catch(function (error) {\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n        },\r\n\r\n        getFederal() {\r\n            let vm = this;\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: \"getAgencyFederal\" })\r\n                .then(function (response) {\r\n                    vm.federal = response.data.data;\r\n                    //console.log(vm.federal);\r\n                })\r\n                .catch(function (error) {\r\n\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n        },\r\n        getAllAgency() {\r\n            let vm = this;\r\n            vm.isLoading = true;\r\n            let uri = \"getAgency\";\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: uri })\r\n                .then(function (response) {\r\n                    vm.isLoading = false;\r\n                    vm.filterAgency = response.data.data;\r\n                    vm.allFilterAgency = vm.filterAgency;\r\n                    vm.agencycount = vm.filterAgency.length;\r\n                })\r\n                .catch(function (error) {\r\n                    vm.isLoading = false;\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n        },\r\n        getSpecificAgency() {\r\n            let vm = this;\r\n            vm.isLoading = true;\r\n            let uri = \"getAgencyFederal\";\r\n            vm.$store\r\n                .dispatch(\"post\", { uri: uri })\r\n                .then(function (response) {\r\n                    vm.isLoading = false;\r\n                    vm.federal = response.data.data\r\n                    vm.filterAgency = response.data.data;\r\n                    vm.allFilterAgency = vm.filterAgency;\r\n                    vm.agencycount = vm.filterAgency.length;\r\n                    //vm.getSavedsearch();\r\n                })\r\n                .catch(function (error) {\r\n                    vm.isLoading = false;\r\n                    vm.errors = error.response.data.errors;\r\n                    vm.$store.dispatch(\"error\", error.response.data.message);\r\n                });\r\n        },\r\n\r\n\r\n\r\n        filter1Agency() {\r\n            if (this.searchagencyState == \"\") {\r\n                this.filterAgency = this.allFilterAgency;\r\n            }\r\n            this.filterAgency = this.allFilterAgency.filter((entry) => {\r\n                return entry.state_agency_name.toLowerCase().includes(this.searchagencyState.toLowerCase());\r\n            });\r\n        },\r\n        select() {\r\n            this.selected = [];\r\n            if (!this.selectAll) {\r\n                for (let i in this.state_country) {\r\n                    this.selected.push(this.state_country[i].state_id);\r\n                }\r\n                // alert(this.selected);\r\n                this.state_id = this.selected;\r\n            }\r\n        },\r\n        Deselect() {\r\n            this.selected = [];\r\n            this.state_id = [];\r\n        },\r\n        updateCheckall() {\r\n            if (this.state_country.length == this.selected.length) {\r\n                this.selectAll = true;\r\n                // alert(this.selected);\r\n                //alert(this.options);\r\n                this.state_id = this.selected;\r\n\r\n                // alert(this.searchfilter.tdr_state);\r\n            } else {\r\n                this.selectAll = false;\r\n                // alert(this.selected);\r\n                this.state_id = this.selected;\r\n\r\n                // alert(this.selected.length);\r\n            }\r\n        },\r\n\r\n        // federal search subhash\r\n        selectState() {\r\n            this.selectedState = [];\r\n            if (!this.selectAllState) {\r\n                for (let i in this.filterAgency) {\r\n                    this.selectedState.push(this.filterAgency[i].state_agency_name);\r\n                }\r\n\r\n                this.agency_fedral = this.selectedState;\r\n            }\r\n        },\r\n        DeselectState() {\r\n            this.selectedState = [];\r\n            this.agency_fedral = [];\r\n        },\r\n        updateCheckallState() {\r\n            if (this.filterAgency.length == this.selectedState.length) {\r\n                this.selectAllState = true;\r\n                this.agency_fedral = this.selectedState;\r\n            } else {\r\n                this.selectAllState = false;\r\n\r\n                this.agency_fedral = this.selectedState;\r\n            }\r\n        },\r\n\r\n        addTag(event) {\r\n            event.preventDefault();\r\n            let val = event.target.value.trim();\r\n            if (val.length > 0) {\r\n                if (this.tags.length >= 1) {\r\n                    for (let i = 0; i < this.tags.length; i++) {\r\n                        if (this.tags[i] === val) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                this.tags.push(val);\r\n                event.target.value = \"\";\r\n                console.log(this.tags);\r\n            }\r\n        },\r\n        removeTag(index) {\r\n            this.tags.splice(index, 1);\r\n        },\r\n        removeLastTag(event) {\r\n            if (event.target.value.length === 0) {\r\n                this.removeTag(this.tags.length - 1);\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.btn-state {\r\n    color: var(--bs-btn-active-color);\r\n    background-color: var(--bs-btn-active-bg);\r\n    border-color: var(--bs-btn-active-border-color);\r\n}\r\n\r\n.list-group-item-borderless {\r\n    border: 0px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
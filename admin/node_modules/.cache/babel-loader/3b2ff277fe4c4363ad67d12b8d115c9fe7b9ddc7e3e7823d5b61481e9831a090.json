{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Dashboard\",\n  data() {\n    return {\n      min_date: '2024-09-01',\n      max_date: '2024-12-05',\n      selected_date: null,\n      allowed_dates: [],\n      dashboard: {\n        api_key_id: null,\n        api_key: null,\n        is_trial: false,\n        no_of_days: 0\n      },\n      meta: {\n        region: 'state',\n        folder: null,\n        upload_excel_folder: null\n      },\n      upload_excel: {\n        region: 'state',\n        folder: '',\n        delete_files: [],\n        file: '',\n        errors: []\n      },\n      api_key_div: false,\n      subscription_key: false,\n      state_bids_div: true,\n      upload_excel_sheet_div: false,\n      excel_files: [],\n      folders: [],\n      errors: [],\n      registered_users: 0,\n      confirm_user_emails: 0,\n      notconfirm_user_emails: 0,\n      actual_subscritions: 0,\n      expired_subscritions: 0,\n      subs_purchase_inmonth: 0,\n      subs_expire_inmonth: 0,\n      total_trial_actives: 0,\n      total_trial_Inactives: 0\n    };\n  },\n  beforeRouteEnter(to, from, next) {\n    next(vm => {\n      vm.getApiKey();\n      vm.getDashboardCount();\n      // vm.getAdminSetting()\n      if (from.name == \"login\") {\n        vm.$router.go();\n      }\n    });\n  },\n  methods: {\n    updateBids() {\n      if (this.meta.region == 'state') {\n        this.updateStateBids();\n      } else if (this.meta.region == 'private') {\n        this.updatePrivateBids();\n      } else if (this.meta.region == 'international') {\n        this.updateInternationalBids();\n      }\n    },\n    validateDate() {\n      if (this.folders.includes(this.meta.folder)) {\n        return true;\n      } else {\n        this.$store.dispatch(\"info\", \"Folder doesn't exist in S3 for the selected date\");\n        return false;\n      }\n    },\n    updateSubscriptionSetting() {\n      let vm = this;\n      const payload = {\n        is_trial: vm.dashboard.is_trial,\n        no_of_days: vm.dashboard.no_of_days\n      };\n      vm.$store.dispatch(\"post\", {\n        uri: \"addAdminSetting\",\n        data: payload\n      }).then(response => {\n        vm.dashboard.is_trial = response.data.subscription.is_trial;\n        vm.dashboard.no_of_days = response.data.subscription.no_of_days;\n        vm.$store.dispatch(\"success\", response.data.message);\n      }).catch(error => {\n        console.error(\"Error updating subscription settings:\", error);\n      });\n    },\n    getExcelFile(e) {\n      let vm = this;\n      vm.upload_excel.file = e.target.files[0];\n    },\n    getApiKey() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getApiKey\"\n      }).then(response => {\n        vm.dashboard = response.data;\n        vm.getAwsFolders();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    // getAdminSetting() {\n    //     let vm = this;\n    //     vm.$store\n    //         .dispatch(\"post\", { uri: \"getAdminSetting\" })\n    //         .then((response) => {\n    //             vm.dashboard = response.data.subscription\n    //             vm.getAwsFolders()\n    //         })\n    //         .catch(function (error) {\n    //             console.log(error)\n    //         });\n    // },\n\n    showS3BucketFiles() {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.upload_excel.errors = [];\n      vm.$store.dispatch(\"post\", {\n        uri: \"showS3BucketFiles\",\n        data: vm.upload_excel\n      }).then(response => {\n        loader.hide();\n        vm.excel_files = response.data;\n      }).catch(function (error) {\n        // console.log(\"e11\",error)\n        loader.hide();\n        vm.upload_excel.errors = error.response.data.errors;\n      });\n    },\n    deleteS3BucketFiles() {\n      if (confirm('Are you sure you want to delete file from S3 bucket?')) {\n        let vm = this;\n        let loader = vm.$loading.show();\n        vm.upload_excel.errors = [];\n        vm.$store.dispatch(\"post\", {\n          uri: \"deleteS3BucketFiles\",\n          data: vm.upload_excel\n        }).then(() => {\n          loader.hide();\n          vm.upload_excel.delete_files = [];\n          vm.showS3BucketFiles();\n        }).catch(function (error) {\n          loader.hide();\n          vm.upload_excel.errors = error.response.data.errors;\n        });\n      }\n    },\n    uploadS3BucketFile() {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.upload_excel.errors = [];\n      const formData = new FormData();\n      formData.append('folder', vm.upload_excel.folder);\n      formData.append('file', vm.upload_excel.file);\n      vm.$store.dispatch(\"post\", {\n        uri: \"uploadS3BucketFile\",\n        data: formData\n      }).then(() => {\n        loader.hide();\n        vm.$refs.excel_file.value = '';\n        vm.upload_excel.file = '';\n        vm.showS3BucketFiles();\n      }).catch(function (error) {\n        loader.hide();\n        vm.$refs.excel_file.value = '';\n        vm.upload_excel.file = '';\n        vm.upload_excel.errors = error.response.data.errors;\n      });\n    },\n    updateApiKey() {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.$store.dispatch(\"post\", {\n        uri: \"updateApiKey\",\n        data: vm.dashboard\n      }).then(() => {\n        loader.hide();\n        vm.getApiKey();\n      }).catch(function (error) {\n        loader.hide();\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getAwsFolders() {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.$store.dispatch(\"post\", {\n        uri: \"getAwsFolders\"\n      }).then(response => {\n        loader.hide();\n        vm.folders = response.data;\n        if (vm.folders.length) {\n          vm.meta.folder = vm.folders[0];\n          vm.min_date = vm.folders[vm.folders.length - 1];\n          vm.max_date = vm.folders[0];\n          vm.selected_date = vm.folders[0];\n        }\n      }).catch(function (error) {\n        loader.hide();\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getDashboardCount() {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.$store.dispatch(\"post\", {\n        uri: \"dashboardCounts\"\n      }).then(response => {\n        loader.hide();\n        vm.registered_users = response.data?.registered_users;\n        vm.confirm_user_emails = response.data?.confirm_user_emails;\n        vm.notconfirm_user_emails = response.data?.notconfirm_user_emails;\n        vm.actual_subscritions = response.data?.actual_subscritions;\n        vm.expired_subscritions = response.data?.expired_subscritions;\n        vm.subs_purchase_inmonth = response.data?.subs_purchase_inmonth;\n        vm.subs_expire_inmonth = response.data?.subs_expire_inmonth;\n        vm.total_trial_actives = response.data?.total_trial_actives;\n        vm.total_trial_Inactives = response.data?.total_trial_Inactives;\n      }).catch(function (error) {\n        loader.hide();\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    updateStateBids() {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.errors = [];\n      vm.$store.dispatch(\"post\", {\n        uri: \"updateStateBids\",\n        data: vm.meta\n      }).then(response => {\n        loader.hide();\n        vm.$store.dispatch(\"success\", response.data.message);\n        vm.$router.push('/state_tenders');\n      }).catch(function (error) {\n        console.log(\"err--\", error);\n        loader.hide();\n        vm.errors = error?.response?.data?.error;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    updatePrivateBids() {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.errors = [];\n      vm.$store.dispatch(\"post\", {\n        uri: \"updatePrivateBids\",\n        data: vm.meta\n      }).then(response => {\n        loader.hide();\n        vm.$store.dispatch(\"success\", response.data.message);\n        vm.$router.push('/state_tenders');\n      }).catch(function (error) {\n        loader.hide();\n        console.log(error);\n        // vm.errors = error?.response.data?.error\n        // vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    updateInternationalBids() {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.errors = [];\n      vm.$store.dispatch(\"post\", {\n        uri: \"updateInternationalBids\",\n        data: vm.meta\n      }).then(response => {\n        loader.hide();\n        vm.$store.dispatch(\"success\", response.data.message);\n        vm.$router.push('/state_tenders');\n      }).catch(function (error) {\n        console.log(error);\n        // loader.hide();\n        // vm.errors = error?.response.data?.error\n        // vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","min_date","max_date","selected_date","allowed_dates","dashboard","api_key_id","api_key","is_trial","no_of_days","meta","region","folder","upload_excel_folder","upload_excel","delete_files","file","errors","api_key_div","subscription_key","state_bids_div","upload_excel_sheet_div","excel_files","folders","registered_users","confirm_user_emails","notconfirm_user_emails","actual_subscritions","expired_subscritions","subs_purchase_inmonth","subs_expire_inmonth","total_trial_actives","total_trial_Inactives","beforeRouteEnter","to","from","next","vm","getApiKey","getDashboardCount","$router","go","methods","updateBids","updateStateBids","updatePrivateBids","updateInternationalBids","validateDate","includes","$store","dispatch","updateSubscriptionSetting","payload","uri","then","response","subscription","message","catch","error","console","getExcelFile","e","target","files","getAwsFolders","log","showS3BucketFiles","loader","$loading","show","hide","deleteS3BucketFiles","confirm","uploadS3BucketFile","formData","FormData","append","$refs","excel_file","value","updateApiKey","length","push"],"sources":["D:\\Aeriesys vue projects\\bidsportal.com\\admin\\src\\views\\Dashboard.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid pb-3\">\r\n        <div class=\"d-flex justify-content-between\">\r\n            <h2 class=\"main-title mb-3\">Dashboard</h2>\r\n        </div>\r\n        <div class=\"row g-2 mb-3\">\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"card card-one\">\r\n                    <!-- <div class=\"card-body\">\r\n                        <label class=\"card-title fs-sm fw-medium mb-1\">Total registered users</label>\r\n                        <h3 class=\"card-value mb-1\"><i class=\"ri-user-line\"></i> {{ registered_users }}</h3>\r\n                    </div> -->\r\n                    <div class=\"card-body p-3\">\r\n                        <div class=\"d-flex d-sm-block d-xl-flex align-items-center\">\r\n                            <div class=\"helpdesk-icon bg-primary text-white\"><i class=\"ri-user-line\"></i></div>\r\n                            <div class=\"ms-3 ms-sm-0 ms-xl-3 mt-sm-3 mt-xl-0\">\r\n                            <h2 class=\"card-value d-flex align-items-baseline mb-0\">{{ registered_users }}</h2>\r\n                            <label class=\"card-label fs-sm fw-medium mb-1\">Total registered users</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"card card-one\">\r\n                    <!-- <div class=\"card-body\">\r\n                        <label class=\"card-title fs-sm fw-medium mb-1\">Total users confirmed email address</label>\r\n                        <h3 class=\"card-value mb-1\"><i class=\"ri-mail-check-line\"></i> {{ confirm_user_emails }}</h3>\r\n                    </div> -->\r\n                    <div class=\"card-body p-3\">\r\n                        <div class=\"d-flex d-sm-block d-xl-flex align-items-center\">\r\n                            <div class=\"helpdesk-icon bg-ui-02 text-white\"><i class=\"ri-mail-check-line\"></i></div>\r\n                            <div class=\"ms-3 ms-sm-0 ms-xl-3 mt-sm-3 mt-xl-0\">\r\n                            <h2 class=\"card-value d-flex align-items-baseline mb-0\">{{ confirm_user_emails }}</h2>\r\n                            <label class=\"card-label fs-sm fw-medium mb-1\">Total users confirmed email address</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"card card-one\">\r\n                    <!-- <div class=\"card-body\">\r\n                        <label class=\"card-title fs-sm fw-medium mb-1\">Total users not confirmed email address</label>\r\n                        <h3 class=\"card-value mb-1\"><i class=\"ri-mail-close-line\"></i>{{ notconfirm_user_emails }}</h3>\r\n                    </div> -->\r\n\r\n                    <div class=\"card-body p-3\">\r\n                        <div class=\"d-flex d-sm-block d-xl-flex align-items-center\">\r\n                            <div class=\"helpdesk-icon bg-ui-03  text-white\"><i class=\"ri-mail-close-line\"></i></div>\r\n                            <div class=\"ms-3 ms-sm-0 ms-xl-3 mt-sm-3 mt-xl-0\">\r\n                            <h2 class=\"card-value d-flex align-items-baseline mb-0\">{{ notconfirm_user_emails }}</h2>\r\n                            <label class=\"card-label fs-sm fw-medium mb-1\">Total users not confirmed email address</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"card card-one\">\r\n                    <!-- <div class=\"card-body\">\r\n                        <label class=\"card-title fs-sm fw-medium mb-1\">Total active actual subscriptions</label>\r\n                        <h3 class=\"card-value mb-1\"><i class=\"ri-user-follow-line\"></i> {{ actual_subscritions }}</h3>\r\n                    </div> -->\r\n                    <div class=\"card-body p-3\">\r\n                        <div class=\"d-flex d-sm-block d-xl-flex align-items-center\">\r\n                            <div class=\"helpdesk-icon bg-warning text-white\"><i class=\"ri-user-follow-line\"></i></div>\r\n                            <div class=\"ms-3 ms-sm-0 ms-xl-3 mt-sm-3 mt-xl-0\">\r\n                            <h2 class=\"card-value d-flex align-items-baseline mb-0\">{{ actual_subscritions }}</h2>\r\n                            <label class=\"card-label fs-sm fw-medium mb-1\">Total active actual subscriptions</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"card card-one\">\r\n                    <!-- <div class=\"card-body\">\r\n                        <label class=\"card-title fs-sm fw-medium mb-1\">Total expired actual subscriptions</label>\r\n                        <h3 class=\"card-value mb-1\"><i class=\"ri-user-unfollow-line\"></i> {{ expired_subscritions }}</h3>\r\n                    </div> -->\r\n                     <div class=\"card-body p-3\">\r\n                        <div class=\"d-flex d-sm-block d-xl-flex align-items-center\">\r\n                            <div class=\"helpdesk-icon bg-warning text-white\"><i class=\"ri-user-unfollow-line\"></i></div>\r\n                            <div class=\"ms-3 ms-sm-0 ms-xl-3 mt-sm-3 mt-xl-0\">\r\n                            <h2 class=\"card-value d-flex align-items-baseline mb-0\">{{ expired_subscritions }}</h2>\r\n                            <label class=\"card-label fs-sm fw-medium mb-1\">Total expired actual subscriptions</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"card card-one\">\r\n                    <div class=\"card-body\">\r\n                        <label class=\"card-title fs-sm fw-medium mb-1\">Total active trail subscriptions</label>\r\n                        <h3 class=\"card-value mb-1\"><i class=\"ri-check-line\"></i>{{ total_trial_actives }}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"card card-one\">\r\n                    <div class=\"card-body\">\r\n                        <label class=\"card-title fs-sm fw-medium mb-1\">Total expired trail subscriptions</label>\r\n                        <h3 class=\"card-value mb-1\"><i class=\"ri-close-line\"></i> {{ total_trial_Inactives }}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"card card-one\">\r\n                    <div class=\"card-body\">\r\n                        <label class=\"card-title fs-sm fw-medium mb-1\">Total Subscriptions purchase in a month</label>\r\n                        <h3 class=\"card-value mb-1\"><i class=\"ri-user-star-fill\"></i> {{ subs_purchase_inmonth }}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"card card-one\">\r\n                    <div class=\"card-body\">\r\n                        <label class=\"card-title fs-sm fw-medium mb-1\">Total Subscriptions expiring in a month</label>\r\n                        <h3 class=\"card-value mb-1\"><i class=\"ri-user-unfollow-fill\"></i> {{ subs_expire_inmonth }}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row g-3\">\r\n            <div class=\"col-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <span style=\"font-size:1.2rem; font-weight: 500; font-family: 'Inter', 'sans-serif'; color: #212830;\"><i class=\"ri-key-2-line\" style=\"color:blue;font-size: 14pt;font-weight: bold\"></i> Update API Key</span>\r\n                        <div style=\"float:right\">\r\n                            <a href=\"javascript:void(0)\" @click=\"api_key_div=true\" v-if=\"!api_key_div\">Show</a>\r\n                            <a href=\"javascript:void(0)\" @click=\"api_key_div=false\" v-if=\"api_key_div\">Hide</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-body\" v-if=\"api_key_div\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label style=\"font-weight: bold;\">Api key</label>\r\n                                    <input type=\"text\" class=\"form-control form-control-sm\" :class=\"{'is-invalid': errors.api_key}\" v-model=\"dashboard.api_key\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <br/>\r\n                                <button class=\"btn btn-primary btn-sm\" style=\"margin-left:10px\" @click=\"updateApiKey()\">Update</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <span style=\"font-size:1.2rem; font-weight: 500; font-family: 'Inter', 'sans-serif'; color: #212830;\"><i class=\"ri-restart-line\" style=\"color:blue;font-size: 14pt;font-weight: bold\"></i> Update Bids</span>\r\n                        <div style=\"float:right\">\r\n                            <a href=\"javascript:void(0)\" @click=\"state_bids_div=true\" v-if=\"!state_bids_div\">Show</a>\r\n                            <a href=\"javascript:void(0)\" @click=\"state_bids_div=false\" v-if=\"state_bids_div\">Hide</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-body\" v-if=\"state_bids_div\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label style=\"font-weight: bold;\">Region</label>\r\n                                    <select v-model=\"meta.region\" class=\"form-control\">\r\n                                        <option value=\"state\">State</option>\r\n                                        <option value=\"private\">Private</option>\r\n                                        <option value=\"international\">International</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label style=\"font-weight: bold;\">S3 Bucket Folders</label>\r\n                                    <input type=\"date\" id=\"calendar\" v-model=\"meta.folder\" class=\"form-control\" :min=\"min_date\" :max=\"max_date\" @change=\"validateDate()\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <br/>\r\n                                <button class=\"btn btn-primary btn-sm\" @click=\"updateBids()\">Update</button>\r\n                            </div>\r\n                            <div class=\"col-md-12\" v-if=\"errors.length\" style=\"margin-top: 10px;\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-bordered table-striped table-sm\">\r\n                                        <thead>\r\n                                            <tr><th colspan=\"4\"><span style=\"font-size:1.2rem; font-weight: 500; font-family: 'Inter', 'sans-serif'; color: red;margin-left: 1rem;\">Errros</span></th></tr>\r\n                                            <tr>\r\n                                                <th class=\"text-center\">Row</th>\r\n                                                <th class=\"text-center\">Column</th>\r\n                                                <th class=\"text-center\">Error</th>\r\n                                                <th class=\"text-center\">Cell Value</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr v-for=\"error, key in errors\" :key=\"key\">\r\n                                                <td class=\"text-center\">{{ error.row }}</td>\r\n                                                <td class=\"text-center\">{{ parseInt(error.attribute)+1 }}</td>\r\n                                                <td class=\"text-center\"><span v-for=\"error_attribute, attr_key in error.errors\" :key=\"attr_key\">{{ error_attribute }}</span></td>\r\n                                                <td class=\"text-center\">{{ error.values[error.attribute] }}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <span style=\"font-size:1.2rem; font-weight: 500; font-family: 'Inter', 'sans-serif'; color: #212830;\"><i class=\"ri-file-line\" style=\"color:blue;font-size: 14pt;font-weight: bold\"></i> Upload Excel Sheet</span>\r\n                        <div style=\"float:right\">\r\n                            <a href=\"javascript:void(0)\" @click=\"upload_excel_sheet_div=true\" v-if=\"!upload_excel_sheet_div\">Show</a>\r\n                            <a href=\"javascript:void(0)\" @click=\"upload_excel_sheet_div=false\" v-if=\"upload_excel_sheet_div\">Hide</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-body\" v-if=\"upload_excel_sheet_div\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label style=\"font-weight: bold;\">Region</label>\r\n                                    <select v-model=\"upload_excel.region\" class=\"form-control\">\r\n                                        <option value=\"state\">State</option>\r\n                                        <option value=\"private\">Private</option>\r\n                                        <option value=\"international\">International</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label style=\"font-weight: bold;\">S3 Bucket Folders</label>\r\n                                    <input type=\"date\" id=\"calendar\" v-model=\"upload_excel.folder\" class=\"form-control\" :min=\"min_date\" :max=\"max_date\" @change=\"validateDate()\" />\r\n                                    <span v-if=\"upload_excel?.errors.folder\" class=\"invalid-feedback\">{{ upload_excel?.errors.folder[0] }}</span>\r\n                                    <span v-if=\"errors.folder\" class=\"invalid-feedback\">{{ errors.folder[0] }}eee</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <br/>\r\n                                <button class=\"btn btn-primary btn-sm\" @click=\"showS3BucketFiles()\">Show Files</button>\r\n                                <button class=\"btn btn-danger btn-sm\" @click=\"deleteS3BucketFiles()\" v-if=\"upload_excel.delete_files?.length\" style=\"margin-left: 10px;\">Delete</button>\r\n                            </div>\r\n                            <div class=\"col-md-3 mt-2\">\r\n                                <div class=\"form-group\">\r\n                                    <label style=\"font-weight: bold;\">Upload Excel File</label>\r\n                                    <input type=\"file\" class=\"form-control form-control-sm\" :class=\"{'is-invalid': upload_excel.errors.file}\" @change=\"getExcelFile($event)\" ref=\"excel_file\">\r\n                                    <span v-if=\"upload_excel.errors.file\" class=\"invalid-feedback\">{{ upload_excel.errors.file[0] }}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-1 mt-2\">\r\n                                <div class=\"form-group\">\r\n                                    <br/>\r\n                                    <button class=\"btn btn-primary btn-sm\" @click=\"uploadS3BucketFile()\">Upload</button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 mt-3\" v-if=\"upload_excel.errors.duplicate\">\r\n                                <span style=\"color:red\">{{ upload_excel.errors.duplicate }}</span>\r\n                            </div>\r\n                            <div class=\"col-md-12 mt-3\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-bordered table-striped table-sm\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th class=\"text-center\" width=\"20%\">Sl.No.</th>\r\n                                                <th width=\"60%\">File Name</th>\r\n                                                <th class=\"text-center\" width=\"20%\">Action</th>\r\n                                                <th class=\"text-center\" width=\"20%\">Download</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td colspan=\"3\" v-if=\"excel_files.length<=0\" class=\"text-center\">No records found</td>\r\n                                            </tr>\r\n                                            <tr v-for=\"file, file_key in excel_files\" :key=\"file_key\">\r\n                                                <td class=\"text-center\">{{ parseInt(file_key)+1 }}</td>\r\n                                                <td>{{ file.filename }}</td>\r\n                                                <td class=\"text-center\">\r\n                                                    <input type=\"checkbox\" v-model=\"upload_excel.delete_files\" :value=\"file\">\r\n                                                </td>\r\n                                                 <td class=\"text-center\">\r\n                                                    <a v-if=\"file.download_url\" :href=\"file.download_url\"><i class=\"ri-download-line\"></i></a>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: \"Dashboard\",\r\n        data() {\r\n            return {\r\n                min_date: '2024-09-01',\r\n                max_date : '2024-12-05',\r\n                selected_date: null,\r\n                allowed_dates:[],\r\n                dashboard:{\r\n                    api_key_id:null,\r\n                    api_key:null,\r\n                    is_trial:false,\r\n                    no_of_days:0\r\n                },\r\n                meta:{\r\n                    region: 'state',\r\n                    folder:null,\r\n                    upload_excel_folder:null\r\n                },\r\n                upload_excel:{\r\n                    region: 'state',\r\n                    folder:'',\r\n                    delete_files:[],\r\n                    file:'',\r\n                    errors:[]\r\n                },\r\n                api_key_div:false,\r\n                subscription_key:false,\r\n                state_bids_div:true,\r\n                upload_excel_sheet_div:false,\r\n                excel_files:[],\r\n                folders:[],\r\n                errors:[],\r\n\r\n                registered_users : 0,\r\n                confirm_user_emails:0,\r\n                notconfirm_user_emails:0,\r\n                actual_subscritions:0,\r\n                expired_subscritions:0,\r\n                subs_purchase_inmonth:0,\r\n                subs_expire_inmonth:0,\r\n                total_trial_actives:0,\r\n                total_trial_Inactives:0\r\n            };\r\n        },\r\n        beforeRouteEnter(to, from, next) {\r\n            next((vm) => {\r\n                vm.getApiKey()\r\n                vm.getDashboardCount()\r\n                // vm.getAdminSetting()\r\n                if (from.name == \"login\") {\r\n                    vm.$router.go();\r\n                }\r\n            });\r\n        },\r\n        methods: {\r\n            updateBids(){\r\n                if(this.meta.region == 'state'){\r\n                    this.updateStateBids()\r\n                }else if(this.meta.region == 'private'){\r\n                    this.updatePrivateBids()\r\n                }else if(this.meta.region == 'international'){\r\n                    this.updateInternationalBids()\r\n                }\r\n            },\r\n            validateDate(){\r\n                if(this.folders.includes(this.meta.folder)){\r\n                    return true\r\n                }else{\r\n                    this.$store.dispatch(\"info\", \"Folder doesn't exist in S3 for the selected date\")\r\n                    return false\r\n                }\r\n            },\r\n            updateSubscriptionSetting() {\r\n                let vm = this;\r\n                const payload = {\r\n                    is_trial: vm.dashboard.is_trial,\r\n                    no_of_days: vm.dashboard.no_of_days,\r\n                };\r\n\r\n                vm.$store.dispatch(\"post\", { uri: \"addAdminSetting\", data: payload })\r\n                    .then((response) => {\r\n                        vm.dashboard.is_trial = response.data.subscription.is_trial;\r\n                        vm.dashboard.no_of_days = response.data.subscription.no_of_days;\r\n                        vm.$store.dispatch(\"success\", response.data.message);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error updating subscription settings:\", error);\r\n                    });\r\n            },\r\n            getExcelFile(e){\r\n                let vm = this\r\n                vm.upload_excel.file= e.target.files[0]\r\n            },\r\n            getApiKey() {\r\n                let vm = this;\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"getApiKey\" })\r\n                    .then((response) => {\r\n                        vm.dashboard = response.data\r\n                        vm.getAwsFolders()\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error)\r\n                    });\r\n            },\r\n\r\n            // getAdminSetting() {\r\n            //     let vm = this;\r\n            //     vm.$store\r\n            //         .dispatch(\"post\", { uri: \"getAdminSetting\" })\r\n            //         .then((response) => {\r\n            //             vm.dashboard = response.data.subscription\r\n            //             vm.getAwsFolders()\r\n            //         })\r\n            //         .catch(function (error) {\r\n            //             console.log(error)\r\n            //         });\r\n            // },\r\n\r\n            showS3BucketFiles() {\r\n                let vm = this;\r\n                let loader = vm.$loading.show();\r\n                vm.upload_excel.errors = []\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"showS3BucketFiles\", data: vm.upload_excel })\r\n                    .then((response) => {\r\n                        loader.hide()\r\n                        vm.excel_files = response.data\r\n                    })\r\n                    .catch(function (error) {\r\n                        // console.log(\"e11\",error)\r\n                        loader.hide()\r\n                        vm.upload_excel.errors = error.response.data.errors\r\n                    });\r\n            },\r\n\r\n            deleteS3BucketFiles(){\r\n                if(confirm('Are you sure you want to delete file from S3 bucket?')){\r\n                    let vm = this;\r\n                    let loader = vm.$loading.show();\r\n                    vm.upload_excel.errors = []\r\n                    vm.$store\r\n                        .dispatch(\"post\", { uri: \"deleteS3BucketFiles\", data: vm.upload_excel })\r\n                        .then(() => {\r\n                            loader.hide()\r\n                            vm.upload_excel.delete_files=[]\r\n                            vm.showS3BucketFiles()\r\n                        })\r\n                        .catch(function (error) {\r\n                            loader.hide()\r\n                            vm.upload_excel.errors = error.response.data.errors\r\n                        });\r\n                }\r\n            },\r\n\r\n            uploadS3BucketFile(){\r\n                let vm = this;\r\n                let loader = vm.$loading.show();\r\n                vm.upload_excel.errors = []\r\n                const formData = new FormData()\r\n                formData.append('folder', vm.upload_excel.folder)\r\n                formData.append('file', vm.upload_excel.file)\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"uploadS3BucketFile\", data: formData })\r\n                    .then(() => {\r\n                        loader.hide()\r\n                        vm.$refs.excel_file.value= ''\r\n                        vm.upload_excel.file = ''\r\n                        vm.showS3BucketFiles()\r\n                    })\r\n                    .catch(function (error) {\r\n                        loader.hide()\r\n                        vm.$refs.excel_file.value= ''\r\n                        vm.upload_excel.file = ''\r\n                        vm.upload_excel.errors = error.response.data.errors\r\n                    });\r\n            },\r\n\r\n            updateApiKey() {\r\n                let vm = this;\r\n                let loader = vm.$loading.show();\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"updateApiKey\", data:vm.dashboard })\r\n                    .then(() => {\r\n                        loader.hide();\r\n                        vm.getApiKey()\r\n                    })\r\n                    .catch(function (error) {\r\n                        loader.hide();\r\n                        vm.errors = error.response.data.errors;\r\n                        vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            },\r\n\r\n            getAwsFolders() {\r\n                let vm = this;\r\n                let loader = vm.$loading.show();\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"getAwsFolders\" })\r\n                    .then((response) => {\r\n                        loader.hide();\r\n                        vm.folders = response.data\r\n                        if(vm.folders.length){\r\n                            vm.meta.folder = vm.folders[0]\r\n                            vm.min_date = vm.folders[vm.folders.length-1]\r\n                            vm.max_date = vm.folders[0]\r\n                            vm.selected_date = vm.folders[0]\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        loader.hide();\r\n                        vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            },\r\n\r\n            getDashboardCount() {\r\n                let vm = this;\r\n                let loader = vm.$loading.show();\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"dashboardCounts\" })\r\n                    .then((response) => {\r\n                        loader.hide();\r\n                        vm.registered_users = response.data?.registered_users\r\n                        vm.confirm_user_emails = response.data?.confirm_user_emails\r\n                        vm.notconfirm_user_emails = response.data?.notconfirm_user_emails\r\n                        vm.actual_subscritions = response.data?.actual_subscritions\r\n                        vm.expired_subscritions = response.data?.expired_subscritions\r\n                        vm.subs_purchase_inmonth = response.data?.subs_purchase_inmonth\r\n                        vm.subs_expire_inmonth = response.data?.subs_expire_inmonth\r\n                        vm.total_trial_actives = response.data?.total_trial_actives\r\n                        vm.total_trial_Inactives = response.data?.total_trial_Inactives\r\n                    })\r\n                    .catch(function (error) {\r\n                        loader.hide();\r\n                        vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            },\r\n\r\n            updateStateBids() {\r\n                let vm = this;\r\n                let loader = vm.$loading.show();\r\n                vm.errors = []\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"updateStateBids\", data:vm.meta })\r\n                    .then((response) => {\r\n                        loader.hide();\r\n                        vm.$store.dispatch(\"success\", response.data.message);\r\n                        vm.$router.push('/state_tenders')\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(\"err--\",error)\r\n                        loader.hide();\r\n                        vm.errors = error?.response?.data?.error\r\n                        vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            },\r\n\r\n            updatePrivateBids() {\r\n                let vm = this;\r\n                let loader = vm.$loading.show();\r\n                vm.errors = []\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"updatePrivateBids\", data:vm.meta })\r\n                    .then((response) => {\r\n                        loader.hide();\r\n                        vm.$store.dispatch(\"success\", response.data.message);\r\n                        vm.$router.push('/state_tenders')\r\n                    })\r\n                    .catch(function (error) {\r\n                        loader.hide();\r\n                        console.log(error)\r\n                        // vm.errors = error?.response.data?.error\r\n                        // vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            },\r\n\r\n            updateInternationalBids() {\r\n                let vm = this;\r\n                let loader = vm.$loading.show();\r\n                vm.errors = []\r\n                vm.$store\r\n                    .dispatch(\"post\", { uri: \"updateInternationalBids\", data:vm.meta })\r\n                    .then((response) => {\r\n                        loader.hide();\r\n                        vm.$store.dispatch(\"success\", response.data.message);\r\n                        vm.$router.push('/state_tenders')\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error)\r\n                        // loader.hide();\r\n                        // vm.errors = error?.response.data?.error\r\n                        // vm.$store.dispatch(\"error\", error.response.data.message);\r\n                    });\r\n            },\r\n\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
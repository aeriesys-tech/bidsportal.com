{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport TreeItem from \"@/components/TreeItem.vue\";\nimport PscTree from \"@/components/PscTree.vue\";\nimport Loading from \"vue-loading-overlay\";\nimport Skeleton2 from \"@/components/Skeleton2.vue\";\nexport default {\n  components: {\n    TreeItem,\n    Skeleton2,\n    Loading,\n    PscTree\n  },\n  data() {\n    return {\n      state_border_red: \"\",\n      states: [],\n      sorted_states: [],\n      state_keyword: \"\",\n      federal_notices: [],\n      federal_agencies: [],\n      sorted_federal_agencies: [],\n      selected_federal_agencies: [],\n      set_asides: [],\n      naics: [],\n      users: [],\n      alert: {\n        user_id: \"\",\n        federal_alert_id: \"\",\n        titel: \"\",\n        frequency: \"\",\n        region: \"Federal\",\n        keywords: [],\n        states: [],\n        federal_notices: [],\n        federal_agencies: [],\n        set_asides: [],\n        naics: [],\n        pscs: []\n      },\n      tags: [],\n      treeData: {\n        name: \"\",\n        naics_code: \"Select All\",\n        children: []\n      },\n      service_codes: {\n        name: \"\",\n        psc_code: \"Select All\",\n        children: []\n      },\n      psc_code: {\n        psc_codes: []\n      },\n      tag: \"\",\n      // tags:[],\n      selectedNaicses: [],\n      childItems: [],\n      filterAgency: [],\n      state_country1: [],\n      allFilterAgency: [],\n      SpecificAgency: [],\n      agencycheck: \"\",\n      agencyAll: [],\n      agencySpecific: [],\n      searchstate: \"\",\n      errors: [],\n      tdr_agency: [],\n      countryid: [],\n      selected: [],\n      statussearch: true,\n      selectAll: false,\n      searchagencyState: \"\",\n      stateSelected: [],\n      selectAllState: false,\n      selectedcategory: [],\n      selectAllcategory: false,\n      selectedState: [],\n      agencyState: [],\n      categorys: [],\n      status: true,\n      searchagencycategory: \"\",\n      interstedUser: {\n        id: \"\",\n        user_id: \"\"\n      },\n      liststate: {\n        country_id: [10]\n      },\n      listcountry: {\n        country_id: []\n      },\n      searchfilter: {\n        tdr_country: []\n      },\n      keywords: [],\n      countrys: [],\n      state_id: [],\n      naics_id: [],\n      psc: [],\n      set_aside_status: [],\n      agency_fedral: [],\n      notice_type: [],\n      state_country: [],\n      federal: [],\n      sideStatus: [],\n      notices: [],\n      state: [],\n      user_id: \"\",\n      savedata: [],\n      frequency: \"\",\n      agencycount: 0,\n      categorycount: 0,\n      allFilterCategroy: [],\n      savealert: {\n        id: \"\",\n        user_id: \"\",\n        on_off: 1,\n        alert_label: \"\",\n        region_id: \"\",\n        state_id: \"\",\n        frequency: \"\",\n        keywords: \"\",\n        category_id: \"\",\n        naics_id: \"\",\n        notice_type: \"\",\n        psc: \"\",\n        set_aside_status: \"\",\n        agency_fedral: \"\",\n        created_on: \"\",\n        updated_on: \"\"\n      },\n      isLoading: false,\n      isLoading1: false,\n      isLoading2: false,\n      fullPage: true,\n      fullPage1: false,\n      fullPage2: false,\n      naics_code: {\n        search: \"\",\n        alert_id: \"\"\n      },\n      service_code: {\n        search: \"\",\n        alert_id: \"\"\n      },\n      psc_code: {\n        psc_codes: []\n      },\n      clear_all_naics: false,\n      clear_all_psc: false,\n      federal_agency_keyword: null,\n      loading: true,\n      // Initial loading state\n      loading_psc: true\n    };\n  },\n  beforeRouteEnter(to, from, next) {\n    next(vm => {\n      if (to.name == \"FederalAlert.Create\") {\n        // vm.$refs.name.focus();\n      } else {\n        let loader = vm.$loading.show();\n        let uri = {\n          uri: \"getAlert\",\n          data: {\n            alert_id: to.params.alert_id\n          }\n        };\n        vm.$store.dispatch(\"post\", uri).then(function (response) {\n          loader.hide();\n          console.log(\"getALert---\", response.data.data);\n          vm.alert = response.data.data;\n          vm.tags = vm.alert.keywords;\n          vm.status = false;\n\n          // vm.$store.dispatch(\"setSelectedNaics\", vm.alert.naics);\n          // Load the federal agencies and filter selected ones\n          // vm.getFederalAgencies();\n        }).catch(function (error) {\n          loader.hide();\n          vm.errors = error.response.data.errors;\n          vm.$store.dispatch(\"error\", error.response.data.message);\n        });\n      }\n    });\n  },\n  mounted() {\n    this.getUsers();\n  },\n  computed: {\n    filterState() {\n      return this.state_country.filter(state => {\n        return state.state_name.toLowerCase().includes(this.searchstate.toLowerCase());\n      });\n    },\n    filterSpecifyAgency() {\n      return this.agencySpecific.filter(statefederal => {\n        return statefederal.agency_name.toLowerCase().includes(this.searchagencyState.toLowerCase());\n      });\n    }\n  },\n  methods: {\n    removeFederalAgency(federal_agency) {\n      console.log(federal_agency);\n      let vm = this;\n      // Remove the specific agency from `selected_international_agencies`\n      vm.selected_federal_agencies = vm.selected_federal_agencies.filter(function (element) {\n        console.log(\"element--\", element);\n        return element.federal_agency_id !== federal_agency.federal_agency_id;\n      });\n\n      // Remove the specific agency from `alert.federal_agencies`\n      vm.alert.federal_agencies = vm.alert.federal_agencies.filter(function (agencyId) {\n        return agencyId !== federal_agency.federal_agency_id;\n      });\n    },\n    removeTag(index) {\n      this.alert.keywords.splice(index, 1);\n    },\n    removeLastTag(event) {\n      if (event.target.value.length === 0) {\n        this.removeTag(this.alert.keywords.length - 1);\n      }\n    },\n    updateFederalAgencies(federal_agency, event) {\n      let vm = this;\n      if (event.target.checked) {\n        if (!vm.alert.federal_agencies.includes(federal_agency.federal_agency_id)) {\n          vm.alert.federal_agencies.push(federal_agency.federal_agency_id);\n        }\n      } else {\n        if (vm.alert.federal_agencies.includes(federal_agency.federal_agency_id)) {\n          let federal_agencies = vm.alert.federal_agencies.filter(function (element) {\n            return element != federal_agency.federal_agency_id;\n          });\n          vm.alert.federal_agencies = federal_agencies;\n        }\n      }\n      vm.selected_federal_agencies = [];\n      vm.alert.federal_agencies.map(function (element) {\n        let selected = vm.sorted_federal_agencies.filter(function (ele) {\n          return ele.federal_agency_id == element;\n        });\n        if (selected.length) {\n          vm.selected_federal_agencies.push({\n            federeal_agency_id: selected[0].federal_agency_id,\n            agency_name: selected[0].agency_name\n          });\n        }\n      });\n    },\n    updateSetAsides(set_aside, event) {\n      if (event.target.checked) {\n        if (!this.alert.set_asides.includes(set_aside.set_aside_id)) {\n          this.alert.set_asides.push(set_aside.set_aside_id);\n        }\n      } else {\n        if (this.alert.set_asides.includes(set_aside.set_aside_id)) {\n          let set_asides = this.alert.set_asides.filter(function (element) {\n            return element != set_aside.set_aside_id;\n          });\n          this.alert.set_asides = set_asides;\n        }\n      }\n    },\n    updateStates(state, event) {\n      if (event.target.checked) {\n        if (!this.alert.states.includes(state.state_id)) {\n          this.alert.states.push(state.state_id);\n        }\n      } else {\n        if (this.alert.states.includes(state.state_id)) {\n          let states = this.alert.states.filter(function (element) {\n            return element != state.state_id;\n          });\n          this.alert.states = states;\n        }\n      }\n    },\n    updateFederalNotices(notice, event) {\n      if (event.target.checked) {\n        if (!this.alert.federal_notices.includes(notice.federal_notice_id)) {\n          this.alert.federal_notices.push(notice.federal_notice_id);\n        }\n      } else {\n        if (this.alert.federal_notices.includes(notice.federal_notice_id)) {\n          let federal_notices = this.alert.federal_notices.filter(function (element) {\n            return element != notice.federal_notice_id;\n          });\n          this.alert.federal_notices = federal_notices;\n        }\n      }\n    },\n    sortFederalAgency() {\n      let vm = this;\n      vm.sorted_federal_agencies = vm.federal_agencies.filter(function (element) {\n        return element.agency_name.toLowerCase().includes(vm.federal_agency_keyword.toLowerCase());\n      });\n    },\n    selectAllFederalAgencies() {\n      let vm = this;\n      vm.alert.federal_agencies = [];\n      vm.sorted_federal_agencies.map(function (element) {\n        vm.alert.federal_agencies.push(element.federal_agency_id);\n      });\n      vm.selected_federal_agencies = [];\n      vm.alert.federal_agencies.map(function (element) {\n        let selected = vm.sorted_federal_agencies.filter(function (ele) {\n          return ele.federal_agency_id == element;\n        });\n        if (selected.length) {\n          vm.selected_federal_agencies.push({\n            federeal_agency_id: selected[0].federal_agency_id,\n            agency_name: selected[0].agency_name\n          });\n        }\n      });\n    },\n    deselectFederalAgencies() {\n      this.sorted_federal_agencies = this.federal_agencies;\n      this.federal_agency_keyword = null;\n      this.alert.federal_agencies = [];\n      this.selected_federal_agencies = [];\n    },\n    selectAllStates() {\n      let vm = this;\n      vm.alert.states = [];\n      vm.sorted_states.map(function (element) {\n        vm.alert.states.push(element.state_id);\n      });\n    },\n    deselectAllStates() {\n      this.sorted_states = this.states;\n      this.state_keyword = null;\n      this.alert.states = [];\n    },\n    getUsers() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getUsers\"\n      }).then(function (response) {\n        vm.users = response.data;\n        vm.getSates();\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getSates() {\n      let vm = this;\n      let uri = \"getStates\";\n      vm.$store.dispatch(\"post\", {\n        uri: uri,\n        data: {\n          country_id: 10\n        }\n      }).then(function (response) {\n        vm.states = response.data;\n        vm.sorted_states = vm.states;\n        vm.getFederalNotices();\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    sortStates() {\n      let vm = this;\n      vm.sorted_states = vm.states.filter(function (element) {\n        return element.state_name.toLowerCase().includes(vm.state_keyword.toLowerCase());\n      });\n    },\n    getFederalNotices() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getFederalNotices\"\n      }).then(function (response) {\n        vm.federal_notices = response.data;\n        vm.getFederalAgencies();\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getFederalAgencies() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getFederalAgencies\"\n      }).then(function (response) {\n        vm.federal_agencies = response.data;\n        vm.sorted_federal_agencies = vm.federal_agencies;\n\n        // Map selected agency IDs to corresponding agency objects\n        vm.selected_federal_agencies = vm.alert.federal_agencies.map(id => vm.federal_agencies.find(agency => agency.federal_agency_id === id)).filter(agency => agency !== undefined);\n        vm.getSetAsides();\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getSetAsides() {\n      let vm = this;\n      let uri = \"getSetAsides\";\n      vm.$store.dispatch(\"post\", {\n        uri: uri\n      }).then(function (response) {\n        vm.set_asides = response.data;\n        vm.getNaics();\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getNaics() {\n      let vm = this;\n      vm.loading = true;\n      let uri = \"getNaics\";\n      vm.$store.dispatch(\"post\", {\n        uri: uri,\n        data: vm.naics_code\n      }).then(function (response) {\n        vm.treeData.children = response.data.naics;\n        vm.naics_code.naics_codes = response.data.naics_codes;\n        if (vm.alert.naics.length) {\n          vm.$store.dispatch(\"setSelectedNaics\", vm.alert.naics);\n        }\n        vm.getPscs();\n        vm.loading = false;\n      }).catch(function (error) {\n        vm.loading = false;\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getPscs() {\n      let vm = this;\n      vm.loading_psc = true;\n      let uri = \"getPscs\";\n      vm.$store.dispatch(\"post\", {\n        uri: uri,\n        data: vm.service_code\n      }).then(function (response) {\n        vm.service_codes.children = response.data.pscs;\n        vm.psc_code.psc_codes = response.data.psc_codes;\n        if (vm.alert.pscs.length) {\n          console.log(vm.alert.pscs.length);\n          vm.$store.dispatch(\"setSelectedPscs\", vm.alert.pscs);\n        }\n        vm.loading_psc = false;\n      }).catch(function (error) {\n        vm.loading_psc = false;\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    createAlerts() {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.alert.naics = vm.$store.getters.selected_naics;\n      vm.alert.pscs = vm.$store.getters.selected_pscs;\n      vm.alert.keywords = vm.tags;\n      vm.$store.dispatch(\"post\", {\n        uri: \"createAlerts\",\n        data: vm.alert\n      }).then(function (response) {\n        loader.hide();\n        vm.$store.dispatch(\"success\", \"Alert is added successfully\");\n        // vm.$store.dispatch(\"setUser\", response.data.admin);\n        vm.$router.push(\"/alerts\");\n      }).catch(function (error) {\n        console.log(error);\n        loader.hide();\n        if (error.response.data.errors.states) {\n          vm.state_border_red = \"border-color:red\";\n        }\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    updateAlerts() {\n      let vm = this;\n      let loader = vm.$loading.show();\n      vm.alert.naics = vm.$store.getters.selected_naics;\n      vm.alert.pscs = vm.$store.getters.selected_pscs;\n      vm.alert.keywords = vm.tags;\n      vm.$store.dispatch(\"post\", {\n        uri: \"updateAlerts\",\n        data: vm.alert\n      }).then(function (response) {\n        loader.hide();\n        vm.$store.dispatch(\"success\", \"Alert is updated successfully\");\n        vm.$store.dispatch(\"setSelectedNaics\", null);\n        vm.$store.dispatch(\"setSelectedPscs\", null);\n        vm.$router.push(\"/alerts\");\n      }).catch(function (error) {\n        console.log(error);\n        loader.hide();\n        if (error.response.data.errors.states) {\n          vm.state_border_red = \"border-color:red\";\n        }\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getNotice(region_id) {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getNotice?region_id=\" + region_id\n      }).then(function (response) {\n        vm.notices = response.data.data;\n        vm.getasideStatus();\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getasideStatus() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getAllSetAsideStatus\"\n      }).then(function (response) {\n        vm.sideStatus = response.data.data;\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    backSaveAlert() {\n      this.$store.commit(\"setAlert\", \"\");\n      this.$store.commit(\"setSelectedNaics\", []);\n      this.$store.commit(\"setSelectedPsces\", []);\n      this.$router.push(\"/bids/alerts\");\n    },\n    clearAllNaics() {\n      this.isLoading1 = true;\n      setTimeout(() => {\n        this.clear_all_naics = !this.clear_all_naics;\n        this.isLoading1 = false;\n      }, 1000);\n    },\n    clearAllPsc() {\n      this.isLoading2 = true;\n      setTimeout(() => {\n        this.clear_all_psc = !this.clear_all_psc;\n        this.isLoading2 = false;\n      }, 1000);\n    },\n    handleChangeTag(tags) {\n      let vm = this;\n      vm.tags = tags;\n      vm.keywords = vm.tags;\n    },\n    removeTag(index) {\n      this.agency_fedral.splice(index, 1);\n    },\n    submit() {\n      let vm = this;\n      if (vm.status) {\n        vm.createAlerts();\n      } else {\n        vm.updateAlerts();\n      }\n    },\n    filterCategory() {\n      if (this.searchagencycategory == \"\") {\n        this.categorys = this.allFilterCategroy;\n      }\n      this.categorys = this.allFilterCategroy.filter(entry => {\n        return entry.category_name.toLowerCase().includes(this.searchagencycategory.toLowerCase());\n      });\n    },\n    callFunction: function () {\n      var currentDateWithFormat = new Date().toJSON().slice(0, 10).replace(/-/g, \"/\");\n      this.savealert.created_on = currentDateWithFormat;\n      this.savealert.updated_on = currentDateWithFormat;\n    },\n    getcategory() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getCategory\"\n      }).then(function (response) {\n        vm.categorys = response.data.data;\n        vm.categorycount = vm.categorys.length;\n        vm.allFilterCategroy = vm.categorys;\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getCountry() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getCountry\"\n      }).then(function (response) {\n        vm.countrys = response.data.data;\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    selectCategory() {\n      this.selectedcategory = [];\n      this.selectAllcategory = false;\n      if (!this.selectAllcategory) {\n        for (let i in this.categorys) {\n          this.selectedcategory.push(this.categorys[i].category_id);\n        }\n        this.searchfilter.tdr_category = this.selectedcategory;\n      }\n    },\n    DeselectCategory() {\n      this.selectedcategory = [];\n      this.searchfilter.tdr_category = [];\n    },\n    updateCheckallCategory(category) {\n      if (this.categorys.length == this.selectedcategory.length) {\n        this.selectedcategory = [];\n        this.selectAllcategory = true;\n        this.searchfilter.tdr_category = this.selectedcategory;\n      } else {\n        this.selectAllcategory = false;\n        this.searchfilter.tdr_category = this.selectedcategory;\n      }\n    },\n    selectCountryState() {\n      this.stateSelected = [];\n      this.stateselectAll = false;\n      if (!this.stateselectAll) {\n        this.filters.filter(x => x.table === \"state\").forEach(x => this.filters.splice(this.filters.indexOf(x), 1));\n        for (let i in this.state_country1) {\n          this.stateSelected.push(this.state_country[i].state_id);\n          this.filters.push({\n            table: \"state\",\n            id: this.state_country[i].state_id,\n            name: this.state_country[i].state_name\n          });\n        }\n        // alert(this.selected);\n        this.searchfilter.tdr_state = this.stateSelected;\n        this.getfedralDocument();\n      }\n    },\n    DeselectCountryState() {\n      this.stateSelected = [];\n      this.searchfilter.tdr_state = [];\n      this.filters.filter(x => x.table === \"state\").forEach(x => this.filters.splice(this.filters.indexOf(x), 1));\n      this.getfedralDocument();\n    },\n    updateCountryStateCheckall(state) {\n      if (this.state_country.length == this.stateSelected.length) {\n        this.stateSelected = [];\n        this.stateselectAll = true;\n        this.searchfilter.tdr_state = this.stateSelected;\n        this.getfedralDocument();\n        if (this.stateselectAll == true) {\n          this.filters.filter(x => x.table === \"state\").forEach(x => this.filters.splice(this.filters.indexOf(x), 1));\n          for (let i in this.state_country) {\n            this.stateSelected.push(this.state_country[i].state_id);\n            // this.statefilter.push(this.state_country[i]);\n            this.filters.push({\n              table: \"state\",\n              id: this.state_country[i].state_id,\n              name: this.state_country[i].state_name\n            });\n          }\n        }\n      } else {\n        let i = this.filters.findIndex(data => data.id === state.state_id);\n        if (i !== -1) {\n          this.filters.splice(i, 1);\n        } else {\n          this.filters.push({\n            table: \"state\",\n            id: state.state_id,\n            name: state.state_name\n          });\n          // this.statefilter.push(state);\n          this.filters = this.filters.filter((state, index) => this.filters.indexOf(state) === index);\n        }\n        this.stateselectAll = false;\n        // alert(this.selected);\n        this.searchfilter.tdr_state = this.stateSelected;\n\n        // alert(this.selected.length);\n      }\n    },\n    getSateCountry() {\n      let vm = this;\n      if (vm.listcountry.country_id[0] !== \"\") {\n        vm.searchfilter.tdr_country = vm.listcountry.country_id;\n      } else {\n        vm.searchfilter.tdr_country = [];\n      }\n      vm.listcountry.country_id = Object.assign({}, [vm.liststate.country_id]);\n      let uri = \"getState\";\n      vm.$store.dispatch(\"post\", {\n        uri: uri,\n        data: vm.listcountry\n      }).then(function (response) {\n        vm.state_country1 = response.data.data;\n        vm.statecount1 = vm.state_country1.length;\n        vm.allFilterState = vm.state_country1;\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getFederal() {\n      let vm = this;\n      vm.$store.dispatch(\"post\", {\n        uri: \"getAgencyFederal\"\n      }).then(function (response) {\n        vm.federal = response.data.data;\n      }).catch(function (error) {\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getAllAgency() {\n      let vm = this;\n      vm.isLoading = true;\n      let uri = \"getAgency\";\n      vm.$store.dispatch(\"post\", {\n        uri: uri\n      }).then(function (response) {\n        vm.isLoading = false;\n        vm.filterAgency = response.data.data;\n        vm.allFilterAgency = vm.filterAgency;\n        vm.agencycount = vm.filterAgency.length;\n      }).catch(function (error) {\n        vm.isLoading = false;\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    getSpecificAgency() {\n      let vm = this;\n      vm.isLoading = true;\n      let uri = \"getAgencyFederal\";\n      vm.$store.dispatch(\"post\", {\n        uri: uri\n      }).then(function (response) {\n        vm.isLoading = false;\n        vm.federal = response.data.data;\n        vm.filterAgency = response.data.data;\n        vm.allFilterAgency = vm.filterAgency;\n        vm.agencycount = vm.filterAgency.length;\n        //vm.getSavedsearch();\n      }).catch(function (error) {\n        vm.isLoading = false;\n        vm.errors = error.response.data.errors;\n        vm.$store.dispatch(\"error\", error.response.data.message);\n      });\n    },\n    filter1Agency() {\n      if (this.searchagencyState == \"\") {\n        this.filterAgency = this.allFilterAgency;\n      }\n      this.filterAgency = this.allFilterAgency.filter(entry => {\n        return entry.agency_name.toLowerCase().includes(this.searchagencyState.toLowerCase());\n      });\n    },\n    select() {\n      this.selected = [];\n      if (!this.selectAll) {\n        for (let i in this.state_country) {\n          this.selected.push(this.state_country[i].state_id);\n        }\n        // alert(this.selected);\n        this.state_id = this.selected;\n      }\n    },\n    Deselect() {\n      this.selected = [];\n      this.state_id = [];\n    },\n    updateCheckall() {\n      if (this.state_country.length == this.selected.length) {\n        this.selectAll = true;\n        // alert(this.selected);\n        //alert(this.options);\n        this.state_id = this.selected;\n\n        // alert(this.searchfilter.tdr_state);\n      } else {\n        this.selectAll = false;\n        // alert(this.selected);\n        this.state_id = this.selected;\n\n        // alert(this.selected.length);\n      }\n    },\n    // federal search subhash\n    selectState() {\n      this.selectedState = [];\n      if (!this.selectAllState) {\n        for (let i in this.filterAgency) {\n          this.selectedState.push(this.filterAgency[i].agency_name);\n        }\n        this.agency_fedral = this.selectedState;\n      }\n    },\n    DeselectState() {\n      this.selectedState = [];\n      this.agency_fedral = [];\n    },\n    updateCheckallState() {\n      if (this.filterAgency.length == this.selectedState.length) {\n        this.selectAllState = true;\n        this.agency_fedral = this.selectedState;\n      } else {\n        this.selectAllState = false;\n        this.agency_fedral = this.selectedState;\n      }\n    },\n    addTag(event) {\n      event.preventDefault();\n      let val = event.target.value.trim();\n      if (val.length > 0) {\n        if (this.tags.length >= 1) {\n          for (let i = 0; i < this.tags.length; i++) {\n            if (this.tags[i] === val) {\n              return false;\n            }\n          }\n        }\n        this.tags.push(val);\n        event.target.value = \"\";\n        console.log(this.tags);\n      }\n    },\n    removeTag(index) {\n      this.tags.splice(index, 1);\n    },\n    removeLastTag(event) {\n      if (event.target.value.length === 0) {\n        this.removeTag(this.tags.length - 1);\n      }\n    }\n  }\n};","map":{"version":3,"names":["TreeItem","PscTree","Loading","Skeleton2","components","data","state_border_red","states","sorted_states","state_keyword","federal_notices","federal_agencies","sorted_federal_agencies","selected_federal_agencies","set_asides","naics","users","alert","user_id","federal_alert_id","titel","frequency","region","keywords","pscs","tags","treeData","name","naics_code","children","service_codes","psc_code","psc_codes","tag","selectedNaicses","childItems","filterAgency","state_country1","allFilterAgency","SpecificAgency","agencycheck","agencyAll","agencySpecific","searchstate","errors","tdr_agency","countryid","selected","statussearch","selectAll","searchagencyState","stateSelected","selectAllState","selectedcategory","selectAllcategory","selectedState","agencyState","categorys","status","searchagencycategory","interstedUser","id","liststate","country_id","listcountry","searchfilter","tdr_country","countrys","state_id","naics_id","psc","set_aside_status","agency_fedral","notice_type","state_country","federal","sideStatus","notices","state","savedata","agencycount","categorycount","allFilterCategroy","savealert","on_off","alert_label","region_id","category_id","created_on","updated_on","isLoading","isLoading1","isLoading2","fullPage","fullPage1","fullPage2","search","alert_id","service_code","clear_all_naics","clear_all_psc","federal_agency_keyword","loading","loading_psc","beforeRouteEnter","to","from","next","vm","loader","$loading","show","uri","params","$store","dispatch","then","response","hide","console","log","catch","error","message","mounted","getUsers","computed","filterState","filter","state_name","toLowerCase","includes","filterSpecifyAgency","statefederal","agency_name","methods","removeFederalAgency","federal_agency","element","federal_agency_id","agencyId","removeTag","index","splice","removeLastTag","event","target","value","length","updateFederalAgencies","checked","push","map","ele","federeal_agency_id","updateSetAsides","set_aside","set_aside_id","updateStates","updateFederalNotices","notice","federal_notice_id","sortFederalAgency","selectAllFederalAgencies","deselectFederalAgencies","selectAllStates","deselectAllStates","getSates","getFederalNotices","sortStates","getFederalAgencies","find","agency","undefined","getSetAsides","getNaics","naics_codes","getPscs","createAlerts","getters","selected_naics","selected_pscs","$router","updateAlerts","getNotice","getasideStatus","backSaveAlert","commit","clearAllNaics","setTimeout","clearAllPsc","handleChangeTag","submit","filterCategory","entry","category_name","callFunction","currentDateWithFormat","Date","toJSON","slice","replace","getcategory","getCountry","selectCategory","i","tdr_category","DeselectCategory","updateCheckallCategory","category","selectCountryState","stateselectAll","filters","x","table","forEach","indexOf","tdr_state","getfedralDocument","DeselectCountryState","updateCountryStateCheckall","findIndex","getSateCountry","Object","assign","statecount1","allFilterState","getFederal","getAllAgency","getSpecificAgency","filter1Agency","select","Deselect","updateCheckall","selectState","DeselectState","updateCheckallState","addTag","preventDefault","val","trim"],"sources":["/private/var/www/html/bidsportal.com/admin/src/views/Users/Alerts/FederalAlert.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid pb-3\">\n        <div class=\"d-flex justify-content-between align-items-center\">\n            <h2 class=\"main-title mb-2\">Federale Alert</h2>\n            <router-link to=\"/alerts\" class=\"btn btn-primary mb-2\">Back</router-link>\n        </div>\n        <div class=\"row g-3\">\n            <div class=\"col-md-12\">\n                <form class=\"card\" @submit.prevent=\"submitForm()\">\n                    <div class=\"card-header\">\n                        <div class=\"d-sm-flex align-items-center justify-content-between\">\n                            <h6 class=\"card-title mb-0\" v-if=\"status\"><strong>Add Federal Alert</strong></h6>\n                            <h6 class=\"card-title mb-0\" v-else><strong>Update Federal Alert</strong></h6>\n                        </div>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row g-3\">\n                            <div class=\"col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label class=\"form-label\">User <span class=\"text-danger\">*</span></label>\n                                    <select class=\"form-control\" :class=\"{ 'is-invalid': errors.user_id }\" v-model=\"alert.user_id\">\n                                        <option value=\"\">Select User</option>\n                                        <option v-for=\"(user, key) in users\" :key=\"key\" :value=\"user.user_id\">{{ user.name }}</option>\n                                    </select>\n                                    <span v-if=\"errors.user_id\" class=\"invalid-feedback\">{{ errors.user_id[0] }}</span>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label class=\"form-label\">Alert Title<span class=\"text-danger\">*</span></label>\n                                    <input type=\"text\" class=\"form-control\" :class=\"{ 'is-invalid': errors.alert_title }\" v-model=\"alert.alert_title\" placeholder=\"Alert Title\" />\n                                    <span v-if=\"errors.alert_title\" class=\"invalid-feedback\">{{ errors.alert_title[0] }}</span>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label class=\"form-label\">Frequency<span class=\"text-danger\">*</span></label>\n                                    <select class=\"form-select\" v-model=\"alert.frequency\" :class=\"{ 'is-invalid': errors.frequency }\">\n                                        <option selected=\"\" value=\"\">Select your Frequency</option>\n                                        <option value:daily>Daily</option>\n                                        <option value:weekly>Weekly</option>\n                                    </select>\n                                    <span v-if=\"errors.frequency\" class=\"invalid-feedback\">{{ errors.frequency[0] }}</span>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label>State <span class=\"text-danger\">*</span></label>\n                                    <label class=\"form-label\">{{ alert.states.length }} of {{ sorted_states.length }} Selected</label>\n                                    <div class=\"\">\n                                        <button type=\"button\" class=\"btn btn-state form-select\" data-bs-toggle=\"dropdown\" :style=\"state_border_red\">\n                                            <span class=\"text-center\" style=\"float: left; color: var(--bs-gray-500); font-weight: 400;\">Select State</span>\n                                        </button>\n                                        <span v-if=\"errors.states\" style=\"font-size: 0.875em; color: #dc3545;\">{{ errors.states[0] }}</span>\n                                        <span v-if=\"errors.states\" class=\"invalid-feedback\">{{ errors.states[0] }}</span>\n                                        <label for=\"inputfrequen1\" class=\"form-label\"> </label>\n                                        <ul class=\"dropdown-menu\">\n                                            <li class=\"dropdown-item\">\n                                                <div class=\"\">\n                                                    {{ alert.states?.length }} of {{ sorted_states?.length }}\n                                                    <span v-if=\"alert.states?.length !== sorted_states?.length\">\n                                                        <a href=\"javascript:void(0)\" @click=\"selectAllStates()\" class=\"\" ref=\"selectState\">\n                                                            Select All /\n                                                        </a>\n                                                    </span>\n                                                    <span>\n                                                        <a href=\"javascript:void(0)\" @click=\"deselectAllStates()\" class=\"\" ref=\"selectState\">\n                                                            Reset all\n                                                        </a>\n                                                    </span>\n                                                    <div class=\"ss-filter-search\">\n                                                        <input autocomplete=\"off\" class=\"form-control\" type=\"text\" v-model=\"state_keyword\" placeholder=\"Search state\" @keyup=\"sortStates()\" />\n                                                        <div class=\"liststate\" id=\"style-3\">\n                                                            <ul class=\"checkbox\" style=\"padding-left: 10px;\" v-for=\"state in sorted_states\" :key=\"state.state_id\">\n                                                                <li class=\"list-group-item\">\n                                                                    <input class=\"form-check-input me-1\" id=\"federalcheck\" type=\"checkbox\" :value=\"state.state_id\" v-model=\"alert.states\" @click=\"updateStates(state, $event)\" />\n                                                                    {{ state.state_name }}\n                                                                </li>\n                                                            </ul>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-sm-12\">\n                                <div class=\"form-group\">\n                                    <strong>Notice type<span class=\"text-danger\">*</span></strong><br />\n                                    <span v-if=\"errors.federal_notices\" style=\"color: #dc3545; margin-top: -10px; font-size: 0.875em;\">{{ errors.federal_notices[0] }}</span>\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-6 col-lg-4 col-xl-4\" v-for=\"notice in federal_notices\" :key=\"notice.notice_id\">\n                                            <ul class=\"list-group mb-0\">\n                                                <li class=\"list-group-item list-group-item-borderless\">\n                                                    <input type=\"checkbox\" class=\"form-check-input me-2\" id=\"rememberCheck\" :value=\"notice.federal_notice_id\" v-model=\"alert.federal_notices\" @click=\"updateFederalNotices(notice, $event)\" />\n                                                    <label class=\"form-check-label\" for=\"flexRadioDefault1\">\n                                                        {{ notice.notice_name }}\n                                                    </label>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12\">\n                                <div class=\"form-group\">\n                                    <strong>Set-Aside Code <span class=\"text-danger\">*</span> </strong>\n                                    <div v-if=\"errors.set_asides\" style=\"color: #dc3545; font-size: 0.875em;\">{{ errors.set_asides[0] }}</div>\n                                    <a class=\"inf\" href=\"javascript:void(0)\"> More Information about Set-Aside Codes</a>\n                                    <div class=\"row g-2 text-align-justify\">\n                                        <div class=\"col-sm-6 col-lg-6 col-xl-6\" style=\"padding-right: 20px;\" v-for=\"set_aside in set_asides\" :key=\"set_aside.set_aside_id\">\n                                            <ul class=\"list-group mb-0\">\n                                                <li class=\"list-group-item list-group-item-borderless d-flex\">\n                                                    <span>\n                                                        <input type=\"checkbox\" class=\"form-check-input me-2\" id=\"rememberCheck\" :value=\"set_aside.set_aside_id\" v-model=\"alert.set_asides\" @click=\"updateSetAsides(set_aside, $event)\" />\n                                                    </span>\n                                                    <label class=\"form-check-label\" for=\"flexRadioDefault1\">\n                                                        {{ set_aside.set_aside_name }}\n                                                    </label>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-sm-12\">\n                                <div class=\"form-group\">\n                                    <strong>Agency </strong>\n                                    <div>\n                                        <span class=\"greentitle mt-1\"> About Scheduled Emails:</span>\n                                        <span class=\"text-center mt-2\">\n                                            Type in a partial agency name below and then choose a match to add it to your selection.\n                                            <br />\n                                            To remove a choice from your selection press the [X] icon on the left.\n                                        </span>\n                                    </div>\n                                    <div class=\"collapse show mt-2\" id=\"collapseExample7\">\n                                        <div class=\"collapse show\" id=\"collapseExample7\">\n                                            <div class=\"\">\n                                                {{ alert.federal_agencies.length }} of {{ sorted_federal_agencies.length }}\n                                                <span v-if=\"alert.federal_agencies.length !== sorted_federal_agencies.length\">\n                                                    <a href=\"javascript:void(0)\" @click=\"selectAllFederalAgencies()\" class=\"\" ref=\"selectState\">\n                                                        Select All /\n                                                    </a>\n                                                </span>\n                                                <a href=\"javascript:void(0)\" @click=\"deselectFederalAgencies()\" class=\"\" ref=\"selectState\">\n                                                    Reset all\n                                                </a>\n                                                <div class=\"col-md-6\">\n                                                    <div class=\"ss-filter-search\">\n                                                        <input\n                                                            class=\"form-control pe-5\"\n                                                            type=\"search\"\n                                                            placeholder=\"Search\"\n                                                            aria-label=\"Search\"\n                                                            v-model=\"federal_agency_keyword\"\n                                                            @keyup=\"sortFederalAgency()\"\n                                                            style=\"border-radius: 0.5rem 0.5rem 0px 0px;\"\n                                                        />\n                                                        <div class=\"liststate scroll1 hgt\" id=\"style-3\" style=\"border: 1px solid #c5c5c7; border-top: 0px;\">\n                                                            <ul class=\"list-group checkbox\" v-for=\"federal_agency in sorted_federal_agencies\" :key=\"federal_agency.agency_id\">\n                                                                <li class=\"list-group-item d-flex border-0 border-bottom\">\n                                                                    &nbsp;\n                                                                    <input\n                                                                        class=\"form-check-input me-1\"\n                                                                        type=\"checkbox\"\n                                                                        :value=\"federal_agency.federal_agency_id\"\n                                                                        v-model=\"alert.federal_agencies\"\n                                                                        @click=\"updateFederalAgencies(federal_agency, $event)\"\n                                                                    />\n                                                                    &nbsp; {{ federal_agency.agency_name }}\n                                                                </li>\n                                                            </ul>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row mt-4 scroll1\" v-if=\"selected_federal_agencies.length\">\n                                                    <div class=\"col-sm-8 col-lg-4 col-xl-3\" v-for=\"agency, index in selected_federal_agencies\" :key=\"index\">\n                                                        <div class=\"bg-success bg-opacity-10 text-success d-flex justify-content-between align-items-center p-2 mb-3\">\n                                                            <div class=\"\" style=\"padding-left: 10px;\">\n                                                                <span>{{ agency.agency_name }}</span>\n                                                            </div>\n                                                            <a href=\"javascript:void(0)\" class=\"icon-lg rounded-circle flex-shrink-0 bg-opacity-10 text-dark mb-0\" @click=\"removeFederalAgency(agency)\">\n                                                                <i class=\"ri-close-line fs-18 lh-1\"></i>\n                                                            </a>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <strong>NAICS Code: <span class=\"text-danger\">*</span></strong><br />\n                                            <span v-if=\"errors.naics\" style=\"color: #dc3545; margin-top: -10px; font-size: 0.875em;\">{{ errors.naics[0] }}<br /></span>\n                                            <div class=\"mt-1\">\n                                                Use the search box to find NAICS Codes and mark one or more checkboxes to add to your selection. Note:Changing your search criteria does not remove items from your selection.\n                                            </div>\n\n                                            <div class=\"tab-content mt-2 mb-0\" id=\"flight-pills-tabContent\">\n                                                <div class=\"tab-pane fade show active\" id=\"flight-info-tab\" role=\"tabpanel\" aria-labelledby=\"flight-info\">\n                                                    <div class=\"row g-3 d-sm-flex justify-content-sm-between align-items-center mb-3\">\n                                                        <div class=\"col-md-8 small\">\n                                                            <form class=\"position-relative\">\n                                                                <input\n                                                                    class=\"form-control form-control-sm pe-5 myinput\"\n                                                                    type=\"search\"\n                                                                    placeholder=\"Search in Naics Codes\"\n                                                                    aria-label=\"Search\"\n                                                                    v-model=\"naics_code.search\"\n                                                                    @keypress.enter=\"getNaics()\"\n                                                                />\n                                                                <button class=\"btn border-0 px-3 py-0 position-absolute top-50 end-0 translate-middle-y\" type=\"button\" @click=\"getNaics()\"><i class=\"fas fa-search fs-6\"></i></button>\n                                                            </form>\n                                                        </div>\n                                                        <div class=\"col-md-4 small d-flex\">\n                                                            <div>\n                                                                <a class=\"my-auto dotted\" href=\"javascript:void(0)\" @click=\"clearAllNaics()\" style=\"color: rgb(64, 164, 241);\">Deselect All</a>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"card border-0\">\n                                                        <div class=\"vl-parent\">\n                                                            <loading v-model:active=\"isLoading1\" :can-cancel=\"false\" :z-index=\"10001\" :is-full-page=\"fullPage1\" />\n                                                            <div class=\"card-body p-0 scroll1 treehght\">\n                                                                <ul class=\"list-style-none\" style=\"padding-left: 0px;\">\n                                                                    <li>\n                                                                        <ul id=\"demo\">\n                                                                            <Skeleton2 v-if=\"loading\" />\n                                                                            <template v-else>\n                                                                                <TreeItem class=\"item\" :item=\"treeData\" :search=\"naics_code.search\" :tdr_naics=\"alert.naics\" :clear_all_naics=\"clear_all_naics\" :naics_codes=\"naics_code.naics_codes\"> </TreeItem>\n                                                                            </template>\n                                                                        </ul>\n                                                                    </li>\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-sm-12\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <strong>PSC Code: <span class=\"text-danger\">*</span></strong><br />\n                                            <span v-if=\"errors.pscs\" style=\"color: #dc3545; margin-top: -10px; font-size: 0.875em;\">{{ errors.pscs[0] }}<br /></span>\n                                            <div class=\"mt-1\">\n                                                Use the search box to find psc Codes and mark one or more checkboxes to add to your selection. Note:Changing your search criteria does not remove items from your selection.\n                                            </div>\n\n                                            <div class=\"tab-content mt-2 mb-0\" id=\"flight-pills-tabContent\">\n                                                <div class=\"tab-pane fade show active\" id=\"flight-info-tab\" role=\"tabpanel\" aria-labelledby=\"flight-info\">\n                                                    <div class=\"row g-3 d-sm-flex justify-content-sm-between align-items-center mb-3\">\n                                                        <div class=\"col-md-8 small\">\n                                                            <form class=\"position-relative\">\n                                                                <input\n                                                                    class=\"form-control form-control-sm pe-5 myinput\"\n                                                                    type=\"search\"\n                                                                    placeholder=\"Search in PSC Codes\"\n                                                                    aria-label=\"Search\"\n                                                                    v-model=\"service_code.search\"\n                                                                    @keypress.enter=\"getPscs()\"\n                                                                />\n                                                                <button class=\"btn border-0 px-3 py-0 position-absolute top-50 end-0 translate-middle-y\" type=\"button\" @click=\"getServiceCodes()\"><i class=\"fas fa-search fs-6\"></i></button>\n                                                            </form>\n                                                        </div>\n                                                        <div class=\"col-md-4 small d-flex\">\n                                                            <div><a class=\"my-auto dotted\" href=\"javascript:void(0)\" @click=\"clearAllPsc()\" style=\"color: rgb(64, 164, 241);\">Deselect All</a></div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"card border-0\">\n                                                        <div class=\"vl-parent\">\n                                                            <loading v-model:active=\"isLoading2\" :can-cancel=\"false\" :z-index=\"10001\" :is-full-page=\"fullPage2\" />\n                                                            <div class=\"card-body p-0 scroll1 treehght\">\n                                                                <ul class=\"list-style-none\" style=\"padding-left: 0px;\">\n                                                                    <li>\n                                                                        <ul id=\"demo\">\n                                                                            <Skeleton2 v-if=\"loading_psc\" />\n                                                                            <template v-else>\n                                                                                <PscTree class=\"item\" :item=\"service_codes\" :search=\"service_code.search\" :clear_all_psc=\"clear_all_psc\" :psc_codes=\"psc_code.psc_codes\"> </PscTree>\n                                                                            </template>\n                                                                        </ul>\n                                                                    </li>\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-sm-6\">\n                                <div class=\"form-group\">\n                                    <strong>Keywords (each seperated by \",\") <span class=\"text-danger\">*</span></strong><br />\n                                    <span v-if=\"errors.keywords\" style=\"color: #dc3545; font-size: 0.875em;\">{{ errors.keywords[0] }}</span>\n                                    <div class=\"tag-input mt-1\">\n                                        <div v-for=\"(tag, index) in tags\" :key=\"tag\" class=\"tag-input__tag\">\n                                            {{ tag }}\n                                            <span @click=\"removeTag(index)\">x</span>\n                                        </div>\n                                        <textarea rows=\"4\" type=\"text\" placeholder=\"Enter a keyword\" class=\"form-control mb-0 tag-input__text\" @keydown.enter=\"addTag\" @keydown.,=\"addTag\" @keydown.delete=\"removeLastTag\"></textarea>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer text-end\">\n                        <button v-if=\"status\" @click.prevent=\"createAlerts()\" class=\"btn btn-primary\" type=\"submit\">Submit</button>\n                        <button v-else @click.prevent=\"updateAlerts()\" class=\"btn btn-primary\" type=\"submit\">Update</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import TreeItem from \"@/components/TreeItem.vue\";\n    import PscTree from \"@/components/PscTree.vue\";\n    import Loading from \"vue-loading-overlay\";\n    import Skeleton2 from \"@/components/Skeleton2.vue\";\n    export default {\n        components: { TreeItem, Skeleton2, Loading, PscTree },\n        data() {\n            return {\n                state_border_red: \"\",\n                states: [],\n                sorted_states: [],\n                state_keyword: \"\",\n                federal_notices: [],\n                federal_agencies: [],\n                sorted_federal_agencies: [],\n                selected_federal_agencies: [],\n                set_asides: [],\n                naics: [],\n                users: [],\n                alert: {\n                    user_id: \"\",\n                    federal_alert_id: \"\",\n                    titel: \"\",\n                    frequency: \"\",\n                    region: \"Federal\",\n                    keywords: [],\n                    states: [],\n                    federal_notices: [],\n                    federal_agencies: [],\n                    set_asides: [],\n                    naics: [],\n                    pscs: [],\n                },\n                tags: [],\n                treeData: {\n                    name: \"\",\n                    naics_code: \"Select All\",\n                    children: [],\n                },\n                service_codes: {\n                    name: \"\",\n                    psc_code: \"Select All\",\n                    children: [],\n                },\n                psc_code:{\n                    psc_codes:[]\n                },\n                tag: \"\",\n                // tags:[],\n                selectedNaicses: [],\n                childItems: [],\n                filterAgency: [],\n                state_country1: [],\n                allFilterAgency: [],\n                SpecificAgency: [],\n                agencycheck: \"\",\n                agencyAll: [],\n                agencySpecific: [],\n                searchstate: \"\",\n                errors: [],\n                tdr_agency: [],\n                countryid: [],\n                selected: [],\n                statussearch: true,\n                selectAll: false,\n                searchagencyState: \"\",\n                stateSelected: [],\n                selectAllState: false,\n                selectedcategory: [],\n                selectAllcategory: false,\n                selectedState: [],\n                agencyState: [],\n                categorys: [],\n                status: true,\n                searchagencycategory: \"\",\n                interstedUser: {\n                    id: \"\",\n                    user_id: \"\",\n                },\n                liststate: {\n                    country_id: [10],\n                },\n                listcountry: {\n                    country_id: [],\n                },\n                searchfilter: {\n                    tdr_country: [],\n                },\n                keywords: [],\n                countrys: [],\n                state_id: [],\n                naics_id: [],\n                psc: [],\n                set_aside_status: [],\n                agency_fedral: [],\n                notice_type: [],\n                state_country: [],\n                federal: [],\n                sideStatus: [],\n                notices: [],\n                state: [],\n                user_id: \"\",\n                savedata: [],\n                frequency: \"\",\n                agencycount: 0,\n                categorycount: 0,\n                allFilterCategroy: [],\n                savealert: {\n                    id: \"\",\n                    user_id: \"\",\n                    on_off: 1,\n                    alert_label: \"\",\n                    region_id: \"\",\n                    state_id: \"\",\n                    frequency: \"\",\n                    keywords: \"\",\n                    category_id: \"\",\n                    naics_id: \"\",\n                    notice_type: \"\",\n                    psc: \"\",\n                    set_aside_status: \"\",\n                    agency_fedral: \"\",\n                    created_on: \"\",\n                    updated_on: \"\",\n                },\n                isLoading: false,\n                isLoading1: false,\n                isLoading2: false,\n                fullPage: true,\n                fullPage1: false,\n                fullPage2: false,\n                naics_code: {\n                    search: \"\",\n                    alert_id: \"\",\n                },\n                service_code: {\n                    search: \"\",\n                    alert_id: \"\",\n                },\n                psc_code:{\n                    psc_codes:[]\n                },\n                clear_all_naics: false,\n                clear_all_psc: false,\n                federal_agency_keyword: null,\n                loading: true, // Initial loading state\n                loading_psc: true,\n            };\n        },\n\n        beforeRouteEnter(to, from, next) {\n            next((vm) => {\n                if (to.name == \"FederalAlert.Create\") {\n                    // vm.$refs.name.focus();\n                } else {\n                    let loader = vm.$loading.show();\n                    let uri = { uri: \"getAlert\", data: { alert_id: to.params.alert_id } };\n                    vm.$store\n                        .dispatch(\"post\", uri)\n                        .then(function (response) {\n                            loader.hide();\n                            console.log(\"getALert---\",response.data.data)\n                            vm.alert = response.data.data;\n                            vm.tags = vm.alert.keywords;\n                            vm.status = false;\n\n                            // vm.$store.dispatch(\"setSelectedNaics\", vm.alert.naics);\n                            // Load the federal agencies and filter selected ones\n                            // vm.getFederalAgencies();\n                        })\n                        .catch(function (error) {\n                            loader.hide();\n                            vm.errors = error.response.data.errors;\n                            vm.$store.dispatch(\"error\", error.response.data.message);\n                        });\n                }\n            });\n        },\n        mounted() {\n            this.getUsers();\n        },\n        computed: {\n            filterState() {\n                return this.state_country.filter((state) => {\n                    return state.state_name.toLowerCase().includes(this.searchstate.toLowerCase());\n                });\n            },\n            filterSpecifyAgency() {\n                return this.agencySpecific.filter((statefederal) => {\n                    return statefederal.agency_name.toLowerCase().includes(this.searchagencyState.toLowerCase());\n                });\n            },\n        },\n        methods: {\n            removeFederalAgency(federal_agency) {\n                console.log(federal_agency);\n                let vm = this;\n                 // Remove the specific agency from `selected_international_agencies`\n                vm.selected_federal_agencies = vm.selected_federal_agencies.filter(function (element) {\n                    console.log(\"element--\",element)\n                    return element.federal_agency_id !== federal_agency.federal_agency_id;\n                });\n\n                // Remove the specific agency from `alert.federal_agencies`\n                vm.alert.federal_agencies = vm.alert.federal_agencies.filter(function (agencyId) {\n                    return agencyId !== federal_agency.federal_agency_id;\n                });\n\n\n            },\n\n            removeTag(index) {\n                this.alert.keywords.splice(index, 1);\n            },\n            removeLastTag(event) {\n                if (event.target.value.length === 0) {\n                    this.removeTag(this.alert.keywords.length - 1);\n                }\n            },\n            updateFederalAgencies(federal_agency, event) {\n                let vm = this;\n                if (event.target.checked) {\n                    if (!vm.alert.federal_agencies.includes(federal_agency.federal_agency_id)) {\n                        vm.alert.federal_agencies.push(federal_agency.federal_agency_id);\n                    }\n                } else {\n                    if (vm.alert.federal_agencies.includes(federal_agency.federal_agency_id)) {\n                        let federal_agencies = vm.alert.federal_agencies.filter(function (element) {\n                            return element != federal_agency.federal_agency_id;\n                        });\n                        vm.alert.federal_agencies = federal_agencies;\n                    }\n                }\n                vm.selected_federal_agencies = [];\n                vm.alert.federal_agencies.map(function (element) {\n                    let selected = vm.sorted_federal_agencies.filter(function (ele) {\n                        return ele.federal_agency_id == element;\n                    });\n                    if (selected.length) {\n                        vm.selected_federal_agencies.push({\n                            federeal_agency_id: selected[0].federal_agency_id,\n                            agency_name: selected[0].agency_name,\n                        });\n                    }\n                });\n            },\n            updateSetAsides(set_aside, event) {\n                if (event.target.checked) {\n                    if (!this.alert.set_asides.includes(set_aside.set_aside_id)) {\n                        this.alert.set_asides.push(set_aside.set_aside_id);\n                    }\n                } else {\n                    if (this.alert.set_asides.includes(set_aside.set_aside_id)) {\n                        let set_asides = this.alert.set_asides.filter(function (element) {\n                            return element != set_aside.set_aside_id;\n                        });\n                        this.alert.set_asides = set_asides;\n                    }\n                }\n            },\n            updateStates(state, event) {\n                if (event.target.checked) {\n                    if (!this.alert.states.includes(state.state_id)) {\n                        this.alert.states.push(state.state_id);\n                    }\n                } else {\n                    if (this.alert.states.includes(state.state_id)) {\n                        let states = this.alert.states.filter(function (element) {\n                            return element != state.state_id;\n                        });\n                        this.alert.states = states;\n                    }\n                }\n            },\n\n            updateFederalNotices(notice, event) {\n                if (event.target.checked) {\n                    if (!this.alert.federal_notices.includes(notice.federal_notice_id)) {\n                        this.alert.federal_notices.push(notice.federal_notice_id);\n                    }\n                } else {\n                    if (this.alert.federal_notices.includes(notice.federal_notice_id)) {\n                        let federal_notices = this.alert.federal_notices.filter(function (element) {\n                            return element != notice.federal_notice_id;\n                        });\n                        this.alert.federal_notices = federal_notices;\n                    }\n                }\n            },\n\n            sortFederalAgency() {\n                let vm = this;\n                vm.sorted_federal_agencies = vm.federal_agencies.filter(function (element) {\n                    return element.agency_name.toLowerCase().includes(vm.federal_agency_keyword.toLowerCase());\n                });\n            },\n\n            selectAllFederalAgencies() {\n                let vm = this;\n                vm.alert.federal_agencies = [];\n                vm.sorted_federal_agencies.map(function (element) {\n                    vm.alert.federal_agencies.push(element.federal_agency_id);\n                });\n                vm.selected_federal_agencies = [];\n                vm.alert.federal_agencies.map(function (element) {\n                    let selected = vm.sorted_federal_agencies.filter(function (ele) {\n                        return ele.federal_agency_id == element;\n                    });\n                    if (selected.length) {\n                        vm.selected_federal_agencies.push({\n                            federeal_agency_id: selected[0].federal_agency_id,\n                            agency_name: selected[0].agency_name,\n                        });\n                    }\n                });\n            },\n\n            deselectFederalAgencies() {\n                this.sorted_federal_agencies = this.federal_agencies;\n                this.federal_agency_keyword = null;\n                this.alert.federal_agencies = [];\n                this.selected_federal_agencies = [];\n            },\n\n            selectAllStates() {\n                let vm = this;\n                vm.alert.states = [];\n                vm.sorted_states.map(function (element) {\n                    vm.alert.states.push(element.state_id);\n                });\n            },\n            deselectAllStates() {\n                this.sorted_states = this.states;\n                this.state_keyword = null;\n                this.alert.states = [];\n            },\n            getUsers() {\n                let vm = this;\n                vm.$store\n                    .dispatch(\"post\", { uri: \"getUsers\" })\n                    .then(function (response) {\n                        vm.users = response.data;\n                        vm.getSates();\n                    })\n                    .catch(function (error) {\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n            getSates() {\n                let vm = this;\n                let uri = \"getStates\";\n                vm.$store\n                    .dispatch(\"post\", { uri: uri, data: { country_id: 10 } })\n                    .then(function (response) {\n                        vm.states = response.data;\n                        vm.sorted_states = vm.states;\n                        vm.getFederalNotices();\n                    })\n                    .catch(function (error) {\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n            sortStates() {\n                let vm = this;\n                vm.sorted_states = vm.states.filter(function (element) {\n                    return element.state_name.toLowerCase().includes(vm.state_keyword.toLowerCase());\n                });\n            },\n\n            getFederalNotices() {\n                let vm = this;\n                vm.$store\n                    .dispatch(\"post\", { uri: \"getFederalNotices\" })\n                    .then(function (response) {\n                        vm.federal_notices = response.data;\n                        vm.getFederalAgencies();\n                    })\n                    .catch(function (error) {\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n\n            getFederalAgencies() {\n                let vm = this;\n                vm.$store\n                    .dispatch(\"post\", { uri: \"getFederalAgencies\" })\n                    .then(function (response) {\n                        vm.federal_agencies = response.data;\n                        vm.sorted_federal_agencies = vm.federal_agencies;\n\n                        // Map selected agency IDs to corresponding agency objects\n                        vm.selected_federal_agencies = vm.alert.federal_agencies\n                        .map(id => vm.federal_agencies.find(agency => agency.federal_agency_id === id))\n                            .filter(agency => agency !== undefined);\n\n                        vm.getSetAsides();\n                    })\n                    .catch(function (error) {\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n            getSetAsides() {\n                let vm = this;\n                let uri = \"getSetAsides\";\n                vm.$store\n                    .dispatch(\"post\", { uri: uri })\n                    .then(function (response) {\n                        vm.set_asides = response.data;\n                        vm.getNaics();\n                    })\n                    .catch(function (error) {\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n            getNaics() {\n                let vm = this;\n                vm.loading = true;\n                let uri = \"getNaics\";\n                vm.$store\n                    .dispatch(\"post\", { uri: uri, data:vm.naics_code })\n                    .then(function (response) {\n                        vm.treeData.children = response.data.naics;\n                        vm.naics_code.naics_codes = response.data.naics_codes\n                        if(vm.alert.naics.length){\n                            vm.$store.dispatch(\"setSelectedNaics\", vm.alert.naics)\n                        }\n                        vm.getPscs();\n                        vm.loading = false;\n                    })\n                    .catch(function (error) {\n                        vm.loading = false;\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n            getPscs() {\n                let vm = this;\n                vm.loading_psc = true;\n                let uri = \"getPscs\";\n                vm.$store\n                    .dispatch(\"post\", { uri: uri, data:vm.service_code })\n                    .then(function (response) {\n                        vm.service_codes.children = response.data.pscs;\n                        vm.psc_code.psc_codes = response.data.psc_codes\n                        \n                        if(vm.alert.pscs.length){\n                            console.log(vm.alert.pscs.length)\n                            vm.$store.dispatch(\"setSelectedPscs\", vm.alert.pscs)\n                        }\n                        vm.loading_psc = false;\n                    })\n                    .catch(function (error) {\n                        vm.loading_psc = false;\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n\n            createAlerts() {\n                let vm = this;\n                let loader = vm.$loading.show();\n                vm.alert.naics = vm.$store.getters.selected_naics;\n                vm.alert.pscs = vm.$store.getters.selected_pscs;\n                vm.alert.keywords = vm.tags;\n                vm.$store\n                    .dispatch(\"post\", { uri: \"createAlerts\", data: vm.alert })\n                    .then(function (response) {\n                        loader.hide();\n                        vm.$store.dispatch(\"success\", \"Alert is added successfully\");\n                        // vm.$store.dispatch(\"setUser\", response.data.admin);\n                        vm.$router.push(\"/alerts\");\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                        loader.hide();\n                        if (error.response.data.errors.states) {\n                            vm.state_border_red = \"border-color:red\";\n                        }\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n\n            updateAlerts() {\n                let vm = this;\n                let loader = vm.$loading.show();\n                vm.alert.naics = vm.$store.getters.selected_naics;\n                vm.alert.pscs = vm.$store.getters.selected_pscs;\n                vm.alert.keywords = vm.tags;\n                vm.$store\n                    .dispatch(\"post\", { uri: \"updateAlerts\", data: vm.alert })\n                    .then(function (response) {\n                        loader.hide();\n                        vm.$store.dispatch(\"success\", \"Alert is updated successfully\");\n                        vm.$store.dispatch(\"setSelectedNaics\", null);\n                        vm.$store.dispatch(\"setSelectedPscs\", null);\n                        vm.$router.push(\"/alerts\");\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                        loader.hide();\n                        if (error.response.data.errors.states) {\n                            vm.state_border_red = \"border-color:red\";\n                        }\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n\n            getNotice(region_id) {\n                let vm = this;\n                vm.$store\n                    .dispatch(\"post\", { uri: \"getNotice?region_id=\" + region_id })\n                    .then(function (response) {\n                        vm.notices = response.data.data;\n\n                        vm.getasideStatus();\n                    })\n                    .catch(function (error) {\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n            getasideStatus() {\n                let vm = this;\n                vm.$store\n                    .dispatch(\"post\", { uri: \"getAllSetAsideStatus\" })\n                    .then(function (response) {\n                        vm.sideStatus = response.data.data;\n                    })\n                    .catch(function (error) {\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n\n            backSaveAlert() {\n                this.$store.commit(\"setAlert\", \"\");\n                this.$store.commit(\"setSelectedNaics\", []);\n                this.$store.commit(\"setSelectedPsces\", []);\n                this.$router.push(\"/bids/alerts\");\n            },\n\n            clearAllNaics() {\n                this.isLoading1 = true;\n                setTimeout(() => {\n                    this.clear_all_naics = !this.clear_all_naics;\n                    this.isLoading1 = false;\n                }, 1000);\n            },\n\n            clearAllPsc() {\n                this.isLoading2 = true;\n                setTimeout(() => {\n                    this.clear_all_psc = !this.clear_all_psc;\n                    this.isLoading2 = false;\n                }, 1000);\n            },\n\n            handleChangeTag(tags) {\n                let vm = this;\n                vm.tags = tags;\n                vm.keywords = vm.tags;\n            },\n            removeTag(index) {\n                this.agency_fedral.splice(index, 1);\n            },\n            submit() {\n                let vm = this;\n                if (vm.status) {\n                    vm.createAlerts();\n                } else {\n                    vm.updateAlerts();\n                }\n            },\n            filterCategory() {\n                if (this.searchagencycategory == \"\") {\n                    this.categorys = this.allFilterCategroy;\n                }\n                this.categorys = this.allFilterCategroy.filter((entry) => {\n                    return entry.category_name.toLowerCase().includes(this.searchagencycategory.toLowerCase());\n                });\n            },\n            callFunction: function () {\n                var currentDateWithFormat = new Date().toJSON().slice(0, 10).replace(/-/g, \"/\");\n                this.savealert.created_on = currentDateWithFormat;\n                this.savealert.updated_on = currentDateWithFormat;\n            },\n\n            getcategory() {\n                let vm = this;\n                vm.$store\n                    .dispatch(\"post\", { uri: \"getCategory\" })\n                    .then(function (response) {\n                        vm.categorys = response.data.data;\n                        vm.categorycount = vm.categorys.length;\n                        vm.allFilterCategroy = vm.categorys;\n                    })\n                    .catch(function (error) {\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n            getCountry() {\n                let vm = this;\n                vm.$store\n                    .dispatch(\"post\", { uri: \"getCountry\" })\n                    .then(function (response) {\n                        vm.countrys = response.data.data;\n                    })\n                    .catch(function (error) {\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n            selectCategory() {\n                this.selectedcategory = [];\n                this.selectAllcategory = false;\n                if (!this.selectAllcategory) {\n                    for (let i in this.categorys) {\n                        this.selectedcategory.push(this.categorys[i].category_id);\n                    }\n                    this.searchfilter.tdr_category = this.selectedcategory;\n                }\n            },\n\n            DeselectCategory() {\n                this.selectedcategory = [];\n                this.searchfilter.tdr_category = [];\n            },\n            updateCheckallCategory(category) {\n                if (this.categorys.length == this.selectedcategory.length) {\n                    this.selectedcategory = [];\n                    this.selectAllcategory = true;\n                    this.searchfilter.tdr_category = this.selectedcategory;\n                } else {\n                    this.selectAllcategory = false;\n\n                    this.searchfilter.tdr_category = this.selectedcategory;\n                }\n            },\n            selectCountryState() {\n                this.stateSelected = [];\n                this.stateselectAll = false;\n                if (!this.stateselectAll) {\n                    this.filters.filter((x) => x.table === \"state\").forEach((x) => this.filters.splice(this.filters.indexOf(x), 1));\n                    for (let i in this.state_country1) {\n                        this.stateSelected.push(this.state_country[i].state_id);\n                        this.filters.push({\n                            table: \"state\",\n                            id: this.state_country[i].state_id,\n                            name: this.state_country[i].state_name,\n                        });\n                    }\n                    // alert(this.selected);\n                    this.searchfilter.tdr_state = this.stateSelected;\n                    this.getfedralDocument();\n                }\n            },\n            DeselectCountryState() {\n                this.stateSelected = [];\n                this.searchfilter.tdr_state = [];\n                this.filters.filter((x) => x.table === \"state\").forEach((x) => this.filters.splice(this.filters.indexOf(x), 1));\n                this.getfedralDocument();\n            },\n            updateCountryStateCheckall(state) {\n                if (this.state_country.length == this.stateSelected.length) {\n                    this.stateSelected = [];\n                    this.stateselectAll = true;\n                    this.searchfilter.tdr_state = this.stateSelected;\n                    this.getfedralDocument();\n                    if (this.stateselectAll == true) {\n                        this.filters.filter((x) => x.table === \"state\").forEach((x) => this.filters.splice(this.filters.indexOf(x), 1));\n                        for (let i in this.state_country) {\n                            this.stateSelected.push(this.state_country[i].state_id);\n                            // this.statefilter.push(this.state_country[i]);\n                            this.filters.push({\n                                table: \"state\",\n                                id: this.state_country[i].state_id,\n                                name: this.state_country[i].state_name,\n                            });\n                        }\n                    }\n                } else {\n                    let i = this.filters.findIndex((data) => data.id === state.state_id);\n                    if (i !== -1) {\n                        this.filters.splice(i, 1);\n                    } else {\n                        this.filters.push({\n                            table: \"state\",\n                            id: state.state_id,\n                            name: state.state_name,\n                        });\n                        // this.statefilter.push(state);\n                        this.filters = this.filters.filter((state, index) => this.filters.indexOf(state) === index);\n                    }\n                    this.stateselectAll = false;\n                    // alert(this.selected);\n                    this.searchfilter.tdr_state = this.stateSelected;\n\n                    // alert(this.selected.length);\n                }\n            },\n            getSateCountry() {\n                let vm = this;\n                if (vm.listcountry.country_id[0] !== \"\") {\n                    vm.searchfilter.tdr_country = vm.listcountry.country_id;\n                } else {\n                    vm.searchfilter.tdr_country = [];\n                }\n\n                vm.listcountry.country_id = Object.assign({}, [vm.liststate.country_id]);\n                let uri = \"getState\";\n                vm.$store\n                    .dispatch(\"post\", { uri: uri, data: vm.listcountry })\n                    .then(function (response) {\n                        vm.state_country1 = response.data.data;\n                        vm.statecount1 = vm.state_country1.length;\n                        vm.allFilterState = vm.state_country1;\n                    })\n                    .catch(function (error) {\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n\n            getFederal() {\n                let vm = this;\n                vm.$store\n                    .dispatch(\"post\", { uri: \"getAgencyFederal\" })\n                    .then(function (response) {\n                        vm.federal = response.data.data;\n                    })\n                    .catch(function (error) {\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n            getAllAgency() {\n                let vm = this;\n                vm.isLoading = true;\n                let uri = \"getAgency\";\n                vm.$store\n                    .dispatch(\"post\", { uri: uri })\n                    .then(function (response) {\n                        vm.isLoading = false;\n                        vm.filterAgency = response.data.data;\n                        vm.allFilterAgency = vm.filterAgency;\n                        vm.agencycount = vm.filterAgency.length;\n                    })\n                    .catch(function (error) {\n                        vm.isLoading = false;\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n            getSpecificAgency() {\n                let vm = this;\n                vm.isLoading = true;\n                let uri = \"getAgencyFederal\";\n                vm.$store\n                    .dispatch(\"post\", { uri: uri })\n                    .then(function (response) {\n                        vm.isLoading = false;\n                        vm.federal = response.data.data;\n                        vm.filterAgency = response.data.data;\n                        vm.allFilterAgency = vm.filterAgency;\n                        vm.agencycount = vm.filterAgency.length;\n                        //vm.getSavedsearch();\n                    })\n                    .catch(function (error) {\n                        vm.isLoading = false;\n                        vm.errors = error.response.data.errors;\n                        vm.$store.dispatch(\"error\", error.response.data.message);\n                    });\n            },\n\n            filter1Agency() {\n                if (this.searchagencyState == \"\") {\n                    this.filterAgency = this.allFilterAgency;\n                }\n                this.filterAgency = this.allFilterAgency.filter((entry) => {\n                    return entry.agency_name.toLowerCase().includes(this.searchagencyState.toLowerCase());\n                });\n            },\n            select() {\n                this.selected = [];\n                if (!this.selectAll) {\n                    for (let i in this.state_country) {\n                        this.selected.push(this.state_country[i].state_id);\n                    }\n                    // alert(this.selected);\n                    this.state_id = this.selected;\n                }\n            },\n            Deselect() {\n                this.selected = [];\n                this.state_id = [];\n            },\n            updateCheckall() {\n                if (this.state_country.length == this.selected.length) {\n                    this.selectAll = true;\n                    // alert(this.selected);\n                    //alert(this.options);\n                    this.state_id = this.selected;\n\n                    // alert(this.searchfilter.tdr_state);\n                } else {\n                    this.selectAll = false;\n                    // alert(this.selected);\n                    this.state_id = this.selected;\n\n                    // alert(this.selected.length);\n                }\n            },\n\n            // federal search subhash\n            selectState() {\n                this.selectedState = [];\n                if (!this.selectAllState) {\n                    for (let i in this.filterAgency) {\n                        this.selectedState.push(this.filterAgency[i].agency_name);\n                    }\n\n                    this.agency_fedral = this.selectedState;\n                }\n            },\n            DeselectState() {\n                this.selectedState = [];\n                this.agency_fedral = [];\n            },\n            updateCheckallState() {\n                if (this.filterAgency.length == this.selectedState.length) {\n                    this.selectAllState = true;\n                    this.agency_fedral = this.selectedState;\n                } else {\n                    this.selectAllState = false;\n\n                    this.agency_fedral = this.selectedState;\n                }\n            },\n\n            addTag(event) {\n                event.preventDefault();\n                let val = event.target.value.trim();\n                if (val.length > 0) {\n                    if (this.tags.length >= 1) {\n                        for (let i = 0; i < this.tags.length; i++) {\n                            if (this.tags[i] === val) {\n                                return false;\n                            }\n                        }\n                    }\n                    this.tags.push(val);\n                    event.target.value = \"\";\n                    console.log(this.tags);\n                }\n            },\n            removeTag(index) {\n                this.tags.splice(index, 1);\n            },\n            removeLastTag(event) {\n                if (event.target.value.length === 0) {\n                    this.removeTag(this.tags.length - 1);\n                }\n            },\n        },\n    };\n</script>\n\n<style scoped>\n    .btn-state {\n        background-color: white !important;\n        border: 1px solid #ced4da;\n        border-radius: 0.25rem;\n    }\n\n    .list-group-item-borderless {\n        border: 0px;\n    }\n\n    .scroll1 {\n        position: relative;\n        height: 160px;\n        overflow: hidden;\n        overflow-y: scroll;\n        color: rgb(89, 93, 110);\n        font-size: 14px;\n    }\n\n    .tag-input {\n        /* width: 50%; */\n        border: 1px solid #d9dfe7;\n        background: #fff;\n        border-radius: 4px;\n        font-size: 0.9em;\n        min-height: 45px;\n        box-sizing: border-box;\n        padding: 0 10px;\n\n        margin-bottom: 10px;\n    }\n\n    .tag-input__tag {\n        height: 24px;\n        /* color: white; */\n        float: left;\n        font-size: 14px;\n        margin-right: 10px;\n        background: #e1f1ff !important;\n        color: #00639a !important;\n        /* background-color: #667eea; */\n        border-radius: 10px;\n        margin-top: 10px;\n        line-height: 24px;\n        padding: 0 8px;\n    }\n\n    .tag-input__tag > span {\n        cursor: pointer;\n        opacity: 1;\n        display: inline-block;\n        margin-left: 8px;\n    }\n\n    .tag-input__text {\n        border: none;\n        outline: none;\n        font-size: 1em;\n        line-height: 40px;\n        background: none;\n    }\n\n    .dropdown-item {\n        display: block;\n        width: 100%;\n        padding: 0.25rem 1rem;\n        clear: both;\n        font-weight: 400;\n        color: #212529;\n        text-align: inherit;\n        text-decoration: none;\n        white-space: nowrap;\n        background-color: transparent;\n        border: 0;\n    }\n\n    .liststate {\n        max-height: 230px;\n        margin-bottom: 10px;\n        overflow-y: scroll;\n        -webkit-overflow-scrolling: touch;\n    }\n\n    .bg-opacity-10 {\n        --bs-bg-opacity: 0.1;\n    }\n\n    .treehght {\n        height: 287px !important;\n    }\n    .skeleton-loader {\n        height: 20px;\n        background: #e0e0e0;\n        margin: 10px 0;\n        border-radius: 4px;\n        animation: shimmer 1.5s infinite linear;\n    }\n\n    @keyframes shimmer {\n        0% {\n            background-position: -200px 0;\n        }\n        100% {\n            background-position: 200px 0;\n        }\n    }\n\n    .skeleton-loader {\n        background: linear-gradient(90deg, #e0e0e0 25%, #f2f2f2 50%, #e0e0e0 75%);\n        background-size: 400px 100%;\n    }\n\n    .dotted {\n        border-bottom: 1px dotted;\n    }\n\n    .dotted:hover {\n        border-bottom: 0px;\n    }\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}